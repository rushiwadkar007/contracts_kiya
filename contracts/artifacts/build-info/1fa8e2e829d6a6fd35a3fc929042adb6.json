{
	"id": "1fa8e2e829d6a6fd35a3fc929042adb6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: contracts/ERC20.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\n\n\n\ncontract MyToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {\n    constructor(address initialOwner)\n        ERC20(\"MyToken\", \"MTK\")\n        Ownable(initialOwner)\n        ERC20Permit(\"MyToken\")\n    {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":34470:41856  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":34470:41856  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220199e5c16c0a609694b06a2850b383b7e2227cb1ec9036699fc1b8e527b995bf464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220199e5c16c0a609694b06a2850b383b7e2227cb1ec9036699fc1b8e527b995bf464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP15 TLOAD AND 0xC0 0xA6 MULMOD PUSH10 0x4B06A2850B383B7E2227 0xCB 0x1E 0xC9 SUB PUSH7 0x99FC1B8E527B99 JUMPDEST DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "34470:7386:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;34470:7386:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220199e5c16c0a609694b06a2850b383b7e2227cb1ec9036699fc1b8e527b995bf464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP15 TLOAD AND 0xC0 0xA6 MULMOD PUSH10 0x4B06A2850B383B7E2227 0xCB 0x1E 0xC9 SUB PUSH7 0x99FC1B8E527B99 JUMPDEST DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "34470:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34470,
									"end": 41856,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220199e5c16c0a609694b06a2850b383b7e2227cb1ec9036699fc1b8e527b995bf464736f6c634300081a0033",
									".code": [
										{
											"begin": 34470,
											"end": 41856,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34470,
											"end": 41856,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3336,
								"contract": "contracts/ERC20_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 3338,
								"contract": "contracts/ERC20_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/ERC20_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/ERC20_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/ERC20_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/ERC20_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/ERC20_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/ERC20_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/ERC20_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/ERC20_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/ERC20_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/ERC20_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 818,
								"contract": "contracts/ERC20_flattened.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3336,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 3338,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3539,
								"contract": "contracts/ERC20_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":42084:56998  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":42084:56998  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206794e7d49e4706c01af450678f9996e89c0fd95777de2acd7fd7d5cef0d3ef8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206794e7d49e4706c01af450678f9996e89c0fd95777de2acd7fd7d5cef0d3ef8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x94E7D49E4706C01A DELEGATECALL POP PUSH8 0x8F9996E89C0FD957 PUSH24 0xDE2ACD7FD7D5CEF0D3EF8164736F6C634300081A00330000 ",
							"sourceMap": "42084:14914:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;42084:14914:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206794e7d49e4706c01af450678f9996e89c0fd95777de2acd7fd7d5cef0d3ef8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x94E7D49E4706C01A DELEGATECALL POP PUSH8 0x8F9996E89C0FD957 PUSH24 0xDE2ACD7FD7D5CEF0D3EF8164736F6C634300081A00330000 ",
							"sourceMap": "42084:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42084,
									"end": 56998,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206794e7d49e4706c01af450678f9996e89c0fd95777de2acd7fd7d5cef0d3ef8164736f6c634300081a0033",
									".code": [
										{
											"begin": 42084,
											"end": 56998,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 56998,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":61852:65087  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":61852:65087  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220da9e0e4a787c2570e4db6a3ee707262969a2f3927d939c16d91119d26ec4257064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220da9e0e4a787c2570e4db6a3ee707262969a2f3927d939c16d91119d26ec4257064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP15 0xE BLOBBASEFEE PUSH25 0x7C2570E4DB6A3EE707262969A2F3927D939C16D91119D26EC4 0x25 PUSH17 0x64736F6C634300081A0033000000000000 ",
							"sourceMap": "61852:3235:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;61852:3235:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220da9e0e4a787c2570e4db6a3ee707262969a2f3927d939c16d91119d26ec4257064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP15 0xE BLOBBASEFEE PUSH25 0x7C2570E4DB6A3EE707262969A2F3927D939C16D91119D26EC4 0x25 PUSH17 0x64736F6C634300081A0033000000000000 ",
							"sourceMap": "61852:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61852,
									"end": 65087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da9e0e4a787c2570e4db6a3ee707262969a2f3927d939c16d91119d26ec4257064736f6c634300081a0033",
									".code": [
										{
											"begin": 61852,
											"end": 65087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61852,
											"end": 65087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":84754:85445  contract MyToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/ERC20_flattened.sol\":84838:84971  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20_flattened.sol\":83445:83497  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20_flattened.sol\":83484:83488  name */\n  dup1\n    /* \"contracts/ERC20_flattened.sol\":77289:77720  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20_flattened.sol\":84920:84932  initialOwner */\n  dup4\n    /* \"contracts/ERC20_flattened.sol\":12757:12870  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20_flattened.sol\":12831:12836  name_ */\n  dup2\n    /* \"contracts/ERC20_flattened.sol\":12823:12828  _name */\n  0x03\n    /* \"contracts/ERC20_flattened.sol\":12823:12836  _name = name_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/ERC20_flattened.sol\":12846:12853  _symbol */\n  0x04\n    /* \"contracts/ERC20_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_13\n    /* \"contracts/ERC20_flattened.sol\":12856:12863  symbol_ */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":12846:12853  _symbol */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n  pop\n    /* \"contracts/ERC20_flattened.sol\":24352:24359  _paused */\n  0x05\n    /* \"contracts/ERC20_flattened.sol\":24352:24367  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC20_flattened.sol\":28417:28443  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/ERC20_flattened.sol\":28413:28508  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"contracts/ERC20_flattened.sol\":28466:28497  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":28494:28495  0 */\n  0x00\n    /* \"contracts/ERC20_flattened.sol\":28466:28497  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"contracts/ERC20_flattened.sol\":28466:28497  OwnableInvalidOwner(address(0)) */\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC20_flattened.sol\":28413:28508  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"contracts/ERC20_flattened.sol\":28517:28549  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"contracts/ERC20_flattened.sol\":28536:28548  initialOwner */\n  dup2\n    /* \"contracts/ERC20_flattened.sol\":28517:28535  _transferOwnership */\n  tag_20\n    /* \"contracts/ERC20_flattened.sol\":28517:28549  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/ERC20_flattened.sol\":77362:77407  name.toShortStringWithFallback(_nameFallback) */\n  tag_22\n    /* \"contracts/ERC20_flattened.sol\":77362:77366  name */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":77393:77406  _nameFallback */\n  0x06\n    /* \"contracts/ERC20_flattened.sol\":77362:77392  name.toShortStringWithFallback */\n  tag_23\n    /* \"contracts/ERC20_flattened.sol\":77362:77407  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_22:\n    /* \"contracts/ERC20_flattened.sol\":77354:77407  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":77428:77479  version.toShortStringWithFallback(_versionFallback) */\n  tag_24\n    /* \"contracts/ERC20_flattened.sol\":77428:77435  version */\n  dup2\n    /* \"contracts/ERC20_flattened.sol\":77462:77478  _versionFallback */\n  0x07\n    /* \"contracts/ERC20_flattened.sol\":77428:77461  version.toShortStringWithFallback */\n  tag_23\n    /* \"contracts/ERC20_flattened.sol\":77428:77479  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_24:\n    /* \"contracts/ERC20_flattened.sol\":77417:77479  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":77503:77525  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/ERC20_flattened.sol\":77489:77525  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":77552:77577  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"contracts/ERC20_flattened.sol\":77535:77577  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":77605:77618  block.chainid */\n  chainid\n    /* \"contracts/ERC20_flattened.sol\":77588:77618  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":77653:77676  _buildDomainSeparator() */\n  tag_25\n    /* \"contracts/ERC20_flattened.sol\":78187:78198  _hashedName */\n  mload(0xe0)\n    /* \"contracts/ERC20_flattened.sol\":78200:78214  _hashedVersion */\n  mload(0x0100)\n    /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"contracts/ERC20_flattened.sol\":76040:76135  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":3417:3442   */\n  mstore\n    /* \"#utility.yul\":3458:3476   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":3451:3485   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":3501:3519   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":3494:3528   */\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":78216:78229  block.chainid */\n  chainid\n    /* \"#utility.yul\":3544:3562   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":3537:3571   */\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":78239:78243  this */\n  address\n    /* \"#utility.yul\":3587:3606   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":3580:3641   */\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":78129:78136  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":3389:3408   */\n  0xc0\n  add\n    /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/ERC20_flattened.sol\":78155:78246  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ERC20_flattened.sol\":78148:78246  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"contracts/ERC20_flattened.sol\":78074:78253  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"contracts/ERC20_flattened.sol\":77653:77676  _buildDomainSeparator() */\ntag_25:\n    /* \"contracts/ERC20_flattened.sol\":77628:77676  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20_flattened.sol\":77708:77712  this */\n  address\n    /* \"contracts/ERC20_flattened.sol\":77686:77713  _cachedThis = address(this) */\n  0xc0\n  mstore\n  pop\n    /* \"contracts/ERC20_flattened.sol\":84754:85445  contract MyToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {... */\n  tag_54\n  swap1\n  pop\n  jump\n    /* \"contracts/ERC20_flattened.sol\":30056:30243  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC20_flattened.sol\":30164:30181  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n  0x0100\n    /* \"contracts/ERC20_flattened.sol\":30164:30181  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/ERC20_flattened.sol\":30129:30145  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/ERC20_flattened.sol\":30119:30243  {... */\n  pop\n    /* \"contracts/ERC20_flattened.sol\":30056:30243  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC20_flattened.sol\":71939:72279  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_23:\n    /* \"contracts/ERC20_flattened.sol\":72035:72046  ShortString */\n  0x00\n    /* \"contracts/ERC20_flattened.sol\":72084:72086  32 */\n  0x20\n    /* \"contracts/ERC20_flattened.sol\":72068:72073  value */\n  dup4\n    /* \"contracts/ERC20_flattened.sol\":72062:72081  bytes(value).length */\n  mload\n    /* \"contracts/ERC20_flattened.sol\":72062:72086  bytes(value).length < 32 */\n  lt\n    /* \"contracts/ERC20_flattened.sol\":72058:72273  if (bytes(value).length < 32) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"contracts/ERC20_flattened.sol\":72109:72129  toShortString(value) */\n  tag_33\n    /* \"contracts/ERC20_flattened.sol\":72123:72128  value */\n  dup4\n    /* \"contracts/ERC20_flattened.sol\":72109:72122  toShortString */\n  tag_34\n    /* \"contracts/ERC20_flattened.sol\":72109:72129  toShortString(value) */\n  jump\t// in\ntag_33:\n    /* \"contracts/ERC20_flattened.sol\":72102:72129  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_35)\n    /* \"contracts/ERC20_flattened.sol\":72058:72273  if (bytes(value).length < 32) {... */\ntag_32:\n    /* \"contracts/ERC20_flattened.sol\":72186:72191  store */\n  dup2\n    /* \"contracts/ERC20_flattened.sol\":72160:72206  StorageSlot.getStringSlot(store).value = value */\n  tag_38\n    /* \"contracts/ERC20_flattened.sol\":72201:72206  value */\n  dup5\n    /* \"contracts/ERC20_flattened.sol\":72186:72191  store */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":72160:72206  StorageSlot.getStringSlot(store).value = value */\n  tag_12\n  jump\t// in\ntag_38:\n  pop\n    /* \"contracts/ERC20_flattened.sol\":70415:70481  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"contracts/ERC20_flattened.sol\":72058:72273  if (bytes(value).length < 32) {... */\ntag_35:\n    /* \"contracts/ERC20_flattened.sol\":71939:72279  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20_flattened.sol\":70733:71019  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_34:\n    /* \"contracts/ERC20_flattened.sol\":70798:70809  ShortString */\n  0x00\n    /* \"contracts/ERC20_flattened.sol\":70821:70838  bytes memory bstr */\n  dup1\n    /* \"contracts/ERC20_flattened.sol\":70847:70850  str */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":70821:70851  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"contracts/ERC20_flattened.sol\":70879:70881  31 */\n  0x1f\n    /* \"contracts/ERC20_flattened.sol\":70865:70869  bstr */\n  dup2\n    /* \"contracts/ERC20_flattened.sol\":70865:70876  bstr.length */\n  mload\n    /* \"contracts/ERC20_flattened.sol\":70865:70881  bstr.length > 31 */\n  gt\n    /* \"contracts/ERC20_flattened.sol\":70861:70933  if (bstr.length > 31) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"contracts/ERC20_flattened.sol\":70918:70921  str */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":70904:70922  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_45\n  jump\t// in\n    /* \"contracts/ERC20_flattened.sol\":70861:70933  if (bstr.length > 31) {... */\ntag_43:\n    /* \"contracts/ERC20_flattened.sol\":70999:71010  bstr.length */\n  dup1\n  mload\n    /* \"contracts/ERC20_flattened.sol\":70982:70995  bytes32(bstr) */\n  tag_46\n    /* \"contracts/ERC20_flattened.sol\":70999:71003  bstr */\n  dup3\n    /* \"contracts/ERC20_flattened.sol\":70982:70995  bytes32(bstr) */\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"contracts/ERC20_flattened.sol\":70974:71010  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"contracts/ERC20_flattened.sol\":70733:71019  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_56:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_57:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_49:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_50:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_60:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_61:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_52:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_65:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_66:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_64:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_12:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_72\n  tag_49\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1850:1947   */\n  tag_73\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_74\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_50\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_52\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_68)\n    /* \"#utility.yul\":2039:2688   */\ntag_76:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_80:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_83:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3652:4070   */\ntag_45:\n    /* \"#utility.yul\":3801:3803   */\n  0x20\n    /* \"#utility.yul\":3790:3799   */\n  dup2\n    /* \"#utility.yul\":3783:3804   */\n  mstore\n    /* \"#utility.yul\":3764:3768   */\n  0x00\n    /* \"#utility.yul\":3833:3839   */\n  dup3\n    /* \"#utility.yul\":3827:3840   */\n  mload\n    /* \"#utility.yul\":3876:3882   */\n  dup1\n    /* \"#utility.yul\":3871:3873   */\n  0x20\n    /* \"#utility.yul\":3860:3869   */\n  dup5\n    /* \"#utility.yul\":3856:3874   */\n  add\n    /* \"#utility.yul\":3849:3883   */\n  mstore\n    /* \"#utility.yul\":3935:3941   */\n  dup1\n    /* \"#utility.yul\":3930:3932   */\n  0x20\n    /* \"#utility.yul\":3922:3928   */\n  dup6\n    /* \"#utility.yul\":3918:3933   */\n  add\n    /* \"#utility.yul\":3913:3915   */\n  0x40\n    /* \"#utility.yul\":3902:3911   */\n  dup6\n    /* \"#utility.yul\":3898:3916   */\n  add\n    /* \"#utility.yul\":3892:3942   */\n  mcopy\n    /* \"#utility.yul\":3991:3992   */\n  0x00\n    /* \"#utility.yul\":3986:3988   */\n  0x40\n    /* \"#utility.yul\":3977:3983   */\n  dup3\n    /* \"#utility.yul\":3966:3975   */\n  dup6\n    /* \"#utility.yul\":3962:3984   */\n  add\n    /* \"#utility.yul\":3958:3989   */\n  add\n    /* \"#utility.yul\":3951:3993   */\n  mstore\n    /* \"#utility.yul\":4061:4063   */\n  0x40\n    /* \"#utility.yul\":4054:4056   */\n  0x1f\n    /* \"#utility.yul\":4050:4057   */\n  not\n    /* \"#utility.yul\":4045:4047   */\n  0x1f\n    /* \"#utility.yul\":4037:4043   */\n  dup4\n    /* \"#utility.yul\":4033:4048   */\n  add\n    /* \"#utility.yul\":4029:4058   */\n  and\n    /* \"#utility.yul\":4018:4027   */\n  dup5\n    /* \"#utility.yul\":4014:4059   */\n  add\n    /* \"#utility.yul\":4010:4064   */\n  add\n    /* \"#utility.yul\":4002:4064   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":3652:4070   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4075:4372   */\ntag_47:\n    /* \"#utility.yul\":4193:4205   */\n  dup1\n  mload\n    /* \"#utility.yul\":4240:4244   */\n  0x20\n    /* \"#utility.yul\":4229:4245   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":4223:4246   */\n  mload\n  swap2\n    /* \"#utility.yul\":4193:4205   */\n  swap1\n    /* \"#utility.yul\":4258:4274   */\n  dup2\n  lt\n    /* \"#utility.yul\":4255:4366   */\n  iszero\n  tag_61\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":4332:4336   */\n  0x20\n    /* \"#utility.yul\":4328:4345   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":4325:4326   */\n  0x03\n    /* \"#utility.yul\":4321:4346   */\n  shl\n    /* \"#utility.yul\":4317:4355   */\n  shl\n    /* \"#utility.yul\":4306:4356   */\n  and\n  swap2\n    /* \"#utility.yul\":4075:4372   */\n  swap1\n  pop\n  jump\t// out\ntag_54:\n    /* \"contracts/ERC20_flattened.sol\":84754:85445  contract MyToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xef17f12455e22a45134579834cdca993c5eec3070954e76052dcfac9f22697b4\")\n  0x00\n  assignImmutable(\"0xb8163922f365f2d54f6122835c04019c69b181c4b5bf7a62d07ca62e91817bd9\")\n  0x00\n  assignImmutable(\"0xc9c370779fd62a0c7c118a2246ccad4c103473123315c14d4e476e7f4b22843f\")\n  0x00\n  assignImmutable(\"0xf40d89e88f976c0e4eebddab04ab11e8eb9a648fae2f79611f9b9f54d5ffefc8\")\n  0x00\n  assignImmutable(\"0xce191cb8321ca757450c20e87b57fa44746b6a87612dab9cf25801eef5ed67f8\")\n  0x00\n  assignImmutable(\"0x1a100bb1148e9e506f9ba8ec1947d4f84b922b6e9d33f30c8d12f2e351bcf10c\")\n  0x00\n  assignImmutable(\"0x29952515f5d57954abac5ab7b1327bd7bcbb5425c05d93673edc46b02d7cb56d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":84754:85445  contract MyToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x3644e515\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1181:1195   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1174:1196   */\n      iszero\n        /* \"#utility.yul\":1156:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"contracts/ERC20_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_30\n        /* \"#utility.yul\":1016:1203   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"contracts/ERC20_flattened.sol\":14083:14095  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1354:1379   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"contracts/ERC20_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/ERC20_flattened.sol\":13936:13938  18 */\n      0x12\n        /* \"#utility.yul\":1911:1947   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1899:1901   */\n      0x20\n        /* \"#utility.yul\":1884:1902   */\n      add\n        /* \"contracts/ERC20_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n      tag_30\n        /* \"#utility.yul\":1769:1953   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":84527:84639  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_38\n      tag_52\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":85042:85105  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ERC20_flattened.sol\":85111:85204  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_55\n      tag_58\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":22580:22667  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_55\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":24971:25055  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"contracts/ERC20_flattened.sol\":25041:25048  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC20_flattened.sol\":24971:25055  function paused() public view virtual returns (bool) {... */\n      jump(tag_32)\n        /* \"contracts/ERC20_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_38\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":14251:14269  _balances[account] */\n      and\n        /* \"contracts/ERC20_flattened.sol\":14225:14232  uint256 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":14251:14269  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":29437:29538  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_55\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":22983:23141  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      tag_55\n      tag_75\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":84277:84420  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_16:\n      tag_38\n      tag_78\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":84977:85036  function pause() public onlyOwner {... */\n    tag_17:\n      tag_55\n      tag_82\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":79105:79662  function eip712Domain()... */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_30\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":28782:28867  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"contracts/ERC20_flattened.sol\":28854:28860  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC20_flattened.sol\":28782:28867  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3969:4001   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3951:4002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3939:3941   */\n      0x20\n        /* \"#utility.yul\":3924:3942   */\n      add\n        /* \"contracts/ERC20_flattened.sol\":28782:28867  function owner() public view virtual returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_28\n      tag_92\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_32\n      tag_95\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":83551:84223  function permit(... */\n    tag_22:\n      tag_55\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_38\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":14787:14794  uint256 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":29687:29902  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_55\n      tag_108\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"contracts/ERC20_flattened.sol\":12980:12993  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":13012:13017  _name */\n      0x03\n        /* \"contracts/ERC20_flattened.sol\":13005:13017  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"contracts/ERC20_flattened.sol\":15227:15231  bool */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      tag_120\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":15297:15304  spender */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":15306:15311  value */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":15281:15289  _approve */\n      tag_121\n        /* \"contracts/ERC20_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC20_flattened.sol\":15329:15333  true */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":15322:15333  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_117:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"contracts/ERC20_flattened.sol\":15987:15991  bool */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      tag_125\n        /* \"contracts/ERC20_flattened.sol\":16059:16063  from */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":16074:16079  value */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":16043:16058  _spendAllowance */\n      tag_126\n        /* \"contracts/ERC20_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ERC20_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      tag_127\n        /* \"contracts/ERC20_flattened.sol\":16100:16104  from */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":16106:16108  to */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":16110:16115  value */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":16090:16099  _transfer */\n      tag_128\n        /* \"contracts/ERC20_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"contracts/ERC20_flattened.sol\":16133:16137  true */\n      0x01\n      swap5\n        /* \"contracts/ERC20_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":84527:84639  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_52:\n        /* \"contracts/ERC20_flattened.sol\":84586:84593  bytes32 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":84612:84632  _domainSeparatorV4() */\n      tag_131\n        /* \"contracts/ERC20_flattened.sol\":84612:84630  _domainSeparatorV4 */\n      tag_132\n        /* \"contracts/ERC20_flattened.sol\":84612:84632  _domainSeparatorV4() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ERC20_flattened.sol\":84605:84632  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":84527:84639  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":85042:85105  function unpause() public onlyOwner {... */\n    tag_56:\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      tag_134\n        /* \"contracts/ERC20_flattened.sol\":28675:28686  _checkOwner */\n      tag_135\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/ERC20_flattened.sol\":85088:85098  _unpause() */\n      tag_137\n        /* \"contracts/ERC20_flattened.sol\":85088:85096  _unpause */\n      tag_138\n        /* \"contracts/ERC20_flattened.sol\":85088:85098  _unpause() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/ERC20_flattened.sol\":85042:85105  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":85111:85204  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_59:\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      tag_140\n        /* \"contracts/ERC20_flattened.sol\":28675:28686  _checkOwner */\n      tag_135\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/ERC20_flattened.sol\":85180:85197  _mint(to, amount) */\n      tag_142\n        /* \"contracts/ERC20_flattened.sol\":85186:85188  to */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":85190:85196  amount */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":85180:85185  _mint */\n      tag_143\n        /* \"contracts/ERC20_flattened.sol\":85180:85197  _mint(to, amount) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC20_flattened.sol\":85111:85204  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":22580:22667  function burn(uint256 value) public virtual {... */\n    tag_63:\n        /* \"contracts/ERC20_flattened.sol\":22634:22660  _burn(_msgSender(), value) */\n      tag_145\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":22654:22659  value */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":22634:22639  _burn */\n      tag_147\n        /* \"contracts/ERC20_flattened.sol\":22634:22660  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC20_flattened.sol\":22580:22667  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":29437:29538  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      tag_151\n        /* \"contracts/ERC20_flattened.sol\":28675:28686  _checkOwner */\n      tag_135\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ERC20_flattened.sol\":29501:29531  _transferOwnership(address(0)) */\n      tag_137\n        /* \"contracts/ERC20_flattened.sol\":29528:29529  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":29501:29519  _transferOwnership */\n      tag_154\n        /* \"contracts/ERC20_flattened.sol\":29501:29531  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":22983:23141  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_76:\n        /* \"contracts/ERC20_flattened.sol\":23058:23103  _spendAllowance(account, _msgSender(), value) */\n      tag_156\n        /* \"contracts/ERC20_flattened.sol\":23074:23081  account */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":23097:23102  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":23058:23073  _spendAllowance */\n      tag_126\n        /* \"contracts/ERC20_flattened.sol\":23058:23103  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ERC20_flattened.sol\":23113:23134  _burn(account, value) */\n      tag_142\n        /* \"contracts/ERC20_flattened.sol\":23119:23126  account */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":23128:23133  value */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":23113:23118  _burn */\n      tag_147\n        /* \"contracts/ERC20_flattened.sol\":23113:23134  _burn(account, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":84277:84420  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":81217:81231  _nonces[owner] */\n      dup2\n      and\n        /* \"contracts/ERC20_flattened.sol\":84368:84375  uint256 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":81217:81231  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":81217:81224  _nonces */\n      0x08\n        /* \"contracts/ERC20_flattened.sol\":81217:81231  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20_flattened.sol\":84394:84413  super.nonces(owner) */\n      tag_117\n        /* \"contracts/ERC20_flattened.sol\":81131:81238  function nonces(address owner) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":84977:85036  function pause() public onlyOwner {... */\n    tag_82:\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      tag_163\n        /* \"contracts/ERC20_flattened.sol\":28675:28686  _checkOwner */\n      tag_135\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/ERC20_flattened.sol\":85021:85029  _pause() */\n      tag_137\n        /* \"contracts/ERC20_flattened.sol\":85021:85027  _pause */\n      tag_166\n        /* \"contracts/ERC20_flattened.sol\":85021:85029  _pause() */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":79105:79662  function eip712Domain()... */\n    tag_84:\n        /* \"contracts/ERC20_flattened.sol\":79203:79216  bytes1 fields */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":79230:79248  string memory name */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":79262:79283  string memory version */\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":79297:79312  uint256 chainId */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":79326:79351  address verifyingContract */\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":79365:79377  bytes32 salt */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":79391:79418  uint256[] memory extensions */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":79494:79507  _EIP712Name() */\n      tag_168\n        /* \"contracts/ERC20_flattened.sol\":79494:79505  _EIP712Name */\n      tag_169\n        /* \"contracts/ERC20_flattened.sol\":79494:79507  _EIP712Name() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/ERC20_flattened.sol\":79521:79537  _EIP712Version() */\n      tag_170\n        /* \"contracts/ERC20_flattened.sol\":79521:79535  _EIP712Version */\n      tag_171\n        /* \"contracts/ERC20_flattened.sol\":79521:79537  _EIP712Version() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC20_flattened.sol\":79629:79645  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC20_flattened.sol\":79613:79614  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":79629:79645  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"contracts/ERC20_flattened.sol\":79443:79655  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79551:79564  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79586:79590  this */\n      address\n      swap7\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79613:79614  0 */\n      swap5\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79629:79645  new uint256[](0) */\n      swap3\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79443:79655  return (... */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":79105:79662  function eip712Domain()... */\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_92:\n        /* \"contracts/ERC20_flattened.sol\":13184:13197  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":13216:13223  _symbol */\n      0x04\n        /* \"contracts/ERC20_flattened.sol\":13209:13223  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_96:\n        /* \"contracts/ERC20_flattened.sol\":14540:14544  bool */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      tag_120\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":14611:14613  to */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":14615:14620  value */\n      dup6\n        /* \"contracts/ERC20_flattened.sol\":14594:14603  _transfer */\n      tag_128\n        /* \"contracts/ERC20_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":83551:84223  function permit(... */\n    tag_101:\n        /* \"contracts/ERC20_flattened.sol\":83772:83780  deadline */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":83754:83769  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20_flattened.sol\":83754:83780  block.timestamp > deadline */\n      gt\n        /* \"contracts/ERC20_flattened.sol\":83750:83847  if (block.timestamp > deadline) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":83803:83836  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      shl(0xe1, 0x313c8981)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":83803:83836  ERC2612ExpiredSignature(deadline) */\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20_flattened.sol\":83750:83847  if (block.timestamp > deadline) {... */\n    tag_187:\n        /* \"contracts/ERC20_flattened.sol\":83857:83875  bytes32 structHash */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":82893:82988  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/ERC20_flattened.sol\":83916:83921  owner */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":83923:83930  spender */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":83932:83937  value */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":83939:83955  _useNonce(owner) */\n      tag_189\n        /* \"contracts/ERC20_flattened.sol\":83949:83954  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":81714:81728  _nonces[owner] */\n      and\n        /* \"contracts/ERC20_flattened.sol\":81412:81419  uint256 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":81714:81728  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":81714:81721  _nonces */\n      0x08\n        /* \"contracts/ERC20_flattened.sol\":81714:81728  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":81714:81730  _nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":81352:81747  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":83939:83955  _useNonce(owner) */\n    tag_189:\n        /* \"contracts/ERC20_flattened.sol\":83888:83966  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":5990:6015   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6051:6083   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":6031:6049   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":6024:6084   */\n      mstore\n        /* \"#utility.yul\":6120:6152   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6100:6118   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":6093:6153   */\n      mstore\n        /* \"#utility.yul\":6169:6187   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":6162:6196   */\n      mstore\n        /* \"#utility.yul\":6212:6231   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":6205:6240   */\n      mstore\n        /* \"#utility.yul\":6256:6275   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":6249:6284   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":5962:5981   */\n      0xe0\n      add\n        /* \"contracts/ERC20_flattened.sol\":83888:83966  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":83878:83967  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":83857:83967  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":83978:83990  bytes32 hash */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":83993:84021  _hashTypedDataV4(structHash) */\n      tag_193\n        /* \"contracts/ERC20_flattened.sol\":84010:84020  structHash */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":83993:84009  _hashTypedDataV4 */\n      tag_194\n        /* \"contracts/ERC20_flattened.sol\":83993:84021  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/ERC20_flattened.sol\":83978:84021  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":84032:84046  address signer */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":84049:84077  ECDSA.recover(hash, v, r, s) */\n      tag_195\n        /* \"contracts/ERC20_flattened.sol\":84063:84067  hash */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":84069:84070  v */\n      dup8\n        /* \"contracts/ERC20_flattened.sol\":84072:84073  r */\n      dup8\n        /* \"contracts/ERC20_flattened.sol\":84075:84076  s */\n      dup8\n        /* \"contracts/ERC20_flattened.sol\":84049:84062  ECDSA.recover */\n      tag_196\n        /* \"contracts/ERC20_flattened.sol\":84049:84077  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/ERC20_flattened.sol\":84032:84077  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":84101:84106  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":84091:84106  signer != owner */\n      and\n        /* \"contracts/ERC20_flattened.sol\":84091:84097  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":84091:84106  signer != owner */\n      and\n      eq\n        /* \"contracts/ERC20_flattened.sol\":84087:84175  if (signer != owner) {... */\n      tag_197\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":84129:84164  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      shl(0xe1, 0x25c00723)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6487:6519   */\n      dup1\n      dup4\n      and\n        /* \"contracts/ERC20_flattened.sol\":84129:84164  ERC2612InvalidSigner(signer, owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6469:6520   */\n      mstore\n        /* \"#utility.yul\":6556:6588   */\n      dup12\n      and\n        /* \"#utility.yul\":6536:6554   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6529:6589   */\n      mstore\n        /* \"#utility.yul\":6442:6460   */\n      0x44\n      add\n        /* \"contracts/ERC20_flattened.sol\":84129:84164  ERC2612InvalidSigner(signer, owner) */\n      tag_188\n        /* \"#utility.yul\":6295:6595   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":84087:84175  if (signer != owner) {... */\n    tag_197:\n        /* \"contracts/ERC20_flattened.sol\":84185:84216  _approve(owner, spender, value) */\n      tag_200\n        /* \"contracts/ERC20_flattened.sol\":84194:84199  owner */\n      dup11\n        /* \"contracts/ERC20_flattened.sol\":84201:84208  spender */\n      dup11\n        /* \"contracts/ERC20_flattened.sol\":84210:84215  value */\n      dup11\n        /* \"contracts/ERC20_flattened.sol\":84185:84193  _approve */\n      tag_121\n        /* \"contracts/ERC20_flattened.sol\":84185:84216  _approve(owner, spender, value) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ERC20_flattened.sol\":83740:84223  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20_flattened.sol\":83551:84223  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":29687:29902  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      tag_203\n        /* \"contracts/ERC20_flattened.sol\":28675:28686  _checkOwner */\n      tag_135\n        /* \"contracts/ERC20_flattened.sol\":28675:28688  _checkOwner() */\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":29771:29793  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/ERC20_flattened.sol\":29767:29858  if (newOwner == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":29816:29847  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":29844:29845  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":29816:29847  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":29816:29847  OwnableInvalidOwner(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":29767:29858  if (newOwner == address(0)) {... */\n    tag_205:\n        /* \"contracts/ERC20_flattened.sol\":29867:29895  _transferOwnership(newOwner) */\n      tag_145\n        /* \"contracts/ERC20_flattened.sol\":29886:29894  newOwner */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":29867:29885  _transferOwnership */\n      tag_154\n        /* \"contracts/ERC20_flattened.sol\":29867:29895  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_121:\n        /* \"contracts/ERC20_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      tag_210\n        /* \"contracts/ERC20_flattened.sol\":19943:19948  owner */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":19950:19957  spender */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":19959:19964  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":19966:19970  true */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":19934:19942  _approve */\n      tag_211\n        /* \"contracts/ERC20_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/ERC20_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/ERC20_flattened.sol\":21623:21647  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/ERC20_flattened.sol\":21689:21726  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/ERC20_flattened.sol\":21685:21995  if (currentAllowance != type(uint256).max) {... */\n      tag_218\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":21765:21770  value */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":21746:21762  currentAllowance */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":21746:21770  currentAllowance < value */\n      lt\n        /* \"contracts/ERC20_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6820:6852   */\n      dup5\n      and\n        /* \"contracts/ERC20_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6802:6853   */\n      mstore\n        /* \"#utility.yul\":6869:6887   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6862:6896   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6912:6930   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6905:6939   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6775:6793   */\n      0x64\n      add\n        /* \"contracts/ERC20_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_188\n        /* \"#utility.yul\":6600:6945   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n    tag_215:\n        /* \"contracts/ERC20_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      tag_218\n        /* \"contracts/ERC20_flattened.sol\":21922:21927  owner */\n      dup5\n        /* \"contracts/ERC20_flattened.sol\":21929:21936  spender */\n      dup5\n        /* \"contracts/ERC20_flattened.sol\":21957:21962  value */\n      dup5\n        /* \"contracts/ERC20_flattened.sol\":21938:21954  currentAllowance */\n      dup5\n        /* \"contracts/ERC20_flattened.sol\":21938:21962  currentAllowance - value */\n      sub\n        /* \"contracts/ERC20_flattened.sol\":21964:21969  false */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":21913:21921  _approve */\n      tag_211\n        /* \"contracts/ERC20_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/ERC20_flattened.sol\":21613:22001  {... */\n      pop\n        /* \"contracts/ERC20_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":16517:16817  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":16600:16618  from == address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20_flattened.sol\":16596:16682  if (from == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":16668:16669  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":16596:16682  if (from == address(0)) {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":16695:16711  to == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":16691:16777  if (to == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":16763:16764  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":16691:16777  if (to == address(0)) {... */\n    tag_222:\n        /* \"contracts/ERC20_flattened.sol\":16786:16810  _update(from, to, value) */\n      tag_210\n        /* \"contracts/ERC20_flattened.sol\":16794:16798  from */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":16800:16802  to */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":16804:16809  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":16786:16793  _update */\n      tag_225\n        /* \"contracts/ERC20_flattened.sol\":16786:16810  _update(from, to, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":77806:78068  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_132:\n        /* \"contracts/ERC20_flattened.sol\":77859:77866  bytes32 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":77890:77894  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":77899:77910  _cachedThis */\n      immutable(\"0xce191cb8321ca757450c20e87b57fa44746b6a87612dab9cf25801eef5ed67f8\")\n        /* \"contracts/ERC20_flattened.sol\":77882:77910  address(this) == _cachedThis */\n      and\n      eq\n        /* \"contracts/ERC20_flattened.sol\":77882:77945  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/ERC20_flattened.sol\":77931:77945  _cachedChainId */\n      immutable(\"0x1a100bb1148e9e506f9ba8ec1947d4f84b922b6e9d33f30c8d12f2e351bcf10c\")\n        /* \"contracts/ERC20_flattened.sol\":77914:77927  block.chainid */\n      chainid\n        /* \"contracts/ERC20_flattened.sol\":77914:77945  block.chainid == _cachedChainId */\n      eq\n        /* \"contracts/ERC20_flattened.sol\":77882:77945  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_227:\n        /* \"contracts/ERC20_flattened.sol\":77878:78062  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/ERC20_flattened.sol\":77968:77990  _cachedDomainSeparator */\n      immutable(\"0x29952515f5d57954abac5ab7b1327bd7bcbb5425c05d93673edc46b02d7cb56d\")\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":77806:78068  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":77878:78062  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_228:\n        /* \"contracts/ERC20_flattened.sol\":78028:78051  _buildDomainSeparator() */\n      tag_131\n        /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC20_flattened.sol\":76040:76135  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7209:7234   */\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78187:78198  _hashedName */\n      immutable(\"0xf40d89e88f976c0e4eebddab04ab11e8eb9a648fae2f79611f9b9f54d5ffefc8\")\n        /* \"#utility.yul\":7250:7268   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7243:7277   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78200:78214  _hashedVersion */\n      immutable(\"0xc9c370779fd62a0c7c118a2246ccad4c103473123315c14d4e476e7f4b22843f\")\n        /* \"#utility.yul\":7293:7311   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":7286:7320   */\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78216:78229  block.chainid */\n      chainid\n        /* \"#utility.yul\":7336:7354   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78239:78243  this */\n      address\n        /* \"#utility.yul\":7379:7398   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":7372:7433   */\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78129:78136  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7181:7200   */\n      0xc0\n      add\n        /* \"contracts/ERC20_flattened.sol\":78165:78245  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":78155:78246  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":78148:78246  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":78074:78253  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/ERC20_flattened.sol\":28940:29102  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"contracts/ERC20_flattened.sol\":28854:28860  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":28999:29022  owner() != _msgSender() */\n      eq\n        /* \"contracts/ERC20_flattened.sol\":28995:29096  if (owner() != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":29045:29085  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":29045:29085  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":29045:29085  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":25831:25948  function _unpause() internal virtual whenPaused {... */\n    tag_138:\n        /* \"contracts/ERC20_flattened.sol\":24842:24858  _requirePaused() */\n      tag_239\n        /* \"contracts/ERC20_flattened.sol\":24842:24856  _requirePaused */\n      tag_240\n        /* \"contracts/ERC20_flattened.sol\":24842:24858  _requirePaused() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/ERC20_flattened.sol\":25889:25896  _paused */\n      0x05\n        /* \"contracts/ERC20_flattened.sol\":25889:25904  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":25919:25941  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"contracts/ERC20_flattened.sol\":25928:25940  _msgSender() */\n    tag_242:\n        /* \"contracts/ERC20_flattened.sol\":25919:25941  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3969:4001   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3951:4002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3939:3941   */\n      0x20\n        /* \"#utility.yul\":3924:3942   */\n      add\n        /* \"contracts/ERC20_flattened.sol\":25919:25941  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ERC20_flattened.sol\":25831:25948  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":18652:18673  account == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":18648:18739  if (account == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":18725:18726  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":18648:18739  if (account == address(0)) {... */\n    tag_245:\n        /* \"contracts/ERC20_flattened.sol\":18748:18783  _update(address(0), account, value) */\n      tag_142\n        /* \"contracts/ERC20_flattened.sol\":18764:18765  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":18768:18775  account */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":18777:18782  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":18748:18755  _update */\n      tag_225\n        /* \"contracts/ERC20_flattened.sol\":18748:18783  _update(address(0), account, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":19108:19314  function _burn(address account, uint256 value) internal {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":19178:19199  account == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":19174:19263  if (account == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":19222:19252  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":19249:19250  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":19222:19252  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":19222:19252  ERC20InvalidSender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":19174:19263  if (account == address(0)) {... */\n    tag_249:\n        /* \"contracts/ERC20_flattened.sol\":19272:19307  _update(account, address(0), value) */\n      tag_142\n        /* \"contracts/ERC20_flattened.sol\":19280:19287  account */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":19297:19298  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":19301:19306  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":19272:19279  _update */\n      tag_225\n        /* \"contracts/ERC20_flattened.sol\":19272:19307  _update(account, address(0), value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":30056:30243  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":30164:30181  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n      0x0100\n        /* \"contracts/ERC20_flattened.sol\":30164:30181  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/ERC20_flattened.sol\":30148:30154  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":30129:30145  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":30196:30236  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/ERC20_flattened.sol\":30119:30243  {... */\n      pop\n        /* \"contracts/ERC20_flattened.sol\":30056:30243  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":25584:25699  function _pause() internal virtual whenNotPaused {... */\n    tag_166:\n        /* \"contracts/ERC20_flattened.sol\":24595:24614  _requireNotPaused() */\n      tag_255\n        /* \"contracts/ERC20_flattened.sol\":24595:24612  _requireNotPaused */\n      tag_256\n        /* \"contracts/ERC20_flattened.sol\":24595:24614  _requireNotPaused() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/ERC20_flattened.sol\":25643:25650  _paused */\n      0x05\n        /* \"contracts/ERC20_flattened.sol\":25643:25657  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/ERC20_flattened.sol\":25653:25657  true */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":25643:25657  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":25672:25692  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/ERC20_flattened.sol\":25679:25691  _msgSender() */\n      tag_242\n        /* \"contracts/ERC20_flattened.sol\":4254:4264  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":4175:4271  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":79982:80108  function _EIP712Name() internal view returns (string memory) {... */\n    tag_169:\n        /* \"contracts/ERC20_flattened.sol\":80028:80041  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":80060:80101  _name.toStringWithFallback(_nameFallback) */\n      tag_131\n        /* \"contracts/ERC20_flattened.sol\":80060:80065  _name */\n      immutable(\"0xb8163922f365f2d54f6122835c04019c69b181c4b5bf7a62d07ca62e91817bd9\")\n        /* \"contracts/ERC20_flattened.sol\":80087:80100  _nameFallback */\n      0x06\n        /* \"contracts/ERC20_flattened.sol\":80060:80086  _name.toStringWithFallback */\n      tag_262\n        /* \"contracts/ERC20_flattened.sol\":80060:80101  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":80434:80569  function _EIP712Version() internal view returns (string memory) {... */\n    tag_171:\n        /* \"contracts/ERC20_flattened.sol\":80483:80496  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":80515:80562  _version.toStringWithFallback(_versionFallback) */\n      tag_131\n        /* \"contracts/ERC20_flattened.sol\":80515:80523  _version */\n      immutable(\"0xef17f12455e22a45134579834cdca993c5eec3070954e76052dcfac9f22697b4\")\n        /* \"contracts/ERC20_flattened.sol\":80545:80561  _versionFallback */\n      0x07\n        /* \"contracts/ERC20_flattened.sol\":80515:80544  _version.toStringWithFallback */\n      tag_262\n        /* \"contracts/ERC20_flattened.sol\":80515:80562  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":78878:79054  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_194:\n        /* \"contracts/ERC20_flattened.sol\":78955:78962  bytes32 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":78981:79047  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_117\n        /* \"contracts/ERC20_flattened.sol\":79014:79034  _domainSeparatorV4() */\n      tag_268\n        /* \"contracts/ERC20_flattened.sol\":79014:79032  _domainSeparatorV4 */\n      tag_132\n        /* \"contracts/ERC20_flattened.sol\":79014:79034  _domainSeparatorV4() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/ERC20_flattened.sol\":79036:79046  structHash */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":64886:64890  0x40 */\n      0x40\n        /* \"contracts/ERC20_flattened.sol\":64880:64891  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"contracts/ERC20_flattened.sol\":64904:64927  mstore(ptr, hex\"19_01\") */\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":64956:64960  0x02 */\n      0x02\n        /* \"contracts/ERC20_flattened.sol\":64947:64961  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"contracts/ERC20_flattened.sol\":64940:64979  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":65008:65012  0x22 */\n      0x22\n        /* \"contracts/ERC20_flattened.sol\":64999:65013  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"contracts/ERC20_flattened.sol\":64992:65026  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":65064:65068  0x42 */\n      0x42\n        /* \"contracts/ERC20_flattened.sol\":65049:65069  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":64684:65085  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":40929:41189  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_196:\n        /* \"contracts/ERC20_flattened.sol\":41014:41021  address */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":41034:41051  address recovered */\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":41053:41071  RecoverError error */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":41073:41089  bytes32 errorArg */\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":41093:41118  tryRecover(hash, v, r, s) */\n      tag_271\n        /* \"contracts/ERC20_flattened.sol\":41104:41108  hash */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":41110:41111  v */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":41113:41114  r */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":41116:41117  s */\n      dup9\n        /* \"contracts/ERC20_flattened.sol\":41093:41103  tryRecover */\n      tag_272\n        /* \"contracts/ERC20_flattened.sol\":41093:41118  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/ERC20_flattened.sol\":41033:41118  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/ERC20_flattened.sol\":41128:41156  _throwError(error, errorArg) */\n      tag_273\n        /* \"contracts/ERC20_flattened.sol\":41140:41145  error */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41147:41155  errorArg */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41128:41139  _throwError */\n      tag_274\n        /* \"contracts/ERC20_flattened.sol\":41128:41156  _throwError(error, errorArg) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"contracts/ERC20_flattened.sol\":41173:41182  recovered */\n      swap1\n      swap7\n        /* \"contracts/ERC20_flattened.sol\":40929:41189  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":20922:20941  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/ERC20_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":20993:20994  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":21020:21041  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":21092:21093  0 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:4002   */\n      mstore\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3805:4008   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":21115:21133  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":21115:21126  _allowances */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":21115:21133  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":21115:21142  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":21115:21150  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":21160:21236  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":21210:21217  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n        /* \"contracts/ERC20_flattened.sol\":21203:21208  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20_flattened.sol\":21219:21224  value */\n      dup5\n        /* \"contracts/ERC20_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_281\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":85278:85443  function _update(address from, address to, uint256 value)... */\n    tag_225:\n        /* \"contracts/ERC20_flattened.sol\":85406:85436  super._update(from, to, value) */\n      tag_210\n        /* \"contracts/ERC20_flattened.sol\":85420:85424  from */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":85426:85428  to */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":85430:85435  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":85406:85419  super._update */\n      tag_284\n        /* \"contracts/ERC20_flattened.sol\":85406:85436  super._update(from, to, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":25323:25449  function _requirePaused() internal view virtual {... */\n    tag_240:\n        /* \"contracts/ERC20_flattened.sol\":25041:25048  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC20_flattened.sol\":25381:25443  if (!paused()) {... */\n      tag_137\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":25417:25432  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20_flattened.sol\":25123:25251  function _requireNotPaused() internal view virtual {... */\n    tag_256:\n        /* \"contracts/ERC20_flattened.sol\":25041:25048  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC20_flattened.sol\":25184:25245  if (paused()) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":25219:25234  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20_flattened.sol\":72410:72677  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_262:\n        /* \"contracts/ERC20_flattened.sol\":72504:72517  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":70415:70481  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"contracts/ERC20_flattened.sol\":72533:72579  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"contracts/ERC20_flattened.sol\":72529:72671  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_295\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":72602:72617  toString(value) */\n      tag_296\n        /* \"contracts/ERC20_flattened.sol\":72611:72616  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":72602:72610  toString */\n      tag_297\n        /* \"contracts/ERC20_flattened.sol\":72602:72617  toString(value) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/ERC20_flattened.sol\":72595:72617  return toString(value) */\n      swap1\n      pop\n      jump(tag_117)\n        /* \"contracts/ERC20_flattened.sol\":72529:72671  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_295:\n        /* \"contracts/ERC20_flattened.sol\":72655:72660  store */\n      dup2\n        /* \"contracts/ERC20_flattened.sol\":72648:72660  return store */\n      dup1\n      sload\n      tag_299\n      swap1\n      tag_112\n      jump\t// in\n    tag_299:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_112\n      jump\t// in\n    tag_300:\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_302\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_301)\n    tag_302:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_303:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_303\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump(tag_117)\n        /* \"contracts/ERC20_flattened.sol\":39266:40796  function tryRecover(... */\n    tag_272:\n        /* \"contracts/ERC20_flattened.sol\":39392:39399  address */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":40325:40391  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/ERC20_flattened.sol\":40312:40391  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"contracts/ERC20_flattened.sol\":40308:40472  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_306\n      jumpi\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40423:40424  0 */\n      0x00\n      swap2\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40427:40457  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40459:40460  s */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":40407:40461  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_305)\n        /* \"contracts/ERC20_flattened.sol\":40308:40472  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_306:\n        /* \"contracts/ERC20_flattened.sol\":40583:40607  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC20_flattened.sol\":40566:40580  address signer */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":40583:40607  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7671:7696   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7744:7748   */\n      0xff\n        /* \"#utility.yul\":7732:7749   */\n      dup10\n      and\n        /* \"#utility.yul\":7712:7730   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":7705:7750   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7766:7784   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":7759:7793   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":7809:7827   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":7802:7836   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":40583:40607  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7643:7662   */\n      0xa0\n      add\n        /* \"contracts/ERC20_flattened.sol\":40583:40607  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_310:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":40621:40641  signer == address(0) */\n      dup2\n      and\n        /* \"contracts/ERC20_flattened.sol\":40617:40730  if (signer == address(0)) {... */\n      tag_311\n      jumpi\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40673:40674  0 */\n      0x00\n      swap3\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40677:40706  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40673:40674  0 */\n      dup3\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40657:40719  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_305)\n        /* \"contracts/ERC20_flattened.sol\":40617:40730  if (signer == address(0)) {... */\n    tag_311:\n        /* \"contracts/ERC20_flattened.sol\":40748:40754  signer */\n      swap3\n      pop\n        /* \"contracts/ERC20_flattened.sol\":40756:40776  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"contracts/ERC20_flattened.sol\":39266:40796  function tryRecover(... */\n    tag_305:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":41322:41854  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_274:\n        /* \"contracts/ERC20_flattened.sol\":41417:41437  RecoverError.NoError */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":41408:41413  error */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41408:41437  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_317\n      tag_315\n      jump\t// in\n    tag_317:\n      sub\n        /* \"contracts/ERC20_flattened.sol\":41404:41848  if (error == RecoverError.NoError) {... */\n      tag_318\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":41322:41854  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":41404:41848  if (error == RecoverError.NoError) {... */\n    tag_318:\n        /* \"contracts/ERC20_flattened.sol\":41513:41542  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/ERC20_flattened.sol\":41504:41509  error */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41504:41542  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_323\n      jumpi\n      tag_323\n      tag_315\n      jump\t// in\n    tag_323:\n      sub\n        /* \"contracts/ERC20_flattened.sol\":41500:41848  if (error == RecoverError.InvalidSignature) {... */\n      tag_324\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":41565:41588  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20_flattened.sol\":41500:41848  if (error == RecoverError.InvalidSignature) {... */\n    tag_324:\n        /* \"contracts/ERC20_flattened.sol\":41618:41653  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"contracts/ERC20_flattened.sol\":41609:41614  error */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41609:41653  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_329\n      tag_315\n      jump\t// in\n    tag_329:\n      sub\n        /* \"contracts/ERC20_flattened.sol\":41605:41848  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_330\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":41676:41722  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":41676:41722  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_188\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":41605:41848  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_330:\n        /* \"contracts/ERC20_flattened.sol\":41752:41782  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/ERC20_flattened.sol\":41743:41748  error */\n      dup3\n        /* \"contracts/ERC20_flattened.sol\":41743:41782  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_336\n      jumpi\n      tag_336\n      tag_315\n      jump\t// in\n    tag_336:\n      sub\n        /* \"contracts/ERC20_flattened.sol\":41739:41848  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_142\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":41805:41837  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"contracts/ERC20_flattened.sol\":41805:41837  ECDSAInvalidSignatureS(errorArg) */\n      tag_188\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":27019:27164  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_284:\n        /* \"contracts/ERC20_flattened.sol\":24595:24614  _requireNotPaused() */\n      tag_340\n        /* \"contracts/ERC20_flattened.sol\":24595:24612  _requireNotPaused */\n      tag_256\n        /* \"contracts/ERC20_flattened.sol\":24595:24614  _requireNotPaused() */\n      jump\t// in\n    tag_340:\n        /* \"contracts/ERC20_flattened.sol\":27127:27157  super._update(from, to, value) */\n      tag_210\n        /* \"contracts/ERC20_flattened.sol\":27141:27145  from */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":27147:27149  to */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":27151:27156  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":27127:27140  super._update */\n      tag_343\n        /* \"contracts/ERC20_flattened.sol\":27127:27157  super._update(from, to, value) */\n      jump\t// in\n        /* \"contracts/ERC20_flattened.sol\":71103:71508  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_297:\n        /* \"contracts/ERC20_flattened.sol\":71162:71175  string memory */\n      0x60\n        /* \"contracts/ERC20_flattened.sol\":71187:71198  uint256 len */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":71201:71217  byteLength(sstr) */\n      tag_345\n        /* \"contracts/ERC20_flattened.sol\":71212:71216  sstr */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":71201:71211  byteLength */\n      tag_346\n        /* \"contracts/ERC20_flattened.sol\":71201:71217  byteLength(sstr) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/ERC20_flattened.sol\":71325:71339  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC20_flattened.sol\":71336:71338  32 */\n      0x20\n        /* \"contracts/ERC20_flattened.sol\":71325:71339  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC20_flattened.sol\":71187:71217  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/ERC20_flattened.sol\":71305:71322  string memory str */\n      0x00\n      swap2\n        /* \"contracts/ERC20_flattened.sol\":71325:71339  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20_flattened.sol\":71415:71431  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"contracts/ERC20_flattened.sol\":71460:71464  0x20 */\n      0x20\n        /* \"contracts/ERC20_flattened.sol\":71451:71465  add(str, 0x20) */\n      dup2\n      add\n        /* \"contracts/ERC20_flattened.sol\":71444:71472  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"contracts/ERC20_flattened.sol\":71415:71431  mstore(str, len) */\n      swap1\n        /* \"contracts/ERC20_flattened.sol\":71103:71508  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":17221:17239  from == address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":17373:17378  value */\n      dup1\n        /* \"contracts/ERC20_flattened.sol\":17357:17369  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":17357:17378  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_352\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ERC20_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_354\n      swap1\n      pop\n      jump\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":17431:17446  _balances[from] */\n      dup4\n      and\n        /* \"contracts/ERC20_flattened.sol\":17409:17428  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":17431:17446  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC20_flattened.sol\":17464:17483  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/ERC20_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6820:6852   */\n      dup6\n      and\n        /* \"contracts/ERC20_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6802:6853   */\n      mstore\n        /* \"#utility.yul\":6869:6887   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6862:6896   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6912:6930   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6905:6939   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6775:6793   */\n      0x64\n      add\n        /* \"contracts/ERC20_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_188\n        /* \"#utility.yul\":6600:6945   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":17695:17710  _balances[from] */\n      dup5\n      and\n        /* \"contracts/ERC20_flattened.sol\":17695:17704  _balances */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":17695:17710  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":17713:17732  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/ERC20_flattened.sol\":17695:17732  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":17217:17757  if (from == address(0)) {... */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":17771:17787  to == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      tag_357\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":17934:17946  _totalSupply */\n      0x02\n        /* \"contracts/ERC20_flattened.sol\":17934:17955  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      jump(tag_358)\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":18145:18158  _balances[to] */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":18145:18154  _balances */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":18145:18158  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC20_flattened.sol\":18145:18167  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC20_flattened.sol\":17767:18192  if (to == address(0)) {... */\n    tag_358:\n        /* \"contracts/ERC20_flattened.sol\":18222:18224  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n        /* \"contracts/ERC20_flattened.sol\":18216:18220  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20_flattened.sol\":18226:18231  value */\n      dup4\n        /* \"contracts/ERC20_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      mload(0x40)\n      tag_359\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"contracts/ERC20_flattened.sol\":18207:18232  Transfer(from, to, value) */\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_flattened.sol\":71580:71825  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_346:\n        /* \"contracts/ERC20_flattened.sol\":71641:71648  uint256 */\n      0x00\n        /* \"contracts/ERC20_flattened.sol\":71713:71717  0xFF */\n      0xff\n        /* \"contracts/ERC20_flattened.sol\":71677:71717  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"contracts/ERC20_flattened.sol\":71740:71742  31 */\n      0x1f\n        /* \"contracts/ERC20_flattened.sol\":71731:71742  result > 31 */\n      dup2\n      gt\n        /* \"contracts/ERC20_flattened.sol\":71727:71796  if (result > 31) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/ERC20_flattened.sol\":71765:71785  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:303   */\n    tag_362:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":177:183   */\n      dup1\n        /* \"#utility.yul\":170:174   */\n      0x20\n        /* \"#utility.yul\":163:168   */\n      dup5\n        /* \"#utility.yul\":159:175   */\n      add\n        /* \"#utility.yul\":152:156   */\n      0x20\n        /* \"#utility.yul\":147:150   */\n      dup7\n        /* \"#utility.yul\":143:157   */\n      add\n        /* \"#utility.yul\":137:184   */\n      mcopy\n        /* \"#utility.yul\":229:230   */\n      0x00\n        /* \"#utility.yul\":222:226   */\n      0x20\n        /* \"#utility.yul\":213:219   */\n      dup3\n        /* \"#utility.yul\":208:211   */\n      dup7\n        /* \"#utility.yul\":204:220   */\n      add\n        /* \"#utility.yul\":200:227   */\n      add\n        /* \"#utility.yul\":193:231   */\n      mstore\n        /* \"#utility.yul\":292:296   */\n      0x20\n        /* \"#utility.yul\":285:287   */\n      0x1f\n        /* \"#utility.yul\":281:288   */\n      not\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":268:274   */\n      dup4\n        /* \"#utility.yul\":264:279   */\n      add\n        /* \"#utility.yul\":260:289   */\n      and\n        /* \"#utility.yul\":255:258   */\n      dup6\n        /* \"#utility.yul\":251:290   */\n      add\n        /* \"#utility.yul\":247:297   */\n      add\n        /* \"#utility.yul\":240:297   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:528   */\n    tag_31:\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":446:455   */\n      dup2\n        /* \"#utility.yul\":439:460   */\n      mstore\n        /* \"#utility.yul\":420:424   */\n      0x00\n        /* \"#utility.yul\":477:522   */\n      tag_367\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup4\n        /* \"#utility.yul\":503:521   */\n      add\n        /* \"#utility.yul\":495:501   */\n      dup5\n        /* \"#utility.yul\":477:522   */\n      tag_362\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":469:522   */\n      swap4\n        /* \"#utility.yul\":308:528   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":533:706   */\n    tag_363:\n        /* \"#utility.yul\":601:621   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":650:681   */\n      dup2\n      and\n        /* \"#utility.yul\":640:682   */\n      dup2\n      eq\n        /* \"#utility.yul\":630:700   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":696:697   */\n      0x00\n        /* \"#utility.yul\":693:694   */\n      dup1\n        /* \"#utility.yul\":686:698   */\n      revert\n        /* \"#utility.yul\":630:700   */\n    tag_369:\n        /* \"#utility.yul\":533:706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":711:1011   */\n    tag_34:\n        /* \"#utility.yul\":779:785   */\n      0x00\n        /* \"#utility.yul\":787:793   */\n      dup1\n        /* \"#utility.yul\":840:842   */\n      0x40\n        /* \"#utility.yul\":828:837   */\n      dup4\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":815:838   */\n      sub\n        /* \"#utility.yul\":811:843   */\n      slt\n        /* \"#utility.yul\":808:860   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":856:857   */\n      0x00\n        /* \"#utility.yul\":853:854   */\n      dup1\n        /* \"#utility.yul\":846:858   */\n      revert\n        /* \"#utility.yul\":808:860   */\n    tag_371:\n        /* \"#utility.yul\":879:908   */\n      tag_372\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":879:908   */\n      tag_363\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":869:908   */\n      swap5\n        /* \"#utility.yul\":977:979   */\n      0x20\n        /* \"#utility.yul\":962:980   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":949:981   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":711:1011   */\n      jump\t// out\n        /* \"#utility.yul\":1390:1764   */\n    tag_44:\n        /* \"#utility.yul\":1467:1473   */\n      0x00\n        /* \"#utility.yul\":1475:1481   */\n      dup1\n        /* \"#utility.yul\":1483:1489   */\n      0x00\n        /* \"#utility.yul\":1536:1538   */\n      0x60\n        /* \"#utility.yul\":1524:1533   */\n      dup5\n        /* \"#utility.yul\":1515:1522   */\n      dup7\n        /* \"#utility.yul\":1511:1534   */\n      sub\n        /* \"#utility.yul\":1507:1539   */\n      slt\n        /* \"#utility.yul\":1504:1556   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1504:1556   */\n    tag_376:\n        /* \"#utility.yul\":1575:1604   */\n      tag_377\n        /* \"#utility.yul\":1594:1603   */\n      dup5\n        /* \"#utility.yul\":1575:1604   */\n      tag_363\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1565:1604   */\n      swap3\n      pop\n        /* \"#utility.yul\":1623:1661   */\n      tag_378\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1646:1655   */\n      dup6\n        /* \"#utility.yul\":1642:1660   */\n      add\n        /* \"#utility.yul\":1623:1661   */\n      tag_363\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1390:1764   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1613:1661   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1730:1732   */\n      0x40\n        /* \"#utility.yul\":1715:1733   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1702:1734   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1390:1764   */\n      jump\t// out\n        /* \"#utility.yul\":2140:2366   */\n    tag_62:\n        /* \"#utility.yul\":2199:2205   */\n      0x00\n        /* \"#utility.yul\":2252:2254   */\n      0x20\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2231:2238   */\n      dup5\n        /* \"#utility.yul\":2227:2250   */\n      sub\n        /* \"#utility.yul\":2223:2255   */\n      slt\n        /* \"#utility.yul\":2220:2272   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2265:2266   */\n      dup1\n        /* \"#utility.yul\":2258:2270   */\n      revert\n        /* \"#utility.yul\":2220:2272   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":2313:2336   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2140:2366   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2371:2557   */\n    tag_69:\n        /* \"#utility.yul\":2430:2436   */\n      0x00\n        /* \"#utility.yul\":2483:2485   */\n      0x20\n        /* \"#utility.yul\":2471:2480   */\n      dup3\n        /* \"#utility.yul\":2462:2469   */\n      dup5\n        /* \"#utility.yul\":2458:2481   */\n      sub\n        /* \"#utility.yul\":2454:2486   */\n      slt\n        /* \"#utility.yul\":2451:2503   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2496:2497   */\n      dup1\n        /* \"#utility.yul\":2489:2501   */\n      revert\n        /* \"#utility.yul\":2451:2503   */\n    tag_384:\n        /* \"#utility.yul\":2522:2551   */\n      tag_367\n        /* \"#utility.yul\":2541:2550   */\n      dup3\n        /* \"#utility.yul\":2522:2551   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":2562:3800   */\n    tag_86:\n        /* \"#utility.yul\":2968:2971   */\n      0xff\n        /* \"#utility.yul\":2963:2966   */\n      0xf8\n        /* \"#utility.yul\":2959:2972   */\n      shl\n        /* \"#utility.yul\":2951:2957   */\n      dup9\n        /* \"#utility.yul\":2947:2973   */\n      and\n        /* \"#utility.yul\":2936:2945   */\n      dup2\n        /* \"#utility.yul\":2929:2974   */\n      mstore\n        /* \"#utility.yul\":3010:3013   */\n      0xe0\n        /* \"#utility.yul\":3005:3007   */\n      0x20\n        /* \"#utility.yul\":2994:3003   */\n      dup3\n        /* \"#utility.yul\":2990:3008   */\n      add\n        /* \"#utility.yul\":2983:3014   */\n      mstore\n        /* \"#utility.yul\":2910:2914   */\n      0x00\n        /* \"#utility.yul\":3037:3083   */\n      tag_387\n        /* \"#utility.yul\":3078:3081   */\n      0xe0\n        /* \"#utility.yul\":3067:3076   */\n      dup4\n        /* \"#utility.yul\":3063:3082   */\n      add\n        /* \"#utility.yul\":3055:3061   */\n      dup10\n        /* \"#utility.yul\":3037:3083   */\n      tag_362\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3131:3140   */\n      dup3\n        /* \"#utility.yul\":3123:3129   */\n      dup2\n        /* \"#utility.yul\":3119:3141   */\n      sub\n        /* \"#utility.yul\":3114:3116   */\n      0x40\n        /* \"#utility.yul\":3103:3112   */\n      dup5\n        /* \"#utility.yul\":3099:3117   */\n      add\n        /* \"#utility.yul\":3092:3142   */\n      mstore\n        /* \"#utility.yul\":3165:3198   */\n      tag_388\n        /* \"#utility.yul\":3191:3197   */\n      dup2\n        /* \"#utility.yul\":3183:3189   */\n      dup10\n        /* \"#utility.yul\":3165:3198   */\n      tag_362\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3229:3231   */\n      0x60\n        /* \"#utility.yul\":3214:3232   */\n      dup5\n      add\n        /* \"#utility.yul\":3207:3241   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3278:3310   */\n      dup8\n      and\n        /* \"#utility.yul\":3272:3275   */\n      0x80\n        /* \"#utility.yul\":3257:3276   */\n      dup6\n      add\n        /* \"#utility.yul\":3250:3311   */\n      mstore\n        /* \"#utility.yul\":3298:3301   */\n      0xa0\n        /* \"#utility.yul\":3327:3346   */\n      dup5\n      add\n        /* \"#utility.yul\":3320:3355   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":3392:3414   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":3386:3389   */\n      0xc0\n        /* \"#utility.yul\":3371:3390   */\n      dup6\n      add\n        /* \"#utility.yul\":3364:3415   */\n      mstore\n        /* \"#utility.yul\":3464:3477   */\n      dup5\n      mload\n        /* \"#utility.yul\":3486:3508   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3536:3538   */\n      0x20\n        /* \"#utility.yul\":3562:3577   */\n      dup1\n      dup8\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":3524:3539   */\n      swap1\n      swap2\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3605:3774   */\n    tag_389:\n        /* \"#utility.yul\":3619:3625   */\n      dup2\n        /* \"#utility.yul\":3616:3617   */\n      dup2\n        /* \"#utility.yul\":3613:3626   */\n      lt\n        /* \"#utility.yul\":3605:3774   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":3680:3693   */\n      dup4\n      mload\n        /* \"#utility.yul\":3668:3694   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3723:3725   */\n      0x20\n        /* \"#utility.yul\":3749:3764   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":3714:3726   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":3641:3642   */\n      0x01\n        /* \"#utility.yul\":3634:3643   */\n      add\n        /* \"#utility.yul\":3605:3774   */\n      jump(tag_389)\n    tag_391:\n      pop\n        /* \"#utility.yul\":3791:3794   */\n      swap1\n      swap12\n        /* \"#utility.yul\":2562:3800   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4013:4916   */\n    tag_100:\n        /* \"#utility.yul\":4124:4130   */\n      0x00\n        /* \"#utility.yul\":4132:4138   */\n      dup1\n        /* \"#utility.yul\":4140:4146   */\n      0x00\n        /* \"#utility.yul\":4148:4154   */\n      dup1\n        /* \"#utility.yul\":4156:4162   */\n      0x00\n        /* \"#utility.yul\":4164:4170   */\n      dup1\n        /* \"#utility.yul\":4172:4178   */\n      0x00\n        /* \"#utility.yul\":4225:4228   */\n      0xe0\n        /* \"#utility.yul\":4213:4222   */\n      dup9\n        /* \"#utility.yul\":4204:4211   */\n      dup11\n        /* \"#utility.yul\":4200:4223   */\n      sub\n        /* \"#utility.yul\":4196:4229   */\n      slt\n        /* \"#utility.yul\":4193:4246   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4242:4243   */\n      0x00\n        /* \"#utility.yul\":4239:4240   */\n      dup1\n        /* \"#utility.yul\":4232:4244   */\n      revert\n        /* \"#utility.yul\":4193:4246   */\n    tag_394:\n        /* \"#utility.yul\":4265:4294   */\n      tag_395\n        /* \"#utility.yul\":4284:4293   */\n      dup9\n        /* \"#utility.yul\":4265:4294   */\n      tag_363\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4255:4294   */\n      swap7\n      pop\n        /* \"#utility.yul\":4313:4351   */\n      tag_396\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4336:4345   */\n      dup10\n        /* \"#utility.yul\":4332:4350   */\n      add\n        /* \"#utility.yul\":4313:4351   */\n      tag_363\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4303:4351   */\n      swap6\n      pop\n        /* \"#utility.yul\":4420:4422   */\n      0x40\n        /* \"#utility.yul\":4405:4423   */\n      dup9\n      add\n        /* \"#utility.yul\":4392:4424   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4521:4523   */\n      0x60\n        /* \"#utility.yul\":4506:4524   */\n      dup9\n      add\n        /* \"#utility.yul\":4493:4525   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4603:4606   */\n      0x80\n        /* \"#utility.yul\":4588:4607   */\n      dup9\n      add\n        /* \"#utility.yul\":4575:4608   */\n      calldataload\n        /* \"#utility.yul\":4652:4656   */\n      0xff\n        /* \"#utility.yul\":4639:4657   */\n      dup2\n      and\n        /* \"#utility.yul\":4627:4658   */\n      dup2\n      eq\n        /* \"#utility.yul\":4617:4676   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4672:4673   */\n      0x00\n        /* \"#utility.yul\":4669:4670   */\n      dup1\n        /* \"#utility.yul\":4662:4674   */\n      revert\n        /* \"#utility.yul\":4617:4676   */\n    tag_397:\n        /* \"#utility.yul\":4013:4916   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4695:4702   */\n      swap5\n        /* \"#utility.yul\":4775:4778   */\n      0xa0\n        /* \"#utility.yul\":4760:4779   */\n      dup5\n      add\n        /* \"#utility.yul\":4747:4780   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4879:4882   */\n      0xc0\n        /* \"#utility.yul\":4864:4883   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4851:4884   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":4013:4916   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4921:5181   */\n    tag_104:\n        /* \"#utility.yul\":4989:4995   */\n      0x00\n        /* \"#utility.yul\":4997:5003   */\n      dup1\n        /* \"#utility.yul\":5050:5052   */\n      0x40\n        /* \"#utility.yul\":5038:5047   */\n      dup4\n        /* \"#utility.yul\":5029:5036   */\n      dup6\n        /* \"#utility.yul\":5025:5048   */\n      sub\n        /* \"#utility.yul\":5021:5053   */\n      slt\n        /* \"#utility.yul\":5018:5070   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":5066:5067   */\n      0x00\n        /* \"#utility.yul\":5063:5064   */\n      dup1\n        /* \"#utility.yul\":5056:5068   */\n      revert\n        /* \"#utility.yul\":5018:5070   */\n    tag_399:\n        /* \"#utility.yul\":5089:5118   */\n      tag_400\n        /* \"#utility.yul\":5108:5117   */\n      dup4\n        /* \"#utility.yul\":5089:5118   */\n      tag_363\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5079:5118   */\n      swap2\n      pop\n        /* \"#utility.yul\":5137:5175   */\n      tag_401\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"#utility.yul\":5160:5169   */\n      dup5\n        /* \"#utility.yul\":5156:5174   */\n      add\n        /* \"#utility.yul\":5137:5175   */\n      tag_363\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5127:5175   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:5181   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5186:5566   */\n    tag_112:\n        /* \"#utility.yul\":5265:5266   */\n      0x01\n        /* \"#utility.yul\":5261:5273   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5308:5320   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5329:5390   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5383:5387   */\n      0x7f\n        /* \"#utility.yul\":5375:5381   */\n      dup3\n        /* \"#utility.yul\":5371:5388   */\n      and\n        /* \"#utility.yul\":5361:5388   */\n      swap2\n      pop\n        /* \"#utility.yul\":5329:5390   */\n    tag_403:\n        /* \"#utility.yul\":5436:5438   */\n      0x20\n        /* \"#utility.yul\":5428:5434   */\n      dup3\n        /* \"#utility.yul\":5425:5439   */\n      lt\n        /* \"#utility.yul\":5405:5423   */\n      dup2\n        /* \"#utility.yul\":5402:5440   */\n      sub\n        /* \"#utility.yul\":5399:5560   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5482:5492   */\n      0x4e487b71\n        /* \"#utility.yul\":5477:5480   */\n      0xe0\n        /* \"#utility.yul\":5473:5493   */\n      shl\n        /* \"#utility.yul\":5470:5471   */\n      0x00\n        /* \"#utility.yul\":5463:5494   */\n      mstore\n        /* \"#utility.yul\":5517:5521   */\n      0x22\n        /* \"#utility.yul\":5514:5515   */\n      0x04\n        /* \"#utility.yul\":5507:5522   */\n      mstore\n        /* \"#utility.yul\":5545:5549   */\n      0x24\n        /* \"#utility.yul\":5542:5543   */\n      0x00\n        /* \"#utility.yul\":5535:5550   */\n      revert\n        /* \"#utility.yul\":5399:5560   */\n    tag_404:\n      pop\n        /* \"#utility.yul\":5186:5566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7847:7974   */\n    tag_315:\n        /* \"#utility.yul\":7908:7918   */\n      0x4e487b71\n        /* \"#utility.yul\":7903:7906   */\n      0xe0\n        /* \"#utility.yul\":7899:7919   */\n      shl\n        /* \"#utility.yul\":7896:7897   */\n      0x00\n        /* \"#utility.yul\":7889:7920   */\n      mstore\n        /* \"#utility.yul\":7939:7943   */\n      0x21\n        /* \"#utility.yul\":7936:7937   */\n      0x04\n        /* \"#utility.yul\":7929:7944   */\n      mstore\n        /* \"#utility.yul\":7963:7967   */\n      0x24\n        /* \"#utility.yul\":7960:7961   */\n      0x00\n        /* \"#utility.yul\":7953:7968   */\n      revert\n        /* \"#utility.yul\":7979:8201   */\n    tag_353:\n        /* \"#utility.yul\":8044:8053   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8065:8075   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8062:8195   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":8117:8127   */\n      0x4e487b71\n        /* \"#utility.yul\":8112:8115   */\n      0xe0\n        /* \"#utility.yul\":8108:8128   */\n      shl\n        /* \"#utility.yul\":8105:8106   */\n      0x00\n        /* \"#utility.yul\":8098:8129   */\n      mstore\n        /* \"#utility.yul\":8152:8156   */\n      0x11\n        /* \"#utility.yul\":8149:8150   */\n      0x04\n        /* \"#utility.yul\":8142:8157   */\n      mstore\n        /* \"#utility.yul\":8180:8184   */\n      0x24\n        /* \"#utility.yul\":8177:8178   */\n      0x00\n        /* \"#utility.yul\":8170:8185   */\n      revert\n\n    auxdata: 0xa26469706673582212205d8c2c08f9bce6ed0f23c57f470ec49abe2d9d9d211ff613d96ac141ed8bd98c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3396": {
									"entryPoint": null,
									"id": 3396,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3631": {
									"entryPoint": null,
									"id": 3631,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3763": {
									"entryPoint": null,
									"id": 3763,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3443": {
									"entryPoint": null,
									"id": 3443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1099": {
									"entryPoint": 447,
									"id": 1099,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStringSlot_3046": {
									"entryPoint": null,
									"id": 3046,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_3224": {
									"entryPoint": 536,
									"id": 3224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_3126": {
									"entryPoint": 586,
									"id": 3126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4374:1",
										"nodeType": "YulBlock",
										"src": "0:4374:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "341:95:1",
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nativeSrc": "361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nativeSrc": "351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nativeSrc": "391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nativeSrc": "391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nativeSrc": "415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nativeSrc": "415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nativeSrc": "496:325:1",
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nativeSrc": "506:22:1",
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:1",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:12:1",
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nativeSrc": "537:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:12:1",
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:1",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:1",
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nativeSrc": "616:27:1",
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:1",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nativeSrc": "626:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nativeSrc": "587:26:1",
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nativeSrc": "584:61:1",
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nativeSrc": "704:111:1",
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:1",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:1",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nativeSrc": "728:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nativeSrc": "718:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nativeSrc": "718:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:1",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:1",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nativeSrc": "762:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nativeSrc": "762:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:1",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nativeSrc": "790:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nativeSrc": "680:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nativeSrc": "657:38:1",
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nativeSrc": "654:161:1",
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:1",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:1",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nativeSrc": "882:65:1",
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nativeSrc": "892:14:1",
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nativeSrc": "892:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nativeSrc": "915:26:1",
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nativeSrc": "923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:1",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:1",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nativeSrc": "1033:437:1",
													"nodeType": "YulBlock",
													"src": "1033:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:1",
																"nodeType": "YulBlock",
																"src": "1066:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:1"
																			},
																			"nativeSrc": "1080:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:1"
																		},
																		"nativeSrc": "1080:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:1"
																	},
																	{
																		"nativeSrc": "1109:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:1"
																			},
																			"nativeSrc": "1121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:1"
																							},
																							"nativeSrc": "1188:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:1"
																					},
																					"nativeSrc": "1181:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			"nativeSrc": "1171:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:1",
																			"nodeType": "YulBlock",
																			"src": "1246:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:1"
																			},
																			"nativeSrc": "1225:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:1"
																		},
																		"nativeSrc": "1222:47:1",
																		"nodeType": "YulIf",
																		"src": "1222:47:1"
																	},
																	{
																		"nativeSrc": "1282:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:1"
																							},
																							"nativeSrc": "1309:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					"nativeSrc": "1302:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:1"
																			},
																			"nativeSrc": "1292:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:1",
																			"nodeType": "YulBlock",
																			"src": "1434:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:1"
																						},
																						"nativeSrc": "1436:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:1"
																					},
																					"nativeSrc": "1436:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:1"
																			},
																			"nativeSrc": "1381:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:1"
																		},
																		"nativeSrc": "1373:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:1",
																			"nodeType": "YulBlock",
																			"src": "1395:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:1"
																						},
																						"nativeSrc": "1406:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:1",
																			"nodeType": "YulBlock",
																			"src": "1377:3:1",
																			"statements": []
																		},
																		"src": "1373:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nativeSrc": "1046:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nativeSrc": "1043:421:1",
															"nodeType": "YulIf",
															"src": "1043:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:1",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:1",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:518:1"
											},
											{
												"body": {
													"nativeSrc": "1560:81:1",
													"nodeType": "YulBlock",
													"src": "1560:81:1",
													"statements": [
														{
															"nativeSrc": "1570:65:1",
															"nodeType": "YulAssignment",
															"src": "1570:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:1"
																								},
																								"nativeSrc": "1599:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:1"
																								},
																								"nativeSrc": "1612:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:1"
																						},
																						"nativeSrc": "1595:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:1"
																				},
																				"nativeSrc": "1591:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:1"
																		},
																		"nativeSrc": "1581:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:1"
																},
																"nativeSrc": "1578:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:1",
														"nodeType": "YulTypedName",
														"src": "1537:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:1",
														"nodeType": "YulTypedName",
														"src": "1543:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:1",
														"nodeType": "YulTypedName",
														"src": "1551:4:1",
														"type": ""
													}
												],
												"src": "1475:166:1"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:1",
													"nodeType": "YulBlock",
													"src": "1742:1203:1",
													"statements": [
														{
															"nativeSrc": "1752:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:1"
																},
																"nativeSrc": "1766:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:1",
																"nodeType": "YulBlock",
																"src": "1819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:1"
																			},
																			"nativeSrc": "1821:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:1"
																		},
																		"nativeSrc": "1821:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:1"
																				},
																				"nativeSrc": "1803:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nativeSrc": "1799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:1"
																},
																"nativeSrc": "1788:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:1"
															},
															"nativeSrc": "1785:56:1",
															"nodeType": "YulIf",
															"src": "1785:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:1"
																				},
																				"nativeSrc": "1926:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:1"
																		},
																		"nativeSrc": "1900:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:1"
																},
																"nativeSrc": "1850:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:1"
															},
															"nativeSrc": "1850:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:1"
														},
														{
															"nativeSrc": "1956:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:1",
																"nodeType": "YulLiteral",
																"src": "1973:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:1",
															"nodeType": "YulAssignment",
															"src": "1983:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:1",
																"nodeType": "YulLiteral",
																"src": "1996:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:1",
																		"nodeType": "YulBlock",
																		"src": "2046:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:1"
																							},
																							"nativeSrc": "2087:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:1"
																					},
																					"nativeSrc": "2075:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:1"
																					},
																					"nativeSrc": "2122:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:1",
																					"nodeType": "YulBlock",
																					"src": "2250:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:1"
																												},
																												"nativeSrc": "2289:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:1"
																										},
																										"nativeSrc": "2283:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:1"
																								},
																								"nativeSrc": "2268:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:1"
																							},
																							"nativeSrc": "2268:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:1"
																						},
																						{
																							"nativeSrc": "2327:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:1"
																								},
																								"nativeSrc": "2337:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:1"
																								},
																								"nativeSrc": "2381:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:1"
																					},
																					"nativeSrc": "2201:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:1"
																				},
																				"nativeSrc": "2193:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:1",
																					"nodeType": "YulBlock",
																					"src": "2216:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:1"
																								},
																								"nativeSrc": "2223:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:1",
																					"nodeType": "YulBlock",
																					"src": "2197:3:1",
																					"statements": []
																				},
																				"src": "2193:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:1",
																					"nodeType": "YulBlock",
																					"src": "2463:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:1"
																										},
																										"nativeSrc": "2504:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:1"
																								},
																								"nativeSrc": "2498:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:1"
																																		},
																																		"nativeSrc": "2583:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:1"
																																},
																																"nativeSrc": "2579:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:1"
																																},
																																"nativeSrc": "2605:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:1"
																														},
																														"nativeSrc": "2575:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:1"
																												},
																												"nativeSrc": "2571:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:1"
																										},
																										"nativeSrc": "2556:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:1"
																								},
																								"nativeSrc": "2541:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:1"
																							},
																							"nativeSrc": "2541:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:1"
																					},
																					"nativeSrc": "2431:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:1"
																				},
																				"nativeSrc": "2428:201:1",
																				"nodeType": "YulIf",
																				"src": "2428:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:1"
																									},
																									"nativeSrc": "2659:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:1"
																							},
																							"nativeSrc": "2655:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:1"
																					},
																					"nativeSrc": "2642:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:1"
																				},
																				"nativeSrc": "2642:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:1",
																	"nodeType": "YulCase",
																	"src": "2039:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:1",
																		"nodeType": "YulBlock",
																		"src": "2705:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:1",
																					"nodeType": "YulBlock",
																					"src": "2768:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:1"
																										},
																										"nativeSrc": "2801:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:1"
																								},
																								"nativeSrc": "2795:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:1"
																				},
																				"nativeSrc": "2746:89:1",
																				"nodeType": "YulIf",
																				"src": "2746:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:1"
																							},
																							"nativeSrc": "2861:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					},
																					"nativeSrc": "2848:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:1"
																				},
																				"nativeSrc": "2848:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:1",
																	"nodeType": "YulCase",
																	"src": "2697:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:1"
																},
																"nativeSrc": "2016:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:1"
															},
															"nativeSrc": "2009:930:1",
															"nodeType": "YulSwitch",
															"src": "2009:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:1",
														"nodeType": "YulTypedName",
														"src": "1727:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:1",
														"nodeType": "YulTypedName",
														"src": "1733:3:1",
														"type": ""
													}
												],
												"src": "1646:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3051:102:1",
													"nodeType": "YulBlock",
													"src": "3051:102:1",
													"statements": [
														{
															"nativeSrc": "3061:26:1",
															"nodeType": "YulAssignment",
															"src": "3061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nativeSrc": "3069:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:1"
																						},
																						"nativeSrc": "3130:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:1"
																				},
																				"nativeSrc": "3126:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:1"
																		},
																		"nativeSrc": "3114:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:1"
																},
																"nativeSrc": "3096:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:1"
															},
															"nativeSrc": "3096:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:1",
														"nodeType": "YulTypedName",
														"src": "3020:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:1",
														"nodeType": "YulTypedName",
														"src": "3031:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:1",
														"nodeType": "YulTypedName",
														"src": "3042:4:1",
														"type": ""
													}
												],
												"src": "2950:203:1"
											},
											{
												"body": {
													"nativeSrc": "3371:276:1",
													"nodeType": "YulBlock",
													"src": "3371:276:1",
													"statements": [
														{
															"nativeSrc": "3381:27:1",
															"nodeType": "YulAssignment",
															"src": "3381:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3393:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3393:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3404:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3404:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3389:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3389:3:1"
																},
																"nativeSrc": "3389:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3389:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3381:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3381:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3424:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3424:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3435:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nativeSrc": "3417:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3417:25:1"
															},
															"nativeSrc": "3417:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3417:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3462:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3473:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3458:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3458:3:1"
																		},
																		"nativeSrc": "3458:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3458:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3478:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:1"
																},
																"nativeSrc": "3451:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3451:34:1"
															},
															"nativeSrc": "3451:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3451:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3505:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3505:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3516:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3516:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3501:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3501:3:1"
																		},
																		"nativeSrc": "3501:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3501:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3521:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3521:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3494:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3494:6:1"
																},
																"nativeSrc": "3494:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3494:34:1"
															},
															"nativeSrc": "3494:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3494:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3548:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3548:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3559:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3559:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3544:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:1"
																		},
																		"nativeSrc": "3544:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3544:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3564:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3537:6:1"
																},
																"nativeSrc": "3537:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3537:34:1"
															},
															"nativeSrc": "3537:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3537:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3591:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3591:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3602:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3602:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3587:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:1"
																		},
																		"nativeSrc": "3587:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3587:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3612:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3612:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3628:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3628:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3633:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3633:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3624:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3624:3:1"
																						},
																						"nativeSrc": "3624:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3624:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3637:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3637:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3620:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3620:3:1"
																				},
																				"nativeSrc": "3620:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3620:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:1"
																		},
																		"nativeSrc": "3608:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3580:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:1"
																},
																"nativeSrc": "3580:61:1",
																"nodeType": "YulFunctionCall",
																"src": "3580:61:1"
															},
															"nativeSrc": "3580:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "3580:61:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "3158:489:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3308:9:1",
														"nodeType": "YulTypedName",
														"src": "3308:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3319:6:1",
														"nodeType": "YulTypedName",
														"src": "3319:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3327:6:1",
														"nodeType": "YulTypedName",
														"src": "3327:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3335:6:1",
														"nodeType": "YulTypedName",
														"src": "3335:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3343:6:1",
														"nodeType": "YulTypedName",
														"src": "3343:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3351:6:1",
														"nodeType": "YulTypedName",
														"src": "3351:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3362:4:1",
														"nodeType": "YulTypedName",
														"src": "3362:4:1",
														"type": ""
													}
												],
												"src": "3158:489:1"
											},
											{
												"body": {
													"nativeSrc": "3773:297:1",
													"nodeType": "YulBlock",
													"src": "3773:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3790:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3790:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3801:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:1"
																},
																"nativeSrc": "3783:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3783:21:1"
															},
															"nativeSrc": "3783:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3783:21:1"
														},
														{
															"nativeSrc": "3813:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3813:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3833:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3827:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3827:5:1"
																},
																"nativeSrc": "3827:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3827:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3817:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3817:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3860:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3860:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3871:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3871:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3856:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3856:3:1"
																		},
																		"nativeSrc": "3856:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3856:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3876:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3876:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3849:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:1"
																},
																"nativeSrc": "3849:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3849:34:1"
															},
															"nativeSrc": "3849:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3849:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3902:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3902:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3913:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3913:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3898:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3898:3:1"
																		},
																		"nativeSrc": "3898:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3922:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3922:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3930:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3930:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3918:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:1"
																		},
																		"nativeSrc": "3918:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3918:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3935:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3892:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3892:5:1"
																},
																"nativeSrc": "3892:50:1",
																"nodeType": "YulFunctionCall",
																"src": "3892:50:1"
															},
															"nativeSrc": "3892:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "3892:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3966:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3966:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3977:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3977:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3962:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3962:3:1"
																				},
																				"nativeSrc": "3962:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3962:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3986:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3986:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3958:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:1"
																		},
																		"nativeSrc": "3958:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3958:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3991:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:1"
																},
																"nativeSrc": "3951:42:1",
																"nodeType": "YulFunctionCall",
																"src": "3951:42:1"
															},
															"nativeSrc": "3951:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "3951:42:1"
														},
														{
															"nativeSrc": "4002:62:1",
															"nodeType": "YulAssignment",
															"src": "4002:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4018:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4018:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4037:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "4037:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4045:2:1",
																								"nodeType": "YulLiteral",
																								"src": "4045:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4033:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4033:3:1"
																						},
																						"nativeSrc": "4033:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4033:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4054:2:1",
																								"nodeType": "YulLiteral",
																								"src": "4054:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4050:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4050:3:1"
																						},
																						"nativeSrc": "4050:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4050:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4029:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4029:3:1"
																				},
																				"nativeSrc": "4029:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4029:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4014:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4014:3:1"
																		},
																		"nativeSrc": "4014:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4014:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4061:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4061:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4010:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4010:3:1"
																},
																"nativeSrc": "4010:54:1",
																"nodeType": "YulFunctionCall",
																"src": "4010:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4002:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4002:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3652:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3742:9:1",
														"nodeType": "YulTypedName",
														"src": "3742:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3753:6:1",
														"nodeType": "YulTypedName",
														"src": "3753:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3764:4:1",
														"nodeType": "YulTypedName",
														"src": "3764:4:1",
														"type": ""
													}
												],
												"src": "3652:418:1"
											},
											{
												"body": {
													"nativeSrc": "4169:203:1",
													"nodeType": "YulBlock",
													"src": "4169:203:1",
													"statements": [
														{
															"nativeSrc": "4179:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4179:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4199:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4199:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4193:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:5:1"
																},
																"nativeSrc": "4193:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4193:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4183:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4183:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4214:32:1",
															"nodeType": "YulAssignment",
															"src": "4214:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "4233:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4233:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4240:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4240:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4229:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:1"
																		},
																		"nativeSrc": "4229:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4229:16:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4223:5:1"
																},
																"nativeSrc": "4223:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4223:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4214:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4214:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4283:83:1",
																"nodeType": "YulBlock",
																"src": "4283:83:1",
																"statements": [
																	{
																		"nativeSrc": "4297:59:1",
																		"nodeType": "YulAssignment",
																		"src": "4297:59:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "4310:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4310:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4325:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4325:1:1",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4332:4:1",
																											"nodeType": "YulLiteral",
																											"src": "4332:4:1",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "4338:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4338:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "4328:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4328:3:1"
																									},
																									"nativeSrc": "4328:17:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4328:17:1"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "4321:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4321:3:1"
																							},
																							"nativeSrc": "4321:25:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4321:25:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4352:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4352:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4348:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4348:3:1"
																							},
																							"nativeSrc": "4348:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4348:6:1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4317:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4317:3:1"
																					},
																					"nativeSrc": "4317:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4317:38:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4306:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4306:3:1"
																			},
																			"nativeSrc": "4306:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4306:50:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "4297:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4297:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4261:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4261:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4269:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4269:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4258:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:2:1"
																},
																"nativeSrc": "4258:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4258:16:1"
															},
															"nativeSrc": "4255:111:1",
															"nodeType": "YulIf",
															"src": "4255:111:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "4075:297:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4149:5:1",
														"nodeType": "YulTypedName",
														"src": "4149:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4159:5:1",
														"nodeType": "YulTypedName",
														"src": "4159:5:1",
														"type": ""
													}
												],
												"src": "4075:297:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610160604052348015610010575f80fd5b506040516116f33803806116f383398101604081905261002f91610287565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600390816100b6919061034c565b5060046100c3828261034c565b50506005805460ff19169055506001600160a01b0381166100fe57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610107816101bf565b50610113826006610218565b61012052610122816007610218565b61014052815160208084019190912060e052815190820120610100524660a0526101ae60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525061045e9050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020835110156102335761022c8361024a565b9050610244565b8161023e848261034c565b5060ff90505b92915050565b5f80829050601f81511115610274578260405163305a27a960e01b81526004016100f59190610406565b805161027f8261043b565b179392505050565b5f60208284031215610297575f80fd5b81516001600160a01b03811681146102ad575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806102dc57607f821691505b6020821081036102fa57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561034757805f5260205f20601f840160051c810160208510156103255750805b601f840160051c820191505b81811015610344575f8155600101610331565b50505b505050565b81516001600160401b03811115610365576103656102b4565b6103798161037384546102c8565b84610300565b6020601f8211600181146103ab575f83156103945750848201515b5f19600385901b1c1916600184901b178455610344565b5f84815260208120601f198516915b828110156103da57878501518255602094850194600190920191016103ba565b50848210156103f757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102fa575f1960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516112446104af5f395f610a1301525f6109e601525f61080c01525f6107e401525f61073f01525f61076901525f61079301526112445ff3fe608060405234801561000f575f80fd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f80fd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f80fd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f80fd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f80fd5b610149610314565b6040516101569190610fa9565b60405180910390f35b61017261016d366004610fdd565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611005565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fdd565b610400565b6101c66101e936600461103f565b610416565b60055460ff16610172565b610186610207366004611056565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fdd565b610434565b61018661024a366004611056565b610449565b6101c6610466565b61025f610476565b604051610156979695949392919061106f565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fdd565b6104c7565b6101c66102c4366004611105565b6104d4565b6101866102d7366004611172565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611056565b61060f565b606060038054610323906111a3565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a3565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d6565b506001949350505050565b5f6103e9610733565b905090565b6103f661085c565b6103fe61088f565b565b61040861085c565b61041282826108e1565b5050565b6104203382610915565b50565b61042b61085c565b6103fe5f610949565b61043f82338361065b565b6104128282610915565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085c565b6103fe6109a2565b5f6060805f805f60606104876109df565b61048f610a0c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a3565b5f336103b18185856106d6565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a39565b90505f6105b182878787610a65565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085c565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b61042081610949565b6106568383836001610a91565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106d057818110156106c257604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d084848484035f610a91565b50505050565b6001600160a01b0383166106ff57604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107285760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b63565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078b57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b557507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610897610b6e565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090a5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b63565b6001600160a01b03821661093e57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b63565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109aa610b91565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c43390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb5565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb5565b5f6103b7610a45610733565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f80610a7588888888610c5e565b925092509250610a858282610d26565b50909695505050505050565b6001600160a01b038416610aba5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae357604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5591815260200190565b60405180910390a350505050565b610656838383610dde565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610bcf57610bc883610df1565b90506103b7565b818054610bdb906111a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c07906111a3565b8015610c525780601f10610c2957610100808354040283529160200191610c52565b820191905f5260205f20905b815481529060010190602001808311610c3557829003601f168201915b505050505090506103b7565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c9757505f91506003905082610d1c565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ce8573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610d1357505f925060019150829050610d1c565b92505f91508190505b9450945094915050565b5f826003811115610d3957610d396111db565b03610d42575050565b6001826003811115610d5657610d566111db565b03610d745760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d8857610d886111db565b03610da95760405163fce698f760e01b8152600481018290526024016104f4565b6003826003811115610dbd57610dbd6111db565b03610412576040516335e2f38360e21b8152600481018290526024016104f4565b610de6610b91565b610656838383610e2e565b60605f610dfd83610f54565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b6001600160a01b038316610e58578060025f828254610e4d91906111ef565b90915550610ec89050565b6001600160a01b0383165f9081526020819052604090205481811015610eaa5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104f4565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610ee457600280548290039055610f02565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4791815260200190565b60405180910390a3505050565b5f60ff8216601f8111156103b757604051632cd44ac360e21b815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610fbb6020830184610f7b565b9392505050565b80356001600160a01b0381168114610fd8575f80fd5b919050565b5f8060408385031215610fee575f80fd5b610ff783610fc2565b946020939093013593505050565b5f805f60608486031215611017575f80fd5b61102084610fc2565b925061102e60208501610fc2565b929592945050506040919091013590565b5f6020828403121561104f575f80fd5b5035919050565b5f60208284031215611066575f80fd5b610fbb82610fc2565b60ff60f81b8816815260e060208201525f61108d60e0830189610f7b565b828103604084015261109f8189610f7b565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156110f45783518352602093840193909201916001016110d6565b50909b9a5050505050505050505050565b5f805f805f805f60e0888a03121561111b575f80fd5b61112488610fc2565b965061113260208901610fc2565b95506040880135945060608801359350608088013560ff81168114611155575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215611183575f80fd5b61118c83610fc2565b915061119a60208401610fc2565b90509250929050565b600181811c908216806111b757607f821691505b6020821081036111d557634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52602160045260245ffd5b808201808211156103b757634e487b7160e01b5f52601160045260245ffdfea26469706673582212205d8c2c08f9bce6ed0f23c57f470ec49abe2d9d9d211ff613d96ac141ed8bd98c64736f6c634300081a0033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16F3 CODESIZE SUB DUP1 PUSH2 0x16F3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x34C JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xC3 DUP3 DUP3 PUSH2 0x34C JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107 DUP2 PUSH2 0x1BF JUMP JUMPDEST POP PUSH2 0x113 DUP3 PUSH1 0x6 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x122 DUP2 PUSH1 0x7 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x1AE PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x45E SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x233 JUMPI PUSH2 0x22C DUP4 PUSH2 0x24A JUMP JUMPDEST SWAP1 POP PUSH2 0x244 JUMP JUMPDEST DUP2 PUSH2 0x23E DUP5 DUP3 PUSH2 0x34C JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x274 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x406 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x27F DUP3 PUSH2 0x43B JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x347 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x325 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x344 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x331 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x365 JUMPI PUSH2 0x365 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x373 DUP5 SLOAD PUSH2 0x2C8 JUMP JUMPDEST DUP5 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AB JUMPI PUSH0 DUP4 ISZERO PUSH2 0x394 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x344 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DA JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3BA JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3F7 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1244 PUSH2 0x4AF PUSH0 CODECOPY PUSH0 PUSH2 0xA13 ADD MSTORE PUSH0 PUSH2 0x9E6 ADD MSTORE PUSH0 PUSH2 0x80C ADD MSTORE PUSH0 PUSH2 0x7E4 ADD MSTORE PUSH0 PUSH2 0x73F ADD MSTORE PUSH0 PUSH2 0x769 ADD MSTORE PUSH0 PUSH2 0x793 ADD MSTORE PUSH2 0x1244 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x371 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B1 DUP2 DUP6 DUP6 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3CA DUP6 DUP3 DUP6 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x3D5 DUP6 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E9 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x408 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x412 DUP3 DUP3 PUSH2 0x8E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x420 CALLER DUP3 PUSH2 0x915 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH0 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x43F DUP3 CALLER DUP4 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x412 DUP3 DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH2 0x9A2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x487 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x48F PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B1 DUP2 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x548 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x5A2 DUP3 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5B1 DUP3 DUP8 DUP8 DUP8 PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x603 DUP11 DUP11 DUP11 PUSH2 0x649 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x617 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA91 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x6D0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x78B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x7B5 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x897 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x412 PUSH0 DUP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x412 DUP3 PUSH0 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9AA PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x8C4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E9 PUSH32 0x0 PUSH1 0x6 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E9 PUSH32 0x0 PUSH1 0x7 PUSH2 0xBB5 JUMP JUMPDEST PUSH0 PUSH2 0x3B7 PUSH2 0xA45 PUSH2 0x733 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xA75 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC5E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA85 DUP3 DUP3 PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6D0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB55 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xBCF JUMPI PUSH2 0xBC8 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B7 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBDB SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC07 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC52 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC52 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC35 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x3B7 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC97 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD13 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xD1C JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xD42 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD56 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBD PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xDE6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDFD DUP4 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE58 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEE4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF47 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF7 DUP4 PUSH2 0xFC2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1017 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1020 DUP5 PUSH2 0xFC2 JUMP JUMPDEST SWAP3 POP PUSH2 0x102E PUSH1 0x20 DUP6 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFBB DUP3 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x108D PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xF7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x109F DUP2 DUP10 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F4 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10D6 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x111B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1124 DUP9 PUSH2 0xFC2 JUMP JUMPDEST SWAP7 POP PUSH2 0x1132 PUSH1 0x20 DUP10 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1155 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118C DUP4 PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x119A PUSH1 0x20 DUP5 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE DUP13 0x2C ADDMOD 0xF9 0xBC 0xE6 0xED 0xF 0x23 0xC5 PUSH32 0x470EC49ABE2D9D9D211FF613D96AC141ED8BD98C64736F6C634300081A003300 ",
							"sourceMap": "84754:691:0:-:0;;;84838:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;83445:52;;;;;;;;;;;;;-1:-1:-1;;;83445:52:0;;;83484:4;77289:431;;;;;;;;;;;;;-1:-1:-1;;;77289:431:0;;;84920:12;12757:113;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;12831:5;12823;:13;;;;;;:::i;:::-;-1:-1:-1;12846:7:0;:17;12856:7;12846;:17;:::i;:::-;-1:-1:-1;;24352:7:0;:15;;-1:-1:-1;;24352:15:0;;;-1:-1:-1;;;;;;28417:26:0;;28413:95;;28466:31;;-1:-1:-1;;;28466:31:0;;28494:1;28466:31;;;3096:51:1;3069:18;;28466:31:0;;;;;;;;28413:95;28517:32;28536:12;28517:18;:32::i;:::-;-1:-1:-1;77362:45:0;:4;77393:13;77362:30;:45::i;:::-;77354:53;;77428:51;:7;77462:16;77428:33;:51::i;:::-;77417:62;;77503:22;;;;;;;;;;77489:36;;77552:25;;;;;;77535:42;;77605:13;77588:30;;77653:23;78187:11;;78200:14;;78165:80;;;76040:95;78165:80;;;3417:25:1;3458:18;;;3451:34;;;;3501:18;;;3494:34;78216:13:0;3544:18:1;;;3537:34;78239:4:0;3587:19:1;;;3580:61;78129:7:0;;3389:19:1;;78165:80:0;;;;;;;;;;;;78155:91;;;;;;78148:98;;78074:179;;77653:23;77628:48;;-1:-1:-1;;77708:4:0;77686:27;;-1:-1:-1;84754:691:0;;-1:-1:-1;84754:691:0;30056:187;30148:6;;;-1:-1:-1;;;;;30164:17:0;;;30148:6;30164:17;;;-1:-1:-1;;;;;;30164:17:0;;;;;;30196:40;;30148:6;;;;;;;;30196:40;;30129:16;;30196:40;30119:124;30056:187;:::o;71939:340::-;72035:11;72084:2;72068:5;72062:19;:24;72058:215;;;72109:20;72123:5;72109:13;:20::i;:::-;72102:27;;;;72058:215;72186:5;72160:46;72201:5;72186;72160:46;:::i;:::-;-1:-1:-1;70415:66:0;;-1:-1:-1;72058:215:0;71939:340;;;;:::o;70733:286::-;70798:11;70821:17;70847:3;70821:30;;70879:2;70865:4;:11;:16;70861:72;;;70918:3;70904:18;;-1:-1:-1;;;70904:18:0;;;;;;;;:::i;70861:72::-;70999:11;;70982:13;70999:4;70982:13;:::i;:::-;70974:36;;70733:286;-1:-1:-1;;;70733:286:0:o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:1;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:1;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:1;;;2795:26;2746:89;-1:-1:-1;;1603:1:1;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:1;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:1;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:1;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:1:o;3652:418::-;3801:2;3790:9;3783:21;3764:4;3833:6;3827:13;3876:6;3871:2;3860:9;3856:18;3849:34;3935:6;3930:2;3922:6;3918:15;3913:2;3902:9;3898:18;3892:50;3991:1;3986:2;3977:6;3966:9;3962:22;3958:31;3951:42;4061:2;4054;4050:7;4045:2;4037:6;4033:15;4029:29;4018:9;4014:45;4010:54;4002:62;;;3652:418;;;;:::o;4075:297::-;4193:12;;4240:4;4229:16;;;4223:23;;4193:12;4258:16;;4255:111;;;-1:-1:-1;;4332:4:1;4328:17;;;;4325:1;4321:25;4317:38;4306:50;;4075:297;-1:-1:-1;4075:297:1:o;:::-;84754:691:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3735": {
									"entryPoint": 992,
									"id": 3735,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_3513": {
									"entryPoint": 2527,
									"id": 3513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_3525": {
									"entryPoint": 2572,
									"id": 3525,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_662": {
									"entryPoint": 1609,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 2705,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3443": {
									"entryPoint": null,
									"id": 3443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_644": {
									"entryPoint": 2325,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1037": {
									"entryPoint": 2140,
									"id": 1037,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_3422": {
									"entryPoint": 1843,
									"id": 3422,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_3459": {
									"entryPoint": 2617,
									"id": 3459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 2273,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_909": {
									"entryPoint": 2466,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_880": {
									"entryPoint": 2961,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_893": {
									"entryPoint": 2926,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_770": {
									"entryPoint": 1627,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1481": {
									"entryPoint": 3366,
									"id": 1481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1099": {
									"entryPoint": 2377,
									"id": 1099,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1750,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_925": {
									"entryPoint": 2191,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_3817": {
									"entryPoint": 2915,
									"id": 3817,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3630,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_954": {
									"entryPoint": 3550,
									"id": 954,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3567": {
									"entryPoint": null,
									"id": 3567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 932,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_811": {
									"entryPoint": 1076,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_790": {
									"entryPoint": 1046,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_3184": {
									"entryPoint": 3924,
									"id": 3184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_3501": {
									"entryPoint": 1142,
									"id": 3501,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3796": {
									"entryPoint": 1024,
									"id": 3796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 788,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3552": {
									"entryPoint": null,
									"id": 3552,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3725": {
									"entryPoint": 1097,
									"id": 3725,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1020": {
									"entryPoint": null,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3772": {
									"entryPoint": 1126,
									"id": 3772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3708": {
									"entryPoint": 1236,
									"id": 3708,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1432": {
									"entryPoint": 2661,
									"id": 1432,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_1051": {
									"entryPoint": 1059,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1208,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_3251": {
									"entryPoint": 2997,
									"id": 3251,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_3152": {
									"entryPoint": 3569,
									"id": 3152,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2959": {
									"entryPoint": null,
									"id": 2959,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 957,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1079": {
									"entryPoint": 1551,
									"id": 1079,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1223,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1396": {
									"entryPoint": 3166,
									"id": 1396,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@unpause_3781": {
									"entryPoint": 1006,
									"id": 3781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8203:1",
										"nodeType": "YulBlock",
										"src": "0:8203:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:239:1",
													"nodeType": "YulBlock",
													"src": "64:239:1",
													"statements": [
														{
															"nativeSrc": "74:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																},
																"nativeSrc": "88:12:1",
																"nodeType": "YulFunctionCall",
																"src": "88:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:1",
																	"nodeType": "YulTypedName",
																	"src": "78:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:1"
																},
																"nativeSrc": "109:19:1",
																"nodeType": "YulFunctionCall",
																"src": "109:19:1"
															},
															"nativeSrc": "109:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "147:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "147:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "152:4:1",
																				"nodeType": "YulLiteral",
																				"src": "152:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "143:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:1"
																		},
																		"nativeSrc": "143:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "143:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "163:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "163:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "170:4:1",
																				"nodeType": "YulLiteral",
																				"src": "170:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "159:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "159:3:1"
																		},
																		"nativeSrc": "159:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "159:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "177:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "177:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "137:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "137:5:1"
																},
																"nativeSrc": "137:47:1",
																"nodeType": "YulFunctionCall",
																"src": "137:47:1"
															},
															"nativeSrc": "137:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "137:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "208:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "208:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "213:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "213:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:1"
																				},
																				"nativeSrc": "204:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "204:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "222:4:1",
																				"nodeType": "YulLiteral",
																				"src": "222:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "200:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:1"
																		},
																		"nativeSrc": "200:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "200:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "229:1:1",
																		"nodeType": "YulLiteral",
																		"src": "229:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:1"
																},
																"nativeSrc": "193:38:1",
																"nodeType": "YulFunctionCall",
																"src": "193:38:1"
															},
															"nativeSrc": "193:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "193:38:1"
														},
														{
															"nativeSrc": "240:57:1",
															"nodeType": "YulAssignment",
															"src": "240:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "255:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "268:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "268:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "276:2:1",
																								"nodeType": "YulLiteral",
																								"src": "276:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "264:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "264:3:1"
																						},
																						"nativeSrc": "264:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "264:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:2:1",
																								"nodeType": "YulLiteral",
																								"src": "285:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "281:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:1"
																						},
																						"nativeSrc": "281:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "281:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "260:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:1"
																				},
																				"nativeSrc": "260:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "260:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "251:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:1"
																		},
																		"nativeSrc": "251:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "251:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "292:4:1",
																		"nodeType": "YulLiteral",
																		"src": "292:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "247:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nativeSrc": "247:50:1",
																"nodeType": "YulFunctionCall",
																"src": "247:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "240:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "240:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:289:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:1",
														"nodeType": "YulTypedName",
														"src": "41:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:1",
														"nodeType": "YulTypedName",
														"src": "48:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:1",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"src": "14:289:1"
											},
											{
												"body": {
													"nativeSrc": "429:99:1",
													"nodeType": "YulBlock",
													"src": "429:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "439:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:1"
																},
																"nativeSrc": "439:21:1",
																"nodeType": "YulFunctionCall",
																"src": "439:21:1"
															},
															"nativeSrc": "439:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "439:21:1"
														},
														{
															"nativeSrc": "469:53:1",
															"nodeType": "YulAssignment",
															"src": "469:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "495:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:1",
																				"nodeType": "YulLiteral",
																				"src": "518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:1"
																		},
																		"nativeSrc": "503:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "477:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "477:17:1"
																},
																"nativeSrc": "477:45:1",
																"nodeType": "YulFunctionCall",
																"src": "477:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "469:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "469:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "308:220:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:1",
														"nodeType": "YulTypedName",
														"src": "398:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:1",
														"nodeType": "YulTypedName",
														"src": "409:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:1",
														"nodeType": "YulTypedName",
														"src": "420:4:1",
														"type": ""
													}
												],
												"src": "308:220:1"
											},
											{
												"body": {
													"nativeSrc": "582:124:1",
													"nodeType": "YulBlock",
													"src": "582:124:1",
													"statements": [
														{
															"nativeSrc": "592:29:1",
															"nodeType": "YulAssignment",
															"src": "592:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "614:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "614:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "601:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:12:1"
																},
																"nativeSrc": "601:20:1",
																"nodeType": "YulFunctionCall",
																"src": "601:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "592:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "684:16:1",
																"nodeType": "YulBlock",
																"src": "684:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "693:1:1",
																					"nodeType": "YulLiteral",
																					"src": "693:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:1",
																					"nodeType": "YulLiteral",
																					"src": "696:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "686:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "686:6:1"
																			},
																			"nativeSrc": "686:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "686:12:1"
																		},
																		"nativeSrc": "686:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "686:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "643:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "643:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "654:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "654:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "669:3:1",
																										"nodeType": "YulLiteral",
																										"src": "669:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "674:1:1",
																										"nodeType": "YulLiteral",
																										"src": "674:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "665:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "665:3:1"
																								},
																								"nativeSrc": "665:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "665:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "678:1:1",
																								"nodeType": "YulLiteral",
																								"src": "678:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "661:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "661:3:1"
																						},
																						"nativeSrc": "661:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "661:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "650:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "650:3:1"
																				},
																				"nativeSrc": "650:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "650:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "640:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:1"
																		},
																		"nativeSrc": "640:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "640:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "633:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:1"
																},
																"nativeSrc": "633:50:1",
																"nodeType": "YulFunctionCall",
																"src": "633:50:1"
															},
															"nativeSrc": "630:70:1",
															"nodeType": "YulIf",
															"src": "630:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "533:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "561:6:1",
														"nodeType": "YulTypedName",
														"src": "561:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "572:5:1",
														"nodeType": "YulTypedName",
														"src": "572:5:1",
														"type": ""
													}
												],
												"src": "533:173:1"
											},
											{
												"body": {
													"nativeSrc": "798:213:1",
													"nodeType": "YulBlock",
													"src": "798:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "844:16:1",
																"nodeType": "YulBlock",
																"src": "844:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "853:1:1",
																					"nodeType": "YulLiteral",
																					"src": "853:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "856:1:1",
																					"nodeType": "YulLiteral",
																					"src": "856:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "846:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "846:6:1"
																			},
																			"nativeSrc": "846:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "846:12:1"
																		},
																		"nativeSrc": "846:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "846:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "819:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "828:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "828:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "815:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:1"
																		},
																		"nativeSrc": "815:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "815:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:2:1",
																		"nodeType": "YulLiteral",
																		"src": "840:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																},
																"nativeSrc": "811:32:1",
																"nodeType": "YulFunctionCall",
																"src": "811:32:1"
															},
															"nativeSrc": "808:52:1",
															"nodeType": "YulIf",
															"src": "808:52:1"
														},
														{
															"nativeSrc": "869:39:1",
															"nodeType": "YulAssignment",
															"src": "869:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "898:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "898:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "879:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "879:18:1"
																},
																"nativeSrc": "879:29:1",
																"nodeType": "YulFunctionCall",
																"src": "879:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:1"
																}
															]
														},
														{
															"nativeSrc": "917:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "917:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "930:1:1",
																"nodeType": "YulLiteral",
																"src": "930:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "921:5:1",
																	"nodeType": "YulTypedName",
																	"src": "921:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "940:41:1",
															"nodeType": "YulAssignment",
															"src": "940:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:1",
																				"nodeType": "YulLiteral",
																				"src": "977:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:1"
																		},
																		"nativeSrc": "962:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "949:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "949:12:1"
																},
																"nativeSrc": "949:32:1",
																"nodeType": "YulFunctionCall",
																"src": "949:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "940:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:1"
																}
															]
														},
														{
															"nativeSrc": "990:15:1",
															"nodeType": "YulAssignment",
															"src": "990:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1000:5:1",
																"nodeType": "YulIdentifier",
																"src": "1000:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "990:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "711:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:1",
														"nodeType": "YulTypedName",
														"src": "756:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "767:7:1",
														"nodeType": "YulTypedName",
														"src": "767:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "779:6:1",
														"nodeType": "YulTypedName",
														"src": "779:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "787:6:1",
														"nodeType": "YulTypedName",
														"src": "787:6:1",
														"type": ""
													}
												],
												"src": "711:300:1"
											},
											{
												"body": {
													"nativeSrc": "1111:92:1",
													"nodeType": "YulBlock",
													"src": "1111:92:1",
													"statements": [
														{
															"nativeSrc": "1121:26:1",
															"nodeType": "YulAssignment",
															"src": "1121:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1133:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1129:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:1"
																},
																"nativeSrc": "1129:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1129:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1121:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1163:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1188:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1188:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1181:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1181:6:1"
																				},
																				"nativeSrc": "1181:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1174:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:1"
																		},
																		"nativeSrc": "1174:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1156:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:1"
																},
																"nativeSrc": "1156:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1156:41:1"
															},
															"nativeSrc": "1156:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1156:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1016:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1080:9:1",
														"nodeType": "YulTypedName",
														"src": "1080:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1091:6:1",
														"nodeType": "YulTypedName",
														"src": "1091:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1102:4:1",
														"nodeType": "YulTypedName",
														"src": "1102:4:1",
														"type": ""
													}
												],
												"src": "1016:187:1"
											},
											{
												"body": {
													"nativeSrc": "1309:76:1",
													"nodeType": "YulBlock",
													"src": "1309:76:1",
													"statements": [
														{
															"nativeSrc": "1319:26:1",
															"nodeType": "YulAssignment",
															"src": "1319:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:1"
																},
																"nativeSrc": "1327:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1327:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1319:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1361:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1372:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:1"
																},
																"nativeSrc": "1354:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1354:25:1"
															},
															"nativeSrc": "1354:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1354:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1208:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1278:9:1",
														"nodeType": "YulTypedName",
														"src": "1278:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1289:6:1",
														"nodeType": "YulTypedName",
														"src": "1289:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1300:4:1",
														"nodeType": "YulTypedName",
														"src": "1300:4:1",
														"type": ""
													}
												],
												"src": "1208:177:1"
											},
											{
												"body": {
													"nativeSrc": "1494:270:1",
													"nodeType": "YulBlock",
													"src": "1494:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1540:16:1",
																"nodeType": "YulBlock",
																"src": "1540:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1549:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1552:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1542:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:1"
																			},
																			"nativeSrc": "1542:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1542:12:1"
																		},
																		"nativeSrc": "1542:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1515:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1515:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1524:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1524:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1511:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:1"
																		},
																		"nativeSrc": "1511:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1511:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:1"
																},
																"nativeSrc": "1507:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1507:32:1"
															},
															"nativeSrc": "1504:52:1",
															"nodeType": "YulIf",
															"src": "1504:52:1"
														},
														{
															"nativeSrc": "1565:39:1",
															"nodeType": "YulAssignment",
															"src": "1565:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1594:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1575:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1575:18:1"
																},
																"nativeSrc": "1575:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1575:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:1"
																}
															]
														},
														{
															"nativeSrc": "1613:48:1",
															"nodeType": "YulAssignment",
															"src": "1613:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1657:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:1"
																		},
																		"nativeSrc": "1642:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1623:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:18:1"
																},
																"nativeSrc": "1623:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1623:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1613:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																}
															]
														},
														{
															"nativeSrc": "1670:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1670:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1683:1:1",
																"nodeType": "YulLiteral",
																"src": "1683:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1674:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1674:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1693:41:1",
															"nodeType": "YulAssignment",
															"src": "1693:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1730:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1730:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1715:3:1"
																		},
																		"nativeSrc": "1715:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1715:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1702:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1702:12:1"
																},
																"nativeSrc": "1702:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1693:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:5:1"
																}
															]
														},
														{
															"nativeSrc": "1743:15:1",
															"nodeType": "YulAssignment",
															"src": "1743:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1753:5:1",
																"nodeType": "YulIdentifier",
																"src": "1753:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1390:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1444:9:1",
														"nodeType": "YulTypedName",
														"src": "1444:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1455:7:1",
														"nodeType": "YulTypedName",
														"src": "1455:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1467:6:1",
														"nodeType": "YulTypedName",
														"src": "1467:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1475:6:1",
														"nodeType": "YulTypedName",
														"src": "1475:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1483:6:1",
														"nodeType": "YulTypedName",
														"src": "1483:6:1",
														"type": ""
													}
												],
												"src": "1390:374:1"
											},
											{
												"body": {
													"nativeSrc": "1866:87:1",
													"nodeType": "YulBlock",
													"src": "1866:87:1",
													"statements": [
														{
															"nativeSrc": "1876:26:1",
															"nodeType": "YulAssignment",
															"src": "1876:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1888:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1888:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1899:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1899:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1884:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:1"
																},
																"nativeSrc": "1884:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1884:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1876:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1876:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1918:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1933:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1941:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1941:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1929:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:1"
																		},
																		"nativeSrc": "1929:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1929:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1911:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:1"
																},
																"nativeSrc": "1911:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1911:36:1"
															},
															"nativeSrc": "1911:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1911:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1769:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1835:9:1",
														"nodeType": "YulTypedName",
														"src": "1835:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1846:6:1",
														"nodeType": "YulTypedName",
														"src": "1846:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1857:4:1",
														"nodeType": "YulTypedName",
														"src": "1857:4:1",
														"type": ""
													}
												],
												"src": "1769:184:1"
											},
											{
												"body": {
													"nativeSrc": "2059:76:1",
													"nodeType": "YulBlock",
													"src": "2059:76:1",
													"statements": [
														{
															"nativeSrc": "2069:26:1",
															"nodeType": "YulAssignment",
															"src": "2069:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2081:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2092:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2077:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:1"
																},
																"nativeSrc": "2077:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2077:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2111:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:25:1"
															},
															"nativeSrc": "2104:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1958:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2028:9:1",
														"nodeType": "YulTypedName",
														"src": "2028:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2039:6:1",
														"nodeType": "YulTypedName",
														"src": "2039:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2050:4:1",
														"nodeType": "YulTypedName",
														"src": "2050:4:1",
														"type": ""
													}
												],
												"src": "1958:177:1"
											},
											{
												"body": {
													"nativeSrc": "2210:156:1",
													"nodeType": "YulBlock",
													"src": "2210:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2256:16:1",
																"nodeType": "YulBlock",
																"src": "2256:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2265:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2265:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2258:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:1"
																			},
																			"nativeSrc": "2258:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2258:12:1"
																		},
																		"nativeSrc": "2258:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2258:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2231:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2231:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2240:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2240:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2227:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:1"
																		},
																		"nativeSrc": "2227:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2252:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2252:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2223:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:1"
																},
																"nativeSrc": "2223:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2223:32:1"
															},
															"nativeSrc": "2220:52:1",
															"nodeType": "YulIf",
															"src": "2220:52:1"
														},
														{
															"nativeSrc": "2281:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2281:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2294:1:1",
																"nodeType": "YulLiteral",
																"src": "2294:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2285:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2285:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2304:32:1",
															"nodeType": "YulAssignment",
															"src": "2304:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2326:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2313:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2313:12:1"
																},
																"nativeSrc": "2313:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2313:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2304:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2304:5:1"
																}
															]
														},
														{
															"nativeSrc": "2345:15:1",
															"nodeType": "YulAssignment",
															"src": "2345:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2355:5:1",
																"nodeType": "YulIdentifier",
																"src": "2355:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2140:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2176:9:1",
														"nodeType": "YulTypedName",
														"src": "2176:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2187:7:1",
														"nodeType": "YulTypedName",
														"src": "2187:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2199:6:1",
														"nodeType": "YulTypedName",
														"src": "2199:6:1",
														"type": ""
													}
												],
												"src": "2140:226:1"
											},
											{
												"body": {
													"nativeSrc": "2441:116:1",
													"nodeType": "YulBlock",
													"src": "2441:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2487:16:1",
																"nodeType": "YulBlock",
																"src": "2487:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2496:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2496:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2489:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2489:6:1"
																			},
																			"nativeSrc": "2489:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2489:12:1"
																		},
																		"nativeSrc": "2489:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2489:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2462:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2462:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2471:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2471:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2458:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:1"
																		},
																		"nativeSrc": "2458:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2458:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2454:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:1"
																},
																"nativeSrc": "2454:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2454:32:1"
															},
															"nativeSrc": "2451:52:1",
															"nodeType": "YulIf",
															"src": "2451:52:1"
														},
														{
															"nativeSrc": "2512:39:1",
															"nodeType": "YulAssignment",
															"src": "2512:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2541:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2541:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2522:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2522:18:1"
																},
																"nativeSrc": "2522:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2522:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2512:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2371:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2407:9:1",
														"nodeType": "YulTypedName",
														"src": "2407:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2418:7:1",
														"nodeType": "YulTypedName",
														"src": "2418:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2430:6:1",
														"nodeType": "YulTypedName",
														"src": "2430:6:1",
														"type": ""
													}
												],
												"src": "2371:186:1"
											},
											{
												"body": {
													"nativeSrc": "2919:881:1",
													"nodeType": "YulBlock",
													"src": "2919:881:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2936:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2936:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2951:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2951:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2963:3:1",
																						"nodeType": "YulLiteral",
																						"src": "2963:3:1",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2968:3:1",
																						"nodeType": "YulLiteral",
																						"src": "2968:3:1",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2959:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2959:3:1"
																				},
																				"nativeSrc": "2959:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2959:13:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2947:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:1"
																		},
																		"nativeSrc": "2947:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:26:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:1"
																},
																"nativeSrc": "2929:45:1",
																"nodeType": "YulFunctionCall",
																"src": "2929:45:1"
															},
															"nativeSrc": "2929:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "2929:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:1"
																		},
																		"nativeSrc": "2990:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3010:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2983:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nativeSrc": "2983:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2983:31:1"
															},
															"nativeSrc": "2983:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2983:31:1"
														},
														{
															"nativeSrc": "3023:60:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3023:60:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3055:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3067:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3067:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3078:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3078:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3063:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:1"
																		},
																		"nativeSrc": "3063:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3037:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3037:17:1"
																},
																"nativeSrc": "3037:46:1",
																"nodeType": "YulFunctionCall",
																"src": "3037:46:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3027:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3027:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3103:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3114:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3099:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:1"
																		},
																		"nativeSrc": "3099:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3099:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3123:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3131:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3119:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:1"
																		},
																		"nativeSrc": "3119:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3119:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:1"
																},
																"nativeSrc": "3092:50:1",
																"nodeType": "YulFunctionCall",
																"src": "3092:50:1"
															},
															"nativeSrc": "3092:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "3092:50:1"
														},
														{
															"nativeSrc": "3151:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3151:47:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3183:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3183:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3191:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3165:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3165:17:1"
																},
																"nativeSrc": "3165:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3165:33:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "3155:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3155:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3229:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3229:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:1"
																		},
																		"nativeSrc": "3214:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3214:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3234:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3234:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:1"
																},
																"nativeSrc": "3207:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3207:34:1"
															},
															"nativeSrc": "3207:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3207:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3272:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3272:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3257:3:1"
																		},
																		"nativeSrc": "3257:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3257:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3282:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3282:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3298:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3298:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3303:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3303:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3294:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3294:3:1"
																						},
																						"nativeSrc": "3294:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3294:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3307:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3307:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3290:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3290:3:1"
																				},
																				"nativeSrc": "3290:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3290:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3278:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:1"
																		},
																		"nativeSrc": "3278:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3278:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:1"
																},
																"nativeSrc": "3250:61:1",
																"nodeType": "YulFunctionCall",
																"src": "3250:61:1"
															},
															"nativeSrc": "3250:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "3250:61:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3331:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3342:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3342:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3327:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:1"
																		},
																		"nativeSrc": "3327:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3348:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3320:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:1"
																},
																"nativeSrc": "3320:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3320:35:1"
															},
															"nativeSrc": "3320:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "3320:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3375:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3386:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3386:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:1"
																		},
																		"nativeSrc": "3371:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3404:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3404:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3392:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3392:3:1"
																		},
																		"nativeSrc": "3392:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3392:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3364:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:1"
																},
																"nativeSrc": "3364:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3364:51:1"
															},
															"nativeSrc": "3364:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3364:51:1"
														},
														{
															"nativeSrc": "3424:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3424:17:1",
															"value": {
																"name": "tail_2",
																"nativeSrc": "3435:6:1",
																"nodeType": "YulIdentifier",
																"src": "3435:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3428:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3428:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3450:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3450:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3470:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3470:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3464:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3464:5:1"
																},
																"nativeSrc": "3464:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3464:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3454:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3454:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3493:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3501:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3486:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:1"
																},
																"nativeSrc": "3486:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3486:22:1"
															},
															"nativeSrc": "3486:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "3486:22:1"
														},
														{
															"nativeSrc": "3517:22:1",
															"nodeType": "YulAssignment",
															"src": "3517:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3528:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3528:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3524:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3524:3:1"
																},
																"nativeSrc": "3524:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3524:15:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3517:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3517:3:1"
																}
															]
														},
														{
															"nativeSrc": "3548:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3548:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3566:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3574:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3574:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3562:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3562:3:1"
																},
																"nativeSrc": "3562:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3562:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3552:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3552:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3586:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3586:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3595:1:1",
																"nodeType": "YulLiteral",
																"src": "3595:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3590:1:1",
																	"nodeType": "YulTypedName",
																	"src": "3590:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3654:120:1",
																"nodeType": "YulBlock",
																"src": "3654:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3675:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3686:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3686:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3680:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3680:5:1"
																					},
																					"nativeSrc": "3680:13:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3680:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3668:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:1"
																			},
																			"nativeSrc": "3668:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3668:26:1"
																		},
																		"nativeSrc": "3668:26:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:26:1"
																	},
																	{
																		"nativeSrc": "3707:19:1",
																		"nodeType": "YulAssignment",
																		"src": "3707:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3718:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3718:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3723:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3723:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3714:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3714:3:1"
																			},
																			"nativeSrc": "3714:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3714:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3707:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3707:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3739:25:1",
																		"nodeType": "YulAssignment",
																		"src": "3739:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3753:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3753:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3761:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3761:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3749:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3749:3:1"
																			},
																			"nativeSrc": "3749:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3749:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3616:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3616:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3619:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3619:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3613:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:2:1"
																},
																"nativeSrc": "3613:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:13:1"
															},
															"nativeSrc": "3605:169:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3627:18:1",
																"nodeType": "YulBlock",
																"src": "3627:18:1",
																"statements": [
																	{
																		"nativeSrc": "3629:14:1",
																		"nodeType": "YulAssignment",
																		"src": "3629:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3638:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "3638:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3641:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3634:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:1"
																			},
																			"nativeSrc": "3634:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3629:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "3629:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3609:3:1",
																"nodeType": "YulBlock",
																"src": "3609:3:1",
																"statements": []
															},
															"src": "3605:169:1"
														},
														{
															"nativeSrc": "3783:11:1",
															"nodeType": "YulAssignment",
															"src": "3783:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3791:3:1",
																"nodeType": "YulIdentifier",
																"src": "3791:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3783:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3783:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2562:1238:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2840:9:1",
														"nodeType": "YulTypedName",
														"src": "2840:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2851:6:1",
														"nodeType": "YulTypedName",
														"src": "2851:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2859:6:1",
														"nodeType": "YulTypedName",
														"src": "2859:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2867:6:1",
														"nodeType": "YulTypedName",
														"src": "2867:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2875:6:1",
														"nodeType": "YulTypedName",
														"src": "2875:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2883:6:1",
														"nodeType": "YulTypedName",
														"src": "2883:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2891:6:1",
														"nodeType": "YulTypedName",
														"src": "2891:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2899:6:1",
														"nodeType": "YulTypedName",
														"src": "2899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2910:4:1",
														"nodeType": "YulTypedName",
														"src": "2910:4:1",
														"type": ""
													}
												],
												"src": "2562:1238:1"
											},
											{
												"body": {
													"nativeSrc": "3906:102:1",
													"nodeType": "YulBlock",
													"src": "3906:102:1",
													"statements": [
														{
															"nativeSrc": "3916:26:1",
															"nodeType": "YulAssignment",
															"src": "3916:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3928:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3928:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3939:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3924:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3924:3:1"
																},
																"nativeSrc": "3924:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3924:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3916:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3916:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3958:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3973:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3973:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3989:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3989:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3994:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3994:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3985:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3985:3:1"
																						},
																						"nativeSrc": "3985:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3985:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3998:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3998:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3981:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3981:3:1"
																				},
																				"nativeSrc": "3981:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3981:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3969:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3969:3:1"
																		},
																		"nativeSrc": "3969:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3969:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:1"
																},
																"nativeSrc": "3951:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3951:51:1"
															},
															"nativeSrc": "3951:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3951:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3805:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3875:9:1",
														"nodeType": "YulTypedName",
														"src": "3875:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:1",
														"nodeType": "YulTypedName",
														"src": "3886:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:1",
														"nodeType": "YulTypedName",
														"src": "3897:4:1",
														"type": ""
													}
												],
												"src": "3805:203:1"
											},
											{
												"body": {
													"nativeSrc": "4183:733:1",
													"nodeType": "YulBlock",
													"src": "4183:733:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4230:16:1",
																"nodeType": "YulBlock",
																"src": "4230:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4239:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4242:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4242:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4232:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4232:6:1"
																			},
																			"nativeSrc": "4232:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4232:12:1"
																		},
																		"nativeSrc": "4232:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4232:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4204:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4204:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4213:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4213:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4200:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:1"
																		},
																		"nativeSrc": "4200:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4225:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4196:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:1"
																},
																"nativeSrc": "4196:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4196:33:1"
															},
															"nativeSrc": "4193:53:1",
															"nodeType": "YulIf",
															"src": "4193:53:1"
														},
														{
															"nativeSrc": "4255:39:1",
															"nodeType": "YulAssignment",
															"src": "4255:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4284:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4265:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4265:18:1"
																},
																"nativeSrc": "4265:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4265:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4255:6:1"
																}
															]
														},
														{
															"nativeSrc": "4303:48:1",
															"nodeType": "YulAssignment",
															"src": "4303:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4347:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nativeSrc": "4332:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4313:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4313:18:1"
																},
																"nativeSrc": "4313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4313:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:1"
																}
															]
														},
														{
															"nativeSrc": "4360:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4360:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4373:1:1",
																"nodeType": "YulLiteral",
																"src": "4373:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4364:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4364:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4383:41:1",
															"nodeType": "YulAssignment",
															"src": "4383:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4409:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4420:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4420:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4405:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:1"
																		},
																		"nativeSrc": "4405:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4392:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4392:12:1"
																},
																"nativeSrc": "4392:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4392:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4383:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4383:5:1"
																}
															]
														},
														{
															"nativeSrc": "4433:15:1",
															"nodeType": "YulAssignment",
															"src": "4433:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4443:5:1",
																"nodeType": "YulIdentifier",
																"src": "4443:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:1"
																}
															]
														},
														{
															"nativeSrc": "4457:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4457:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4472:1:1",
																"nodeType": "YulLiteral",
																"src": "4472:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4461:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4461:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4482:43:1",
															"nodeType": "YulAssignment",
															"src": "4482:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4521:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4521:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:1"
																		},
																		"nativeSrc": "4506:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4506:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4493:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4493:12:1"
																},
																"nativeSrc": "4493:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4493:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4482:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4482:7:1"
																}
															]
														},
														{
															"nativeSrc": "4534:17:1",
															"nodeType": "YulAssignment",
															"src": "4534:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "4544:7:1",
																"nodeType": "YulIdentifier",
																"src": "4544:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4534:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:1"
																}
															]
														},
														{
															"nativeSrc": "4560:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4560:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4592:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4592:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4603:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4603:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4588:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:1"
																		},
																		"nativeSrc": "4588:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4575:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4575:12:1"
																},
																"nativeSrc": "4575:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4575:33:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4564:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4564:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4660:16:1",
																"nodeType": "YulBlock",
																"src": "4660:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4669:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4669:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4672:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4672:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4662:6:1"
																			},
																			"nativeSrc": "4662:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4662:12:1"
																		},
																		"nativeSrc": "4662:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4662:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "4630:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4630:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nativeSrc": "4643:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "4643:7:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4652:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4652:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4639:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4639:3:1"
																				},
																				"nativeSrc": "4639:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4639:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4627:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4627:2:1"
																		},
																		"nativeSrc": "4627:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4627:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:1"
																},
																"nativeSrc": "4620:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4620:39:1"
															},
															"nativeSrc": "4617:59:1",
															"nodeType": "YulIf",
															"src": "4617:59:1"
														},
														{
															"nativeSrc": "4685:17:1",
															"nodeType": "YulAssignment",
															"src": "4685:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "4695:7:1",
																"nodeType": "YulIdentifier",
																"src": "4695:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4685:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:1"
																}
															]
														},
														{
															"nativeSrc": "4711:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4711:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4726:1:1",
																"nodeType": "YulLiteral",
																"src": "4726:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4715:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4715:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4736:44:1",
															"nodeType": "YulAssignment",
															"src": "4736:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4775:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4775:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:1"
																		},
																		"nativeSrc": "4760:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4760:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4747:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4747:12:1"
																},
																"nativeSrc": "4747:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4747:33:1"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "4736:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4736:7:1"
																}
															]
														},
														{
															"nativeSrc": "4789:17:1",
															"nodeType": "YulAssignment",
															"src": "4789:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "4799:7:1",
																"nodeType": "YulIdentifier",
																"src": "4799:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4789:6:1"
																}
															]
														},
														{
															"nativeSrc": "4815:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4815:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4830:1:1",
																"nodeType": "YulLiteral",
																"src": "4830:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "4819:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4819:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4840:44:1",
															"nodeType": "YulAssignment",
															"src": "4840:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4868:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4879:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4879:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4864:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:1"
																		},
																		"nativeSrc": "4864:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4864:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4851:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4851:12:1"
																},
																"nativeSrc": "4851:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4851:33:1"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "4840:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4840:7:1"
																}
															]
														},
														{
															"nativeSrc": "4893:17:1",
															"nodeType": "YulAssignment",
															"src": "4893:17:1",
															"value": {
																"name": "value_4",
																"nativeSrc": "4903:7:1",
																"nodeType": "YulIdentifier",
																"src": "4903:7:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4893:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "4013:903:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4101:9:1",
														"nodeType": "YulTypedName",
														"src": "4101:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4112:7:1",
														"nodeType": "YulTypedName",
														"src": "4112:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4124:6:1",
														"nodeType": "YulTypedName",
														"src": "4124:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4132:6:1",
														"nodeType": "YulTypedName",
														"src": "4132:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4140:6:1",
														"nodeType": "YulTypedName",
														"src": "4140:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4148:6:1",
														"nodeType": "YulTypedName",
														"src": "4148:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4156:6:1",
														"nodeType": "YulTypedName",
														"src": "4156:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4164:6:1",
														"nodeType": "YulTypedName",
														"src": "4164:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4172:6:1",
														"nodeType": "YulTypedName",
														"src": "4172:6:1",
														"type": ""
													}
												],
												"src": "4013:903:1"
											},
											{
												"body": {
													"nativeSrc": "5008:173:1",
													"nodeType": "YulBlock",
													"src": "5008:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5054:16:1",
																"nodeType": "YulBlock",
																"src": "5054:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5063:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5063:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5066:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5066:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5056:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5056:6:1"
																			},
																			"nativeSrc": "5056:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5056:12:1"
																		},
																		"nativeSrc": "5056:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5056:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5029:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5038:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5038:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5025:3:1"
																		},
																		"nativeSrc": "5025:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5050:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5050:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5021:3:1"
																},
																"nativeSrc": "5021:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5021:32:1"
															},
															"nativeSrc": "5018:52:1",
															"nodeType": "YulIf",
															"src": "5018:52:1"
														},
														{
															"nativeSrc": "5079:39:1",
															"nodeType": "YulAssignment",
															"src": "5079:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5108:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5108:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5089:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5089:18:1"
																},
																"nativeSrc": "5089:29:1",
																"nodeType": "YulFunctionCall",
																"src": "5089:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:1"
																}
															]
														},
														{
															"nativeSrc": "5127:48:1",
															"nodeType": "YulAssignment",
															"src": "5127:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5160:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5160:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5156:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5156:3:1"
																		},
																		"nativeSrc": "5156:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5156:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5137:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5137:18:1"
																},
																"nativeSrc": "5137:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4921:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4966:9:1",
														"nodeType": "YulTypedName",
														"src": "4966:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4977:7:1",
														"nodeType": "YulTypedName",
														"src": "4977:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4989:6:1",
														"nodeType": "YulTypedName",
														"src": "4989:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4997:6:1",
														"nodeType": "YulTypedName",
														"src": "4997:6:1",
														"type": ""
													}
												],
												"src": "4921:260:1"
											},
											{
												"body": {
													"nativeSrc": "5241:325:1",
													"nodeType": "YulBlock",
													"src": "5241:325:1",
													"statements": [
														{
															"nativeSrc": "5251:22:1",
															"nodeType": "YulAssignment",
															"src": "5251:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5265:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5265:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5268:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5268:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:1"
																},
																"nativeSrc": "5261:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5261:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																}
															]
														},
														{
															"nativeSrc": "5282:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5282:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5312:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5312:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5318:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5318:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5308:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:1"
																},
																"nativeSrc": "5308:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5308:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5286:18:1",
																	"nodeType": "YulTypedName",
																	"src": "5286:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5359:31:1",
																"nodeType": "YulBlock",
																"src": "5359:31:1",
																"statements": [
																	{
																		"nativeSrc": "5361:27:1",
																		"nodeType": "YulAssignment",
																		"src": "5361:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5375:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5375:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5383:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5383:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5371:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5371:3:1"
																			},
																			"nativeSrc": "5371:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5371:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5361:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5339:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5339:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5332:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5332:6:1"
																},
																"nativeSrc": "5332:26:1",
																"nodeType": "YulFunctionCall",
																"src": "5332:26:1"
															},
															"nativeSrc": "5329:61:1",
															"nodeType": "YulIf",
															"src": "5329:61:1"
														},
														{
															"body": {
																"nativeSrc": "5449:111:1",
																"nodeType": "YulBlock",
																"src": "5449:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5470:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5470:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5477:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5477:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5482:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5482:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5473:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5473:3:1"
																					},
																					"nativeSrc": "5473:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5473:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5463:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5463:6:1"
																			},
																			"nativeSrc": "5463:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5463:31:1"
																		},
																		"nativeSrc": "5463:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5514:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5514:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5517:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5517:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5507:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:1"
																			},
																			"nativeSrc": "5507:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5507:15:1"
																		},
																		"nativeSrc": "5507:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5507:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5542:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5542:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5545:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5545:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5535:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:1"
																			},
																			"nativeSrc": "5535:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5535:15:1"
																		},
																		"nativeSrc": "5535:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5535:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5405:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5405:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5428:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5428:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5425:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5425:2:1"
																		},
																		"nativeSrc": "5425:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5402:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5402:2:1"
																},
																"nativeSrc": "5402:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5402:38:1"
															},
															"nativeSrc": "5399:161:1",
															"nodeType": "YulIf",
															"src": "5399:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5186:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5221:4:1",
														"nodeType": "YulTypedName",
														"src": "5221:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5230:6:1",
														"nodeType": "YulTypedName",
														"src": "5230:6:1",
														"type": ""
													}
												],
												"src": "5186:380:1"
											},
											{
												"body": {
													"nativeSrc": "5603:95:1",
													"nodeType": "YulBlock",
													"src": "5603:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5620:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5627:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5627:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5632:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nativeSrc": "5623:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5613:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:1"
																},
																"nativeSrc": "5613:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5613:31:1"
															},
															"nativeSrc": "5613:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5613:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5660:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5663:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5663:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:1"
																},
																"nativeSrc": "5653:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5653:15:1"
															},
															"nativeSrc": "5653:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5684:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5687:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:1"
																},
																"nativeSrc": "5677:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5677:15:1"
															},
															"nativeSrc": "5677:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5677:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5571:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5571:127:1"
											},
											{
												"body": {
													"nativeSrc": "5944:346:1",
													"nodeType": "YulBlock",
													"src": "5944:346:1",
													"statements": [
														{
															"nativeSrc": "5954:27:1",
															"nodeType": "YulAssignment",
															"src": "5954:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5966:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5966:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5977:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5962:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5962:3:1"
																},
																"nativeSrc": "5962:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5962:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5954:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5954:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5997:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5997:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6008:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6008:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5990:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:1"
																},
																"nativeSrc": "5990:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5990:25:1"
															},
															"nativeSrc": "5990:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5990:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6035:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6035:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6046:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6046:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6031:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6031:3:1"
																		},
																		"nativeSrc": "6031:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6031:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6055:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6055:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6071:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6071:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6076:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6076:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6067:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6067:3:1"
																						},
																						"nativeSrc": "6067:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6067:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6080:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6080:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6063:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6063:3:1"
																				},
																				"nativeSrc": "6063:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6063:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6051:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6051:3:1"
																		},
																		"nativeSrc": "6051:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6051:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6024:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:1"
																},
																"nativeSrc": "6024:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6024:60:1"
															},
															"nativeSrc": "6024:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6024:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6115:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6115:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6100:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:1"
																		},
																		"nativeSrc": "6100:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6124:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6124:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6140:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6140:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6145:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6145:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6136:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6136:3:1"
																						},
																						"nativeSrc": "6136:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6136:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6149:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6149:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6132:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6132:3:1"
																				},
																				"nativeSrc": "6132:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6132:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6120:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6120:3:1"
																		},
																		"nativeSrc": "6120:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6120:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:1"
																},
																"nativeSrc": "6093:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6093:60:1"
															},
															"nativeSrc": "6093:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6093:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6173:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6184:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6184:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6169:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:1"
																		},
																		"nativeSrc": "6169:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6189:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6189:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:1"
																},
																"nativeSrc": "6162:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:34:1"
															},
															"nativeSrc": "6162:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6162:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6216:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6216:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6227:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6227:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6212:3:1"
																		},
																		"nativeSrc": "6212:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6212:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6233:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:1"
																},
																"nativeSrc": "6205:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6205:35:1"
															},
															"nativeSrc": "6205:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6205:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6260:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6271:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6271:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:1"
																		},
																		"nativeSrc": "6256:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "6277:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6277:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:1"
																},
																"nativeSrc": "6249:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6249:35:1"
															},
															"nativeSrc": "6249:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6249:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5703:587:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5873:9:1",
														"nodeType": "YulTypedName",
														"src": "5873:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5884:6:1",
														"nodeType": "YulTypedName",
														"src": "5884:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5892:6:1",
														"nodeType": "YulTypedName",
														"src": "5892:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5900:6:1",
														"nodeType": "YulTypedName",
														"src": "5900:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5908:6:1",
														"nodeType": "YulTypedName",
														"src": "5908:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5916:6:1",
														"nodeType": "YulTypedName",
														"src": "5916:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5924:6:1",
														"nodeType": "YulTypedName",
														"src": "5924:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5935:4:1",
														"nodeType": "YulTypedName",
														"src": "5935:4:1",
														"type": ""
													}
												],
												"src": "5703:587:1"
											},
											{
												"body": {
													"nativeSrc": "6424:171:1",
													"nodeType": "YulBlock",
													"src": "6424:171:1",
													"statements": [
														{
															"nativeSrc": "6434:26:1",
															"nodeType": "YulAssignment",
															"src": "6434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6442:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6442:3:1"
																},
																"nativeSrc": "6442:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6442:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6434:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6434:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6476:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6476:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6491:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6507:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6507:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6512:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6512:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6503:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6503:3:1"
																						},
																						"nativeSrc": "6503:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6503:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6499:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6499:3:1"
																				},
																				"nativeSrc": "6499:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6499:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:1"
																		},
																		"nativeSrc": "6487:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6469:6:1"
																},
																"nativeSrc": "6469:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6469:51:1"
															},
															"nativeSrc": "6469:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6469:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6540:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6540:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6551:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6551:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6536:3:1"
																		},
																		"nativeSrc": "6536:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6536:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6560:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6560:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6576:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6576:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6581:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6581:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6572:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6572:3:1"
																						},
																						"nativeSrc": "6572:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6572:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6585:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6585:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:1"
																				},
																				"nativeSrc": "6568:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6568:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6556:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:1"
																		},
																		"nativeSrc": "6556:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6529:6:1"
																},
																"nativeSrc": "6529:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6529:60:1"
															},
															"nativeSrc": "6529:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6529:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6295:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6385:9:1",
														"nodeType": "YulTypedName",
														"src": "6385:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6396:6:1",
														"nodeType": "YulTypedName",
														"src": "6396:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6404:6:1",
														"nodeType": "YulTypedName",
														"src": "6404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6415:4:1",
														"nodeType": "YulTypedName",
														"src": "6415:4:1",
														"type": ""
													}
												],
												"src": "6295:300:1"
											},
											{
												"body": {
													"nativeSrc": "6757:188:1",
													"nodeType": "YulBlock",
													"src": "6757:188:1",
													"statements": [
														{
															"nativeSrc": "6767:26:1",
															"nodeType": "YulAssignment",
															"src": "6767:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6779:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6779:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6790:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6790:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:1"
																},
																"nativeSrc": "6775:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6775:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6767:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6767:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6809:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6809:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6824:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6824:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6840:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6840:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6845:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6845:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6836:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6836:3:1"
																						},
																						"nativeSrc": "6836:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6836:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6849:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6849:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6832:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6832:3:1"
																				},
																				"nativeSrc": "6832:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6832:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6820:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:1"
																		},
																		"nativeSrc": "6820:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6820:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6802:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6802:6:1"
																},
																"nativeSrc": "6802:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6802:51:1"
															},
															"nativeSrc": "6802:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6802:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6884:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6884:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6869:3:1"
																		},
																		"nativeSrc": "6869:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6869:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6889:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6889:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:1"
																},
																"nativeSrc": "6862:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6862:34:1"
															},
															"nativeSrc": "6862:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6862:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6916:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6916:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6927:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6912:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:1"
																		},
																		"nativeSrc": "6912:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6912:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6932:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6905:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:1"
																},
																"nativeSrc": "6905:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6905:34:1"
															},
															"nativeSrc": "6905:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6905:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6600:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6710:9:1",
														"nodeType": "YulTypedName",
														"src": "6710:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6721:6:1",
														"nodeType": "YulTypedName",
														"src": "6721:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6729:6:1",
														"nodeType": "YulTypedName",
														"src": "6729:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6737:6:1",
														"nodeType": "YulTypedName",
														"src": "6737:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6748:4:1",
														"nodeType": "YulTypedName",
														"src": "6748:4:1",
														"type": ""
													}
												],
												"src": "6600:345:1"
											},
											{
												"body": {
													"nativeSrc": "7163:276:1",
													"nodeType": "YulBlock",
													"src": "7163:276:1",
													"statements": [
														{
															"nativeSrc": "7173:27:1",
															"nodeType": "YulAssignment",
															"src": "7173:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7185:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7196:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7196:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:1"
																},
																"nativeSrc": "7181:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7181:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7173:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7173:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7216:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7227:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7227:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7209:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:1"
																},
																"nativeSrc": "7209:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7209:25:1"
															},
															"nativeSrc": "7209:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7209:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7254:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7254:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7265:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7250:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:1"
																		},
																		"nativeSrc": "7250:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7250:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7270:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7270:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7243:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7243:6:1"
																},
																"nativeSrc": "7243:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7243:34:1"
															},
															"nativeSrc": "7243:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7243:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7297:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7308:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7308:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7293:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7293:3:1"
																		},
																		"nativeSrc": "7293:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7293:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7313:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7313:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:1"
																},
																"nativeSrc": "7286:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7286:34:1"
															},
															"nativeSrc": "7286:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7286:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7340:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7340:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7351:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7351:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7336:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:1"
																		},
																		"nativeSrc": "7336:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7336:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7356:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7356:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7329:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7329:6:1"
																},
																"nativeSrc": "7329:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7329:34:1"
															},
															"nativeSrc": "7329:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7329:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7383:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7383:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7394:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7394:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7379:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7379:3:1"
																		},
																		"nativeSrc": "7379:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7379:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "7404:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7404:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7420:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7420:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7425:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7425:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7416:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7416:3:1"
																						},
																						"nativeSrc": "7416:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7416:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7429:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7429:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7412:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7412:3:1"
																				},
																				"nativeSrc": "7412:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7412:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7400:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7400:3:1"
																		},
																		"nativeSrc": "7400:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7400:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7372:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7372:6:1"
																},
																"nativeSrc": "7372:61:1",
																"nodeType": "YulFunctionCall",
																"src": "7372:61:1"
															},
															"nativeSrc": "7372:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "7372:61:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6950:489:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7100:9:1",
														"nodeType": "YulTypedName",
														"src": "7100:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7111:6:1",
														"nodeType": "YulTypedName",
														"src": "7111:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7119:6:1",
														"nodeType": "YulTypedName",
														"src": "7119:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7127:6:1",
														"nodeType": "YulTypedName",
														"src": "7127:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7135:6:1",
														"nodeType": "YulTypedName",
														"src": "7135:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7143:6:1",
														"nodeType": "YulTypedName",
														"src": "7143:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7154:4:1",
														"nodeType": "YulTypedName",
														"src": "7154:4:1",
														"type": ""
													}
												],
												"src": "6950:489:1"
											},
											{
												"body": {
													"nativeSrc": "7625:217:1",
													"nodeType": "YulBlock",
													"src": "7625:217:1",
													"statements": [
														{
															"nativeSrc": "7635:27:1",
															"nodeType": "YulAssignment",
															"src": "7635:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7647:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7647:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7658:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7658:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7643:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:1"
																},
																"nativeSrc": "7643:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7643:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7635:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7678:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7678:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7689:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7689:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7671:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7671:6:1"
																},
																"nativeSrc": "7671:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7671:25:1"
															},
															"nativeSrc": "7671:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7671:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7727:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7712:3:1"
																		},
																		"nativeSrc": "7712:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7712:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7736:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7736:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7744:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7744:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7732:3:1"
																		},
																		"nativeSrc": "7732:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7732:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7705:6:1"
																},
																"nativeSrc": "7705:45:1",
																"nodeType": "YulFunctionCall",
																"src": "7705:45:1"
															},
															"nativeSrc": "7705:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "7705:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7770:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7781:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7781:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:1"
																		},
																		"nativeSrc": "7766:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7766:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7786:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7786:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:1"
																},
																"nativeSrc": "7759:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7759:34:1"
															},
															"nativeSrc": "7759:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7759:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7813:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7813:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7824:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7824:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7809:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7809:3:1"
																		},
																		"nativeSrc": "7809:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7809:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7829:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7829:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7802:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7802:6:1"
																},
																"nativeSrc": "7802:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7802:34:1"
															},
															"nativeSrc": "7802:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7802:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7444:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7570:9:1",
														"nodeType": "YulTypedName",
														"src": "7570:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7581:6:1",
														"nodeType": "YulTypedName",
														"src": "7581:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7589:6:1",
														"nodeType": "YulTypedName",
														"src": "7589:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7597:6:1",
														"nodeType": "YulTypedName",
														"src": "7597:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7605:6:1",
														"nodeType": "YulTypedName",
														"src": "7605:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7616:4:1",
														"nodeType": "YulTypedName",
														"src": "7616:4:1",
														"type": ""
													}
												],
												"src": "7444:398:1"
											},
											{
												"body": {
													"nativeSrc": "7879:95:1",
													"nodeType": "YulBlock",
													"src": "7879:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7903:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7903:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7908:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7908:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7899:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:1"
																		},
																		"nativeSrc": "7899:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7889:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:1"
																},
																"nativeSrc": "7889:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7889:31:1"
															},
															"nativeSrc": "7889:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7889:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7936:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7939:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7929:6:1"
																},
																"nativeSrc": "7929:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7929:15:1"
															},
															"nativeSrc": "7929:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7929:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7960:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7960:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7963:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7963:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:1"
																},
																"nativeSrc": "7953:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7953:15:1"
															},
															"nativeSrc": "7953:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7953:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7847:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7847:127:1"
											},
											{
												"body": {
													"nativeSrc": "8027:174:1",
													"nodeType": "YulBlock",
													"src": "8027:174:1",
													"statements": [
														{
															"nativeSrc": "8037:16:1",
															"nodeType": "YulAssignment",
															"src": "8037:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8048:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8048:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8051:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8051:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8044:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8044:3:1"
																},
																"nativeSrc": "8044:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8044:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8037:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8037:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8084:111:1",
																"nodeType": "YulBlock",
																"src": "8084:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8105:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8112:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8112:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8117:10:1",
																							"nodeType": "YulLiteral",
																							"src": "8117:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8108:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8108:3:1"
																					},
																					"nativeSrc": "8108:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8108:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8098:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8098:6:1"
																			},
																			"nativeSrc": "8098:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8098:31:1"
																		},
																		"nativeSrc": "8098:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8098:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8149:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8149:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8152:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8152:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8142:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8142:6:1"
																			},
																			"nativeSrc": "8142:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8142:15:1"
																		},
																		"nativeSrc": "8142:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8142:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8177:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8177:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8180:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8180:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8170:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:1"
																			},
																			"nativeSrc": "8170:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8170:15:1"
																		},
																		"nativeSrc": "8170:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8170:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8068:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8068:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8071:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8071:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8065:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8065:2:1"
																},
																"nativeSrc": "8065:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8065:10:1"
															},
															"nativeSrc": "8062:133:1",
															"nodeType": "YulIf",
															"src": "8062:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7979:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8010:1:1",
														"nodeType": "YulTypedName",
														"src": "8010:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8013:1:1",
														"nodeType": "YulTypedName",
														"src": "8013:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8019:3:1",
														"nodeType": "YulTypedName",
														"src": "8019:3:1",
														"type": ""
													}
												],
												"src": "7979:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3320": [
									{
										"length": 32,
										"start": 1939
									}
								],
								"3322": [
									{
										"length": 32,
										"start": 1897
									}
								],
								"3324": [
									{
										"length": 32,
										"start": 1855
									}
								],
								"3326": [
									{
										"length": 32,
										"start": 2020
									}
								],
								"3328": [
									{
										"length": 32,
										"start": 2060
									}
								],
								"3331": [
									{
										"length": 32,
										"start": 2534
									}
								],
								"3334": [
									{
										"length": 32,
										"start": 2579
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f80fd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f80fd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f80fd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f80fd5b610149610314565b6040516101569190610fa9565b60405180910390f35b61017261016d366004610fdd565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611005565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fdd565b610400565b6101c66101e936600461103f565b610416565b60055460ff16610172565b610186610207366004611056565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fdd565b610434565b61018661024a366004611056565b610449565b6101c6610466565b61025f610476565b604051610156979695949392919061106f565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fdd565b6104c7565b6101c66102c4366004611105565b6104d4565b6101866102d7366004611172565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611056565b61060f565b606060038054610323906111a3565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a3565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d6565b506001949350505050565b5f6103e9610733565b905090565b6103f661085c565b6103fe61088f565b565b61040861085c565b61041282826108e1565b5050565b6104203382610915565b50565b61042b61085c565b6103fe5f610949565b61043f82338361065b565b6104128282610915565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085c565b6103fe6109a2565b5f6060805f805f60606104876109df565b61048f610a0c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a3565b5f336103b18185856106d6565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a39565b90505f6105b182878787610a65565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085c565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b61042081610949565b6106568383836001610a91565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106d057818110156106c257604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d084848484035f610a91565b50505050565b6001600160a01b0383166106ff57604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107285760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b63565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078b57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b557507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610897610b6e565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090a5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b63565b6001600160a01b03821661093e57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b63565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109aa610b91565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c43390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb5565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb5565b5f6103b7610a45610733565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f80610a7588888888610c5e565b925092509250610a858282610d26565b50909695505050505050565b6001600160a01b038416610aba5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae357604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5591815260200190565b60405180910390a350505050565b610656838383610dde565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610bcf57610bc883610df1565b90506103b7565b818054610bdb906111a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c07906111a3565b8015610c525780601f10610c2957610100808354040283529160200191610c52565b820191905f5260205f20905b815481529060010190602001808311610c3557829003601f168201915b505050505090506103b7565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c9757505f91506003905082610d1c565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ce8573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610d1357505f925060019150829050610d1c565b92505f91508190505b9450945094915050565b5f826003811115610d3957610d396111db565b03610d42575050565b6001826003811115610d5657610d566111db565b03610d745760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d8857610d886111db565b03610da95760405163fce698f760e01b8152600481018290526024016104f4565b6003826003811115610dbd57610dbd6111db565b03610412576040516335e2f38360e21b8152600481018290526024016104f4565b610de6610b91565b610656838383610e2e565b60605f610dfd83610f54565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b6001600160a01b038316610e58578060025f828254610e4d91906111ef565b90915550610ec89050565b6001600160a01b0383165f9081526020819052604090205481811015610eaa5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104f4565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610ee457600280548290039055610f02565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4791815260200190565b60405180910390a3505050565b5f60ff8216601f8111156103b757604051632cd44ac360e21b815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610fbb6020830184610f7b565b9392505050565b80356001600160a01b0381168114610fd8575f80fd5b919050565b5f8060408385031215610fee575f80fd5b610ff783610fc2565b946020939093013593505050565b5f805f60608486031215611017575f80fd5b61102084610fc2565b925061102e60208501610fc2565b929592945050506040919091013590565b5f6020828403121561104f575f80fd5b5035919050565b5f60208284031215611066575f80fd5b610fbb82610fc2565b60ff60f81b8816815260e060208201525f61108d60e0830189610f7b565b828103604084015261109f8189610f7b565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156110f45783518352602093840193909201916001016110d6565b50909b9a5050505050505050505050565b5f805f805f805f60e0888a03121561111b575f80fd5b61112488610fc2565b965061113260208901610fc2565b95506040880135945060608801359350608088013560ff81168114611155575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215611183575f80fd5b61118c83610fc2565b915061119a60208401610fc2565b90509250929050565b600181811c908216806111b757607f821691505b6020821081036111d557634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52602160045260245ffd5b808201808211156103b757634e487b7160e01b5f52601160045260245ffdfea26469706673582212205d8c2c08f9bce6ed0f23c57f470ec49abe2d9d9d211ff613d96ac141ed8bd98c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x371 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B1 DUP2 DUP6 DUP6 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3CA DUP6 DUP3 DUP6 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x3D5 DUP6 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E9 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x408 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x412 DUP3 DUP3 PUSH2 0x8E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x420 CALLER DUP3 PUSH2 0x915 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH0 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x43F DUP3 CALLER DUP4 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x412 DUP3 DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x85C JUMP JUMPDEST PUSH2 0x3FE PUSH2 0x9A2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x487 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x48F PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B1 DUP2 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x548 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x5A2 DUP3 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5B1 DUP3 DUP8 DUP8 DUP8 PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x603 DUP11 DUP11 DUP11 PUSH2 0x649 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x617 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA91 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x6D0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x78B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x7B5 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x897 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x412 PUSH0 DUP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x412 DUP3 PUSH0 DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9AA PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x8C4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E9 PUSH32 0x0 PUSH1 0x6 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E9 PUSH32 0x0 PUSH1 0x7 PUSH2 0xBB5 JUMP JUMPDEST PUSH0 PUSH2 0x3B7 PUSH2 0xA45 PUSH2 0x733 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xA75 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC5E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA85 DUP3 DUP3 PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6D0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB55 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xBCF JUMPI PUSH2 0xBC8 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B7 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBDB SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC07 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC52 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC52 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC35 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x3B7 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC97 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD13 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xD1C JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xD42 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD56 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBD PUSH2 0x11DB JUMP JUMPDEST SUB PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xDE6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDFD DUP4 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE58 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEE4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF47 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF7 DUP4 PUSH2 0xFC2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1017 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1020 DUP5 PUSH2 0xFC2 JUMP JUMPDEST SWAP3 POP PUSH2 0x102E PUSH1 0x20 DUP6 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFBB DUP3 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x108D PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xF7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x109F DUP2 DUP10 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F4 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10D6 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x111B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1124 DUP9 PUSH2 0xFC2 JUMP JUMPDEST SWAP7 POP PUSH2 0x1132 PUSH1 0x20 DUP10 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1155 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118C DUP4 PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x119A PUSH1 0x20 DUP5 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE DUP13 0x2C ADDMOD 0xF9 0xBC 0xE6 0xED 0xF 0x23 0xC5 PUSH32 0x470EC49ABE2D9D9D211FF613D96AC141ED8BD98C64736F6C634300081A003300 ",
							"sourceMap": "84754:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15154:186;;;;;;:::i;:::-;;:::i;:::-;;;1181:14:1;;1174:22;1156:41;;1144:2;1129:18;15154:186:0;1016:187:1;14005:97:0;14083:12;;14005:97;;;1354:25:1;;;1342:2;1327:18;14005:97:0;1208:177:1;15900:244:0;;;;;;:::i;:::-;;:::i;13863:82::-;;;13936:2;1911:36:1;;1899:2;1884:18;13863:82:0;1769:184:1;84527:112:0;;;:::i;85042:63::-;;;:::i;:::-;;85111:93;;;;;;:::i;:::-;;:::i;22580:87::-;;;;;;:::i;:::-;;:::i;24971:84::-;25041:7;;;;24971:84;;14160:116;;;;;;:::i;:::-;-1:-1:-1;;;;;14251:18:0;14225:7;14251:18;;;;;;;;;;;;14160:116;29437:101;;;:::i;22983:158::-;;;;;;:::i;:::-;;:::i;84277:143::-;;;;;;:::i;:::-;;:::i;84977:59::-;;;:::i;79105:557::-;;;:::i;:::-;;;;;;;;;;;;;:::i;28782:85::-;28854:6;;;;;-1:-1:-1;;;;;28854:6:0;28782:85;;-1:-1:-1;;;;;3969:32:1;;;3951:51;;3939:2;3924:18;28782:85:0;3805:203:1;13137:93:0;;;:::i;14471:178::-;;;;;;:::i;:::-;;:::i;83551:672::-;;;;;;:::i;:::-;;:::i;14707:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14813:18:0;;;14787:7;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14707:140;29687:215;;;;;;:::i;:::-;;:::i;12935:89::-;12980:13;13012:5;13005:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;:::o;15154:186::-;15227:4;4254:10;15281:31;4254:10;15297:7;15306:5;15281:8;:31::i;:::-;15329:4;15322:11;;;15154:186;;;;;:::o;15900:244::-;15987:4;4254:10;16043:37;16059:4;4254:10;16074:5;16043:15;:37::i;:::-;16090:26;16100:4;16106:2;16110:5;16090:9;:26::i;:::-;-1:-1:-1;16133:4:0;;15900:244;-1:-1:-1;;;;15900:244:0:o;84527:112::-;84586:7;84612:20;:18;:20::i;:::-;84605:27;;84527:112;:::o;85042:63::-;28675:13;:11;:13::i;:::-;85088:10:::1;:8;:10::i;:::-;85042:63::o:0;85111:93::-;28675:13;:11;:13::i;:::-;85180:17:::1;85186:2;85190:6;85180:5;:17::i;:::-;85111:93:::0;;:::o;22580:87::-;22634:26;4254:10;22654:5;22634;:26::i;:::-;22580:87;:::o;29437:101::-;28675:13;:11;:13::i;:::-;29501:30:::1;29528:1;29501:18;:30::i;22983:158::-:0;23058:45;23074:7;4254:10;23097:5;23058:15;:45::i;:::-;23113:21;23119:7;23128:5;23113;:21::i;84277:143::-;-1:-1:-1;;;;;81217:14:0;;84368:7;81217:14;;;:7;:14;;;;;;84394:19;81131:107;84977:59;28675:13;:11;:13::i;:::-;85021:8:::1;:6;:8::i;79105:557::-:0;79203:13;79230:18;79262:21;79297:15;79326:25;79365:12;79391:27;79494:13;:11;:13::i;:::-;79521:16;:14;:16::i;:::-;79629;;;79613:1;79629:16;;;;;;;;;-1:-1:-1;;;79443:212:0;;;-1:-1:-1;79443:212:0;;-1:-1:-1;79551:13:0;;-1:-1:-1;79586:4:0;;-1:-1:-1;79613:1:0;-1:-1:-1;79629:16:0;-1:-1:-1;79443:212:0;-1:-1:-1;79105:557:0:o;13137:93::-;13184:13;13216:7;13209:14;;;;;:::i;14471:178::-;14540:4;4254:10;14594:27;4254:10;14611:2;14615:5;14594:9;:27::i;83551:672::-;83772:8;83754:15;:26;83750:97;;;83803:33;;-1:-1:-1;;;83803:33:0;;;;;1354:25:1;;;1327:18;;83803:33:0;;;;;;;;83750:97;83857:18;82893:95;83916:5;83923:7;83932:5;83939:16;83949:5;-1:-1:-1;;;;;81714:14:0;81412:7;81714:14;;;:7;:14;;;;;:16;;;;;;;;;81352:395;83939:16;83888:78;;;;;;5990:25:1;;;;-1:-1:-1;;;;;6051:32:1;;;6031:18;;;6024:60;6120:32;;;;6100:18;;;6093:60;6169:18;;;6162:34;6212:19;;;6205:35;6256:19;;;6249:35;;;5962:19;;83888:78:0;;;;;;;;;;;;83878:89;;;;;;83857:110;;83978:12;83993:28;84010:10;83993:16;:28::i;:::-;83978:43;;84032:14;84049:28;84063:4;84069:1;84072;84075;84049:13;:28::i;:::-;84032:45;;84101:5;-1:-1:-1;;;;;84091:15:0;:6;-1:-1:-1;;;;;84091:15:0;;84087:88;;84129:35;;-1:-1:-1;;;84129:35:0;;-1:-1:-1;;;;;6487:32:1;;;84129:35:0;;;6469:51:1;6556:32;;6536:18;;;6529:60;6442:18;;84129:35:0;6295:300:1;84087:88:0;84185:31;84194:5;84201:7;84210:5;84185:8;:31::i;:::-;83740:483;;;83551:672;;;;;;;:::o;29687:215::-;28675:13;:11;:13::i;:::-;-1:-1:-1;;;;;29771:22:0;::::1;29767:91;;29816:31;::::0;-1:-1:-1;;;29816:31:0;;29844:1:::1;29816:31;::::0;::::1;3951:51:1::0;3924:18;;29816:31:0::1;3805:203:1::0;29767:91:0::1;29867:28;29886:8;29867:18;:28::i;19850:128::-:0;19934:37;19943:5;19950:7;19959:5;19966:4;19934:8;:37::i;:::-;19850:128;;;:::o;21524:477::-;-1:-1:-1;;;;;14813:18:0;;;21623:24;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21689:37:0;;21685:310;;21765:5;21746:16;:24;21742:130;;;21797:60;;-1:-1:-1;;;21797:60:0;;-1:-1:-1;;;;;6820:32:1;;21797:60:0;;;6802:51:1;6869:18;;;6862:34;;;6912:18;;;6905:34;;;6775:18;;21797:60:0;6600:345:1;21742:130:0;21913:57;21922:5;21929:7;21957:5;21938:16;:24;21964:5;21913:8;:57::i;:::-;21613:388;21524:477;;;:::o;16517:300::-;-1:-1:-1;;;;;16600:18:0;;16596:86;;16641:30;;-1:-1:-1;;;16641:30:0;;16668:1;16641:30;;;3951:51:1;3924:18;;16641:30:0;3805:203:1;16596:86:0;-1:-1:-1;;;;;16695:16:0;;16691:86;;16734:32;;-1:-1:-1;;;16734:32:0;;16763:1;16734:32;;;3951:51:1;3924:18;;16734:32:0;3805:203:1;16691:86:0;16786:24;16794:4;16800:2;16804:5;16786:7;:24::i;77806:262::-;77859:7;77890:4;-1:-1:-1;;;;;77899:11:0;77882:28;;:63;;;;;77931:14;77914:13;:31;77882:63;77878:184;;;-1:-1:-1;77968:22:0;;77806:262::o;77878:184::-;78028:23;78165:80;;;76040:95;78165:80;;;7209:25:1;78187:11:0;7250:18:1;;;7243:34;;;;78200:14:0;7293:18:1;;;7286:34;78216:13:0;7336:18:1;;;7329:34;78239:4:0;7379:19:1;;;7372:61;78129:7:0;;7181:19:1;;78165:80:0;;;;;;;;;;;;78155:91;;;;;;78148:98;;78074:179;;28940:162;28854:6;;-1:-1:-1;;;;;28854:6:0;;;;;4254:10;28999:23;28995:101;;29045:40;;-1:-1:-1;;;29045:40:0;;4254:10;29045:40;;;3951:51:1;3924:18;;29045:40:0;3805:203:1;25831:117:0;24842:16;:14;:16::i;:::-;25889:7:::1;:15:::0;;-1:-1:-1;;25889:15:0::1;::::0;;25919:22:::1;4254:10:::0;25928:12:::1;25919:22;::::0;-1:-1:-1;;;;;3969:32:1;;;3951:51;;3939:2;3924:18;25919:22:0::1;;;;;;;25831:117::o:0;18582:208::-;-1:-1:-1;;;;;18652:21:0;;18648:91;;18696:32;;-1:-1:-1;;;18696:32:0;;18725:1;18696:32;;;3951:51:1;3924:18;;18696:32:0;3805:203:1;18648:91:0;18748:35;18764:1;18768:7;18777:5;18748:7;:35::i;19108:206::-;-1:-1:-1;;;;;19178:21:0;;19174:89;;19222:30;;-1:-1:-1;;;19222:30:0;;19249:1;19222:30;;;3951:51:1;3924:18;;19222:30:0;3805:203:1;19174:89:0;19272:35;19280:7;19297:1;19301:5;19272:7;:35::i;30056:187::-;30148:6;;;-1:-1:-1;;;;;30164:17:0;;;30148:6;30164:17;;;-1:-1:-1;;;;;;30164:17:0;;;;;;30196:40;;30148:6;;;;;;;;30196:40;;30129:16;;30196:40;30119:124;30056:187;:::o;25584:115::-;24595:19;:17;:19::i;:::-;25643:7:::1;:14:::0;;-1:-1:-1;;25643:14:0::1;25653:4;25643:14;::::0;;25672:20:::1;25679:12;4254:10:::0;;4175:96;79982:126;80028:13;80060:41;:5;80087:13;80060:26;:41::i;80434:135::-;80483:13;80515:47;:8;80545:16;80515:29;:47::i;78878:176::-;78955:7;78981:66;79014:20;:18;:20::i;:::-;79036:10;64886:4;64880:11;-1:-1:-1;;;64904:23:0;;64956:4;64947:14;;64940:39;;;;65008:4;64999:14;;64992:34;65064:4;65049:20;;;64684:401;40929:260;41014:7;41034:17;41053:18;41073:16;41093:25;41104:4;41110:1;41113;41116;41093:10;:25::i;:::-;41033:85;;;;;;41128:28;41140:5;41147:8;41128:11;:28::i;:::-;-1:-1:-1;41173:9:0;;40929:260;-1:-1:-1;;;;;;40929:260:0:o;20810:432::-;-1:-1:-1;;;;;20922:19:0;;20918:89;;20964:32;;-1:-1:-1;;;20964:32:0;;20993:1;20964:32;;;3951:51:1;3924:18;;20964:32:0;3805:203:1;20918:89:0;-1:-1:-1;;;;;21020:21:0;;21016:90;;21064:31;;-1:-1:-1;;;21064:31:0;;21092:1;21064:31;;;3951:51:1;3924:18;;21064:31:0;3805:203:1;21016:90:0;-1:-1:-1;;;;;21115:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;21160:76;;;;21210:7;-1:-1:-1;;;;;21194:31:0;21203:5;-1:-1:-1;;;;;21194:31:0;;21219:5;21194:31;;;;1354:25:1;;1342:2;1327:18;;1208:177;21194:31:0;;;;;;;;20810:432;;;;:::o;85278:165::-;85406:30;85420:4;85426:2;85430:5;85406:13;:30::i;25323:126::-;25041:7;;;;25381:62;;25417:15;;-1:-1:-1;;;25417:15:0;;;;;;;;;;;25123:128;25041:7;;;;25184:61;;;25219:15;;-1:-1:-1;;;25219:15:0;;;;;;;;;;;72410:267;72504:13;70415:66;72533:46;;72529:142;;72602:15;72611:5;72602:8;:15::i;:::-;72595:22;;;;72529:142;72655:5;72648:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39266:1530;39392:7;;;40325:66;40312:79;;40308:164;;;-1:-1:-1;40423:1:0;;-1:-1:-1;40427:30:0;;-1:-1:-1;40459:1:0;40407:54;;40308:164;40583:24;;;40566:14;40583:24;;;;;;;;;7671:25:1;;;7744:4;7732:17;;7712:18;;;7705:45;;;;7766:18;;;7759:34;;;7809:18;;;7802:34;;;40583:24:0;;7643:19:1;;40583:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40583:24:0;;-1:-1:-1;;40583:24:0;;;-1:-1:-1;;;;;;;40621:20:0;;40617:113;;-1:-1:-1;40673:1:0;;-1:-1:-1;40677:29:0;;-1:-1:-1;40673:1:0;;-1:-1:-1;40657:62:0;;40617:113;40748:6;-1:-1:-1;40756:20:0;;-1:-1:-1;40756:20:0;;-1:-1:-1;39266:1530:0;;;;;;;;;:::o;41322:532::-;41417:20;41408:5;:29;;;;;;;;:::i;:::-;;41404:444;;41322:532;;:::o;41404:444::-;41513:29;41504:5;:38;;;;;;;;:::i;:::-;;41500:348;;41565:23;;-1:-1:-1;;;41565:23:0;;;;;;;;;;;41500:348;41618:35;41609:5;:44;;;;;;;;:::i;:::-;;41605:243;;41676:46;;-1:-1:-1;;;41676:46:0;;;;;1354:25:1;;;1327:18;;41676:46:0;1208:177:1;41605:243:0;41752:30;41743:5;:39;;;;;;;;:::i;:::-;;41739:109;;41805:32;;-1:-1:-1;;;41805:32:0;;;;;1354:25:1;;;1327:18;;41805:32:0;1208:177:1;27019:145:0;24595:19;:17;:19::i;:::-;27127:30:::1;27141:4;27147:2;27151:5;27127:13;:30::i;71103:405::-:0;71162:13;71187:11;71201:16;71212:4;71201:10;:16::i;:::-;71325:14;;;71336:2;71325:14;;;;;;;;;71187:30;;-1:-1:-1;71305:17:0;;71325:14;;;;;;;;;-1:-1:-1;;;71415:16:0;;;-1:-1:-1;71460:4:0;71451:14;;71444:28;;;;-1:-1:-1;71415:16:0;71103:405::o;17132:1107::-;-1:-1:-1;;;;;17221:18:0;;17217:540;;17373:5;17357:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17217:540:0;;-1:-1:-1;17217:540:0;;-1:-1:-1;;;;;17431:15:0;;17409:19;17431:15;;;;;;;;;;;17464:19;;;17460:115;;;17510:50;;-1:-1:-1;;;17510:50:0;;-1:-1:-1;;;;;6820:32:1;;17510:50:0;;;6802:51:1;6869:18;;;6862:34;;;6912:18;;;6905:34;;;6775:18;;17510:50:0;6600:345:1;17460:115:0;-1:-1:-1;;;;;17695:15:0;;:9;:15;;;;;;;;;;17713:19;;;;17695:37;;17217:540;-1:-1:-1;;;;;17771:16:0;;17767:425;;17934:12;:21;;;;;;;17767:425;;;-1:-1:-1;;;;;18145:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17767:425;18222:2;-1:-1:-1;;;;;18207:25:0;18216:4;-1:-1:-1;;;;;18207:25:0;;18226:5;18207:25;;;;1354::1;;1342:2;1327:18;;1208:177;18207:25:0;;;;;;;;17132:1107;;;:::o;71580:245::-;71641:7;71713:4;71677:40;;71740:2;71731:11;;71727:69;;;71765:20;;-1:-1:-1;;;71765:20:0;;;;;;;;;;;14:289:1;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;:::-;469:53;308:220;-1:-1:-1;;;308:220:1:o;533:173::-;601:20;;-1:-1:-1;;;;;650:31:1;;640:42;;630:70;;696:1;693;686:12;630:70;533:173;;;:::o;711:300::-;779:6;787;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;879:29;898:9;879:29;:::i;:::-;869:39;977:2;962:18;;;;949:32;;-1:-1:-1;;;711:300:1:o;1390:374::-;1467:6;1475;1483;1536:2;1524:9;1515:7;1511:23;1507:32;1504:52;;;1552:1;1549;1542:12;1504:52;1575:29;1594:9;1575:29;:::i;:::-;1565:39;;1623:38;1657:2;1646:9;1642:18;1623:38;:::i;:::-;1390:374;;1613:48;;-1:-1:-1;;;1730:2:1;1715:18;;;;1702:32;;1390:374::o;2140:226::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;-1:-1:-1;2313:23:1;;2140:226;-1:-1:-1;2140:226:1:o;2371:186::-;2430:6;2483:2;2471:9;2462:7;2458:23;2454:32;2451:52;;;2499:1;2496;2489:12;2451:52;2522:29;2541:9;2522:29;:::i;2562:1238::-;2968:3;2963;2959:13;2951:6;2947:26;2936:9;2929:45;3010:3;3005:2;2994:9;2990:18;2983:31;2910:4;3037:46;3078:3;3067:9;3063:19;3055:6;3037:46;:::i;:::-;3131:9;3123:6;3119:22;3114:2;3103:9;3099:18;3092:50;3165:33;3191:6;3183;3165:33;:::i;:::-;3229:2;3214:18;;3207:34;;;-1:-1:-1;;;;;3278:32:1;;3272:3;3257:19;;3250:61;3298:3;3327:19;;3320:35;;;3392:22;;;3386:3;3371:19;;3364:51;3464:13;;3486:22;;;3536:2;3562:15;;;;-1:-1:-1;3524:15:1;;;;-1:-1:-1;3605:169:1;3619:6;3616:1;3613:13;3605:169;;;3680:13;;3668:26;;3723:2;3749:15;;;;3714:12;;;;3641:1;3634:9;3605:169;;;-1:-1:-1;3791:3:1;;2562:1238;-1:-1:-1;;;;;;;;;;;2562:1238:1:o;4013:903::-;4124:6;4132;4140;4148;4156;4164;4172;4225:3;4213:9;4204:7;4200:23;4196:33;4193:53;;;4242:1;4239;4232:12;4193:53;4265:29;4284:9;4265:29;:::i;:::-;4255:39;;4313:38;4347:2;4336:9;4332:18;4313:38;:::i;:::-;4303:48;-1:-1:-1;4420:2:1;4405:18;;4392:32;;-1:-1:-1;4521:2:1;4506:18;;4493:32;;-1:-1:-1;4603:3:1;4588:19;;4575:33;4652:4;4639:18;;4627:31;;4617:59;;4672:1;4669;4662:12;4617:59;4013:903;;;;-1:-1:-1;4013:903:1;;;;4695:7;4775:3;4760:19;;4747:33;;-1:-1:-1;4879:3:1;4864:19;;;4851:33;;4013:903;-1:-1:-1;;4013:903:1:o;4921:260::-;4989:6;4997;5050:2;5038:9;5029:7;5025:23;5021:32;5018:52;;;5066:1;5063;5056:12;5018:52;5089:29;5108:9;5089:29;:::i;:::-;5079:39;;5137:38;5171:2;5160:9;5156:18;5137:38;:::i;:::-;5127:48;;4921:260;;;;;:::o;5186:380::-;5265:1;5261:12;;;;5308;;;5329:61;;5383:4;5375:6;5371:17;5361:27;;5329:61;5436:2;5428:6;5425:14;5405:18;5402:38;5399:161;;5482:10;5477:3;5473:20;5470:1;5463:31;5517:4;5514:1;5507:15;5545:4;5542:1;5535:15;5399:161;;5186:380;;;:::o;7847:127::-;7908:10;7903:3;7899:20;7896:1;7889:31;7939:4;7936:1;7929:15;7963:4;7960:1;7953:15;7979:222;8044:9;;;8065:10;;;8062:133;;;8117:10;8112:3;8108:20;8105:1;8098:31;8152:4;8149:1;8142:15;8180:4;8177:1;8170:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "935200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2670",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "288",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2635",
								"owner()": "2351",
								"pause()": "infinite",
								"paused()": "2414",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28498",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 84838,
									"end": 84971,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 84838,
									"end": 84971,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83445,
									"end": 83497,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 83484,
									"end": 83488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77289,
									"end": 77720,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 84920,
									"end": 84932,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12828,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12823,
									"end": 12836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12856,
									"end": 12863,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12846,
									"end": 12863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24352,
									"end": 24359,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24352,
									"end": 24367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24352,
									"end": 24367,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 24352,
									"end": 24367,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24352,
									"end": 24367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24352,
									"end": 24367,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28417,
									"end": 28443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28417,
									"end": 28443,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28413,
									"end": 28508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28413,
									"end": 28508,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28494,
									"end": 28495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28466,
									"end": 28497,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28413,
									"end": 28508,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28413,
									"end": 28508,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28517,
									"end": 28549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28536,
									"end": 28548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28517,
									"end": 28535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28517,
									"end": 28549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28517,
									"end": 28549,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28517,
									"end": 28549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 77362,
									"end": 77407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 77362,
									"end": 77366,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 77393,
									"end": 77406,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 77362,
									"end": 77392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 77362,
									"end": 77407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 77362,
									"end": 77407,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 77362,
									"end": 77407,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77354,
									"end": 77407,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 77354,
									"end": 77407,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77428,
									"end": 77479,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 77428,
									"end": 77435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77462,
									"end": 77478,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 77428,
									"end": 77461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 77428,
									"end": 77479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 77428,
									"end": 77479,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 77428,
									"end": 77479,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77417,
									"end": 77479,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 77417,
									"end": 77479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 77503,
									"end": 77525,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 77489,
									"end": 77525,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 77489,
									"end": 77525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 77552,
									"end": 77577,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 77535,
									"end": 77577,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 77535,
									"end": 77577,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77605,
									"end": 77618,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 77588,
									"end": 77618,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 77588,
									"end": 77618,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 77653,
									"end": 77676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 78187,
									"end": 78198,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 78187,
									"end": 78198,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78200,
									"end": 78214,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 78200,
									"end": 78214,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 76040,
									"end": 76135,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3417,
									"end": 3442,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3476,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3451,
									"end": 3485,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3451,
									"end": 3485,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3451,
									"end": 3485,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3451,
									"end": 3485,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3501,
									"end": 3519,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3501,
									"end": 3519,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3501,
									"end": 3519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3494,
									"end": 3528,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 78216,
									"end": 78229,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3562,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3544,
									"end": 3562,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3571,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 78239,
									"end": 78243,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3580,
									"end": 3641,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 78129,
									"end": 78136,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78129,
									"end": 78136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3408,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 3389,
									"end": 3408,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78165,
									"end": 78245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78155,
									"end": 78246,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 78148,
									"end": 78246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 78148,
									"end": 78246,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78074,
									"end": 78253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 78074,
									"end": 78253,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 77653,
									"end": 77676,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 77653,
									"end": 77676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77628,
									"end": 77676,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 77628,
									"end": 77676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 77708,
									"end": 77712,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 77686,
									"end": 77713,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 77686,
									"end": 77713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30056,
									"end": 30243,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30056,
									"end": 30243,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 30164,
									"end": 30181,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30196,
									"end": 30236,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30196,
									"end": 30236,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30148,
									"end": 30154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30196,
									"end": 30236,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 30196,
									"end": 30236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30129,
									"end": 30145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30129,
									"end": 30145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30196,
									"end": 30236,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 30119,
									"end": 30243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30056,
									"end": 30243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30056,
									"end": 30243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72035,
									"end": 72046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72084,
									"end": 72086,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72068,
									"end": 72073,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72062,
									"end": 72081,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72062,
									"end": 72086,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72109,
									"end": 72129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 72123,
									"end": 72128,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72109,
									"end": 72122,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 72109,
									"end": 72129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72109,
									"end": 72129,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 72109,
									"end": 72129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72102,
									"end": 72129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72102,
									"end": 72129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72102,
									"end": 72129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 72102,
									"end": 72129,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72186,
									"end": 72191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72160,
									"end": 72206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 72201,
									"end": 72206,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 72186,
									"end": 72191,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72160,
									"end": 72206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 72160,
									"end": 72206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72160,
									"end": 72206,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 72160,
									"end": 72206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 70415,
									"end": 70481,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 70415,
									"end": 70481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 72058,
									"end": 72273,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71939,
									"end": 72279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70733,
									"end": 71019,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 70733,
									"end": 71019,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70798,
									"end": 70809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70821,
									"end": 70838,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70847,
									"end": 70850,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70821,
									"end": 70851,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70821,
									"end": 70851,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70879,
									"end": 70881,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 70865,
									"end": 70869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70865,
									"end": 70876,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70865,
									"end": 70881,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 70861,
									"end": 70933,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70861,
									"end": 70933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 70861,
									"end": 70933,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70918,
									"end": 70921,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70904,
									"end": 70922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 70904,
									"end": 70922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70861,
									"end": 70933,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 70861,
									"end": 70933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70999,
									"end": 71010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70999,
									"end": 71010,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70982,
									"end": 70995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 70999,
									"end": 71003,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70982,
									"end": 70995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 70982,
									"end": 70995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70982,
									"end": 70995,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 70982,
									"end": 70995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70974,
									"end": 71010,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 70974,
									"end": 71010,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 70733,
									"end": 71019,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 70733,
									"end": 71019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3790,
									"end": 3799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 3840,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3876,
									"end": 3882,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3871,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3860,
									"end": 3869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3849,
									"end": 3883,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3930,
									"end": 3932,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3922,
									"end": 3928,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3918,
									"end": 3933,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3902,
									"end": 3911,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3892,
									"end": 3942,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 3991,
									"end": 3992,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 3988,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3977,
									"end": 3983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3966,
									"end": 3975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3962,
									"end": 3984,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3958,
									"end": 3989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3951,
									"end": 3993,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4061,
									"end": 4063,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4054,
									"end": 4056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4050,
									"end": 4057,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4047,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4037,
									"end": 4043,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4033,
									"end": 4048,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4029,
									"end": 4058,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4018,
									"end": 4027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4014,
									"end": 4059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4010,
									"end": 4064,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4002,
									"end": 4064,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4002,
									"end": 4064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4002,
									"end": 4064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3652,
									"end": 4070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4372,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4075,
									"end": 4372,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4193,
									"end": 4205,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4193,
									"end": 4205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4240,
									"end": 4244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4229,
									"end": 4245,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4229,
									"end": 4245,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4229,
									"end": 4245,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4223,
									"end": 4246,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4223,
									"end": 4246,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4193,
									"end": 4205,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4258,
									"end": 4274,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4258,
									"end": 4274,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4366,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4366,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4255,
									"end": 4366,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4332,
									"end": 4336,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4328,
									"end": 4345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4345,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4325,
									"end": 4326,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4321,
									"end": 4346,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4317,
									"end": 4355,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4306,
									"end": 4356,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4306,
									"end": 4356,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4372,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4372,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 4075,
									"end": 4372,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3334"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3331"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3328"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3326"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3324"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3322"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3320"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84754,
									"end": 85445,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d8c2c08f9bce6ed0f23c57f470ec49abe2d9d9d211ff613d96ac141ed8bd98c64736f6c634300081a0033",
									".code": [
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84754,
											"end": 85445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1016,
											"end": 1203,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13936,
											"end": 13938,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 84527,
											"end": 84639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 85042,
											"end": 85105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 85111,
											"end": 85204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 85111,
											"end": 85204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22580,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22580,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 25055,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24971,
											"end": 25055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 25055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24971,
											"end": 25055,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14160,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14225,
											"end": 14232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29437,
											"end": 29538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22983,
											"end": 23141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22983,
											"end": 23141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 84277,
											"end": 84420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 84277,
											"end": 84420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 84977,
											"end": 85036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 79105,
											"end": 79662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 79105,
											"end": 79662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28867,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28782,
											"end": 28867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28782,
											"end": 28867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28782,
											"end": 28867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13137,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 83551,
											"end": 84223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 83551,
											"end": 84223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14707,
											"end": 14847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29687,
											"end": 29902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29687,
											"end": 29902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13012,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15297,
											"end": 15304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15306,
											"end": 15311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15281,
											"end": 15312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16079,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16043,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16106,
											"end": 16108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16090,
											"end": 16116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84586,
											"end": 84593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84612,
											"end": 84632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 84612,
											"end": 84630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 84612,
											"end": 84632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84612,
											"end": 84632,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 84612,
											"end": 84632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84605,
											"end": 84632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84605,
											"end": 84632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84527,
											"end": 84639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84527,
											"end": 84639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 85042,
											"end": 85105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28675,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28675,
											"end": 28688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85088,
											"end": 85098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 85088,
											"end": 85096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 85088,
											"end": 85098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85088,
											"end": 85098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 85088,
											"end": 85098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85042,
											"end": 85105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28675,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28675,
											"end": 28688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85180,
											"end": 85197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 85186,
											"end": 85188,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 85190,
											"end": 85196,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 85180,
											"end": 85185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 85180,
											"end": 85197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85180,
											"end": 85197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 85180,
											"end": 85197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85111,
											"end": 85204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 22659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 22634,
											"end": 22660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22660,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 22634,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22580,
											"end": 22667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29437,
											"end": 29538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28675,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28675,
											"end": 28688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29501,
											"end": 29531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29528,
											"end": 29529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29501,
											"end": 29519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29501,
											"end": 29531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22983,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23074,
											"end": 23081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 23058,
											"end": 23103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23103,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23058,
											"end": 23103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23119,
											"end": 23126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23128,
											"end": 23133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23113,
											"end": 23134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 84277,
											"end": 84420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 84368,
											"end": 84375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81224,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 81217,
											"end": 81231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 84394,
											"end": 84413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 81131,
											"end": 81238,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 84977,
											"end": 85036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 28675,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28675,
											"end": 28688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85021,
											"end": 85029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 85021,
											"end": 85027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 85021,
											"end": 85029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 79105,
											"end": 79662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79203,
											"end": 79216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79230,
											"end": 79248,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79262,
											"end": 79283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79297,
											"end": 79312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79326,
											"end": 79351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79365,
											"end": 79377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79391,
											"end": 79418,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79494,
											"end": 79507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 79494,
											"end": 79505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 79494,
											"end": 79507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79494,
											"end": 79507,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 79494,
											"end": 79507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79521,
											"end": 79537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 79521,
											"end": 79535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 79521,
											"end": 79537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79521,
											"end": 79537,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 79521,
											"end": 79537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79613,
											"end": 79614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79551,
											"end": 79564,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 79551,
											"end": 79564,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79586,
											"end": 79590,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 79586,
											"end": 79590,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79613,
											"end": 79614,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79629,
											"end": 79645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79443,
											"end": 79655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79105,
											"end": 79662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13184,
											"end": 13197,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13216,
											"end": 13223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13209,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14615,
											"end": 14620,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14594,
											"end": 14621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83772,
											"end": 83780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 83754,
											"end": 83769,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 83754,
											"end": 83780,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 83750,
											"end": 83847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 83750,
											"end": 83847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 83750,
											"end": 83847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313C8981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83803,
											"end": 83836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 83750,
											"end": 83847,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 83750,
											"end": 83847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83857,
											"end": 83875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82893,
											"end": 82988,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 83916,
											"end": 83921,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 83923,
											"end": 83930,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 83932,
											"end": 83937,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 83939,
											"end": 83955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 83949,
											"end": 83954,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81412,
											"end": 81419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81721,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 81714,
											"end": 81730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81352,
											"end": 81747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83939,
											"end": 83955,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 83939,
											"end": 83955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6051,
											"end": 6083,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6049,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6205,
											"end": 6240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6275,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6256,
											"end": 6275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6284,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83888,
											"end": 83966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 83878,
											"end": 83967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 83857,
											"end": 83967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83857,
											"end": 83967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83978,
											"end": 83990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83993,
											"end": 84021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 84010,
											"end": 84020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 83993,
											"end": 84009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 83993,
											"end": 84021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83993,
											"end": 84021,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 83993,
											"end": 84021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83978,
											"end": 84021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83978,
											"end": 84021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84032,
											"end": 84046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 84049,
											"end": 84077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 84063,
											"end": 84067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 84069,
											"end": 84070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 84072,
											"end": 84073,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 84075,
											"end": 84076,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 84049,
											"end": 84062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 84049,
											"end": 84077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84049,
											"end": 84077,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 84049,
											"end": 84077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84032,
											"end": 84077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84032,
											"end": 84077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84101,
											"end": 84106,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 84091,
											"end": 84106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 84091,
											"end": 84097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 84091,
											"end": 84106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 84091,
											"end": 84106,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 84087,
											"end": 84175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 84087,
											"end": 84175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "25C00723"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 6519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 84129,
											"end": 84164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6295,
											"end": 6595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 84087,
											"end": 84175,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 84087,
											"end": 84175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84185,
											"end": 84216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 84194,
											"end": 84199,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 84201,
											"end": 84208,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 84210,
											"end": 84215,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 84185,
											"end": 84193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 84185,
											"end": 84216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84185,
											"end": 84216,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 84185,
											"end": 84216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83740,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83740,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83740,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83551,
											"end": 84223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29687,
											"end": 29902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28675,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28675,
											"end": 28688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28675,
											"end": 28688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29771,
											"end": 29793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29767,
											"end": 29858,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29816,
											"end": 29847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29816,
											"end": 29847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29844,
											"end": 29845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29816,
											"end": 29847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29816,
											"end": 29847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29816,
											"end": 29847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29816,
											"end": 29847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29767,
											"end": 29858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29767,
											"end": 29858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29867,
											"end": 29895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29886,
											"end": 29894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29867,
											"end": 29885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29867,
											"end": 29895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19943,
											"end": 19948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19959,
											"end": 19964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19934,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 19934,
											"end": 19971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6820,
											"end": 6852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6600,
											"end": 6945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 21922,
											"end": 21927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21929,
											"end": 21936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 21962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21913,
											"end": 21921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 21913,
											"end": 21970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21613,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16794,
											"end": 16798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16800,
											"end": 16802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16804,
											"end": 16809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 16786,
											"end": 16810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77806,
											"end": 78068,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 77806,
											"end": 78068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77859,
											"end": 77866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77890,
											"end": 77894,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77899,
											"end": 77910,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3324"
										},
										{
											"begin": 77882,
											"end": 77910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77931,
											"end": 77945,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3322"
										},
										{
											"begin": 77914,
											"end": 77927,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 77914,
											"end": 77945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 77882,
											"end": 77945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77878,
											"end": 78062,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77878,
											"end": 78062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 77878,
											"end": 78062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77968,
											"end": 77990,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3320"
										},
										{
											"begin": 77968,
											"end": 77990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77806,
											"end": 78068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77878,
											"end": 78062,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 77878,
											"end": 78062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78028,
											"end": 78051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76135,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 78187,
											"end": 78198,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3326"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 78200,
											"end": 78214,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3328"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 78216,
											"end": 78229,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 78239,
											"end": 78243,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7398,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7379,
											"end": 7398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 78129,
											"end": 78136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78129,
											"end": 78136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78165,
											"end": 78245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78148,
											"end": 78246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78148,
											"end": 78246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78074,
											"end": 78253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78074,
											"end": 78253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29102,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28940,
											"end": 29102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28854,
											"end": 28860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28999,
											"end": 29022,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28995,
											"end": 29096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28995,
											"end": 29096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29045,
											"end": 29085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25831,
											"end": 25948,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25831,
											"end": 25948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 24858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 24842,
											"end": 24856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 24842,
											"end": 24858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 24858,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 24842,
											"end": 24858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25889,
											"end": 25904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25889,
											"end": 25904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25904,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 25940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 25928,
											"end": 25940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25919,
											"end": 25941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25919,
											"end": 25941,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 25831,
											"end": 25948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18582,
											"end": 18790,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18582,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18652,
											"end": 18673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18652,
											"end": 18673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18768,
											"end": 18775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18777,
											"end": 18782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 18748,
											"end": 18783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19314,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 19108,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19178,
											"end": 19199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19178,
											"end": 19199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19174,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 19174,
											"end": 19263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 19250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19222,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19174,
											"end": 19263,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 19174,
											"end": 19263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19272,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 19280,
											"end": 19287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19297,
											"end": 19298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19301,
											"end": 19306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19272,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 19272,
											"end": 19307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30056,
											"end": 30243,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 30056,
											"end": 30243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30181,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30196,
											"end": 30236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 30196,
											"end": 30236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30129,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30129,
											"end": 30145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 30119,
											"end": 30243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30056,
											"end": 30243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30056,
											"end": 30243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25699,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 25584,
											"end": 25699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 24595,
											"end": 24612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 24595,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25643,
											"end": 25657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25643,
											"end": 25657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 25657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25643,
											"end": 25657,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25643,
											"end": 25657,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 25679,
											"end": 25691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79982,
											"end": 80108,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 79982,
											"end": 80108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80028,
											"end": 80041,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 80060,
											"end": 80101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 80060,
											"end": 80065,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3331"
										},
										{
											"begin": 80087,
											"end": 80100,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 80060,
											"end": 80086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 80060,
											"end": 80101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80434,
											"end": 80569,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 80434,
											"end": 80569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80483,
											"end": 80496,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 80515,
											"end": 80562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 80515,
											"end": 80523,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3334"
										},
										{
											"begin": 80545,
											"end": 80561,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 80515,
											"end": 80544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 80515,
											"end": 80562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78878,
											"end": 79054,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 78878,
											"end": 79054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78955,
											"end": 78962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78981,
											"end": 79047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 79014,
											"end": 79034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 79014,
											"end": 79032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 79014,
											"end": 79034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79014,
											"end": 79034,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 79014,
											"end": 79034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79036,
											"end": 79046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 64886,
											"end": 64890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64880,
											"end": 64891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 64904,
											"end": 64927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64904,
											"end": 64927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64956,
											"end": 64960,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64947,
											"end": 64961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64947,
											"end": 64961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64940,
											"end": 64979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64940,
											"end": 64979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64940,
											"end": 64979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64940,
											"end": 64979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65008,
											"end": 65012,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 64999,
											"end": 65013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64999,
											"end": 65013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64992,
											"end": 65026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65064,
											"end": 65068,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 65049,
											"end": 65069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65049,
											"end": 65069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 65049,
											"end": 65069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64684,
											"end": 65085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 41189,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 40929,
											"end": 41189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41014,
											"end": 41021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41034,
											"end": 41051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41073,
											"end": 41089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41104,
											"end": 41108,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41110,
											"end": 41111,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41113,
											"end": 41114,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41116,
											"end": 41117,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 41093,
											"end": 41118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41118,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41093,
											"end": 41118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41128,
											"end": 41156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41140,
											"end": 41145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41147,
											"end": 41155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41128,
											"end": 41139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41128,
											"end": 41156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41128,
											"end": 41156,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41128,
											"end": 41156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41173,
											"end": 41182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41173,
											"end": 41182,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 41189,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40929,
											"end": 41189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20993,
											"end": 20994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21092,
											"end": 21093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 4008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21219,
											"end": 21224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85278,
											"end": 85443,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 85278,
											"end": 85443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85406,
											"end": 85436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 85420,
											"end": 85424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 85426,
											"end": 85428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 85430,
											"end": 85435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 85406,
											"end": 85419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 85406,
											"end": 85436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25323,
											"end": 25449,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 25323,
											"end": 25449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25381,
											"end": 25443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25381,
											"end": 25443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25251,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 25123,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25041,
											"end": 25048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25184,
											"end": 25245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72410,
											"end": 72677,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 72410,
											"end": 72677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72504,
											"end": 72517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 70415,
											"end": 70481,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 72533,
											"end": 72579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72533,
											"end": 72579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72529,
											"end": 72671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 72529,
											"end": 72671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72602,
											"end": 72617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 72611,
											"end": 72616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72602,
											"end": 72610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 72602,
											"end": 72617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72602,
											"end": 72617,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 72602,
											"end": 72617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72595,
											"end": 72617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72595,
											"end": 72617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72595,
											"end": 72617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 72595,
											"end": 72617,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72529,
											"end": 72671,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 72529,
											"end": 72671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72655,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 72648,
											"end": 72660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 72648,
											"end": 72660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 72648,
											"end": 72660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39392,
											"end": 39399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39392,
											"end": 39399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39392,
											"end": 39399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 40391,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 40312,
											"end": 40391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40312,
											"end": 40391,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40308,
											"end": 40472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40308,
											"end": 40472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 40308,
											"end": 40472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40423,
											"end": 40424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40423,
											"end": 40424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40427,
											"end": 40457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40427,
											"end": 40457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40459,
											"end": 40460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40407,
											"end": 40461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 40407,
											"end": 40461,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40308,
											"end": 40472,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 40308,
											"end": 40472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40566,
											"end": 40580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7696,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7748,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7732,
											"end": 7749,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7793,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7836,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40583,
											"end": 40607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40621,
											"end": 40641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40621,
											"end": 40641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40617,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 40617,
											"end": 40730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40673,
											"end": 40674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40673,
											"end": 40674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40677,
											"end": 40706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40677,
											"end": 40706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40673,
											"end": 40674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40673,
											"end": 40674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40657,
											"end": 40719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 40657,
											"end": 40719,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40617,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 40617,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40748,
											"end": 40754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40756,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40756,
											"end": 40776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40756,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40756,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 40796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41854,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41322,
											"end": 41854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41417,
											"end": 41437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41408,
											"end": 41413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41408,
											"end": 41437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41408,
											"end": 41437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41404,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 41404,
											"end": 41848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41404,
											"end": 41848,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 41404,
											"end": 41848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41513,
											"end": 41542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41504,
											"end": 41509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41504,
											"end": 41542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41500,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 41500,
											"end": 41848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41500,
											"end": 41848,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 41500,
											"end": 41848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41618,
											"end": 41653,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41609,
											"end": 41614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41609,
											"end": 41653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41605,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 41605,
											"end": 41848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41676,
											"end": 41722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41605,
											"end": 41848,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 41605,
											"end": 41848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41752,
											"end": 41782,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41743,
											"end": 41748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41743,
											"end": 41782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41743,
											"end": 41782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41739,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 41739,
											"end": 41848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41805,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27019,
											"end": 27164,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 27019,
											"end": 27164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 24595,
											"end": 24612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 24595,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 24595,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27127,
											"end": 27157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 27141,
											"end": 27145,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27147,
											"end": 27149,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 27156,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27127,
											"end": 27140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 27127,
											"end": 27157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71103,
											"end": 71508,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 71103,
											"end": 71508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71162,
											"end": 71175,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 71187,
											"end": 71198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71201,
											"end": 71217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 71212,
											"end": 71216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71201,
											"end": 71211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 71201,
											"end": 71217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71201,
											"end": 71217,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 71201,
											"end": 71217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71336,
											"end": 71338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71187,
											"end": 71217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71187,
											"end": 71217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71305,
											"end": 71322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71305,
											"end": 71322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71339,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71415,
											"end": 71431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71415,
											"end": 71431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71415,
											"end": 71431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71460,
											"end": 71464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71451,
											"end": 71465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71451,
											"end": 71465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71444,
											"end": 71472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71444,
											"end": 71472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71444,
											"end": 71472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71444,
											"end": 71472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71415,
											"end": 71431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71103,
											"end": 71508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 17357,
											"end": 17378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6820,
											"end": 6852,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6600,
											"end": 6945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18222,
											"end": 18224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18216,
											"end": 18220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18226,
											"end": 18231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71580,
											"end": 71825,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 71580,
											"end": 71825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71641,
											"end": 71648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71713,
											"end": 71717,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 71677,
											"end": 71717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71677,
											"end": 71717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71740,
											"end": 71742,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 71731,
											"end": 71742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71731,
											"end": 71742,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 71727,
											"end": 71796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71727,
											"end": 71796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 71727,
											"end": 71796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71765,
											"end": 71785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 177,
											"end": 183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 150,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 143,
											"end": 157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 137,
											"end": 184,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 208,
											"end": 211,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 204,
											"end": 220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 200,
											"end": 227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 193,
											"end": 231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 288,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 260,
											"end": 289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 251,
											"end": 290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 308,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 477,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 522,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 308,
											"end": 528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 533,
											"end": 706,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 533,
											"end": 706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 601,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 640,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 682,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 698,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 630,
											"end": 700,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 533,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 815,
											"end": 838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 811,
											"end": 843,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 808,
											"end": 860,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 846,
											"end": 858,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 879,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 879,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 869,
											"end": 908,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 981,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 711,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1594,
											"end": 1603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1575,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1623,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2140,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2255,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2371,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2486,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 2451,
											"end": 2503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2501,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 2451,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2522,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 3800,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2562,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2959,
											"end": 2972,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3078,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3067,
											"end": 3076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3037,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3037,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3189,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3165,
											"end": 3198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3241,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3414,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3626,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 3605,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3794,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 3800,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 3800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4124,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4228,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4213,
											"end": 4222,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4211,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4223,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4193,
											"end": 4246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4244,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4246,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4193,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4265,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4294,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4313,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4351,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4423,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4525,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4588,
											"end": 4607,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4608,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4658,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4778,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4760,
											"end": 4779,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4760,
											"end": 4779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4780,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4780,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4864,
											"end": 4883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4883,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4884,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5047,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5053,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5070,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5018,
											"end": 5070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5068,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5070,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5018,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5089,
											"end": 5118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5137,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5137,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5186,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5261,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5273,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5439,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5440,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5399,
											"end": 5560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5477,
											"end": 5480,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5507,
											"end": 5522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5560,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5399,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7974,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7847,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7918,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7943,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7936,
											"end": 7937,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7929,
											"end": 7944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 8201,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7979,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8075,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8062,
											"end": 8195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8112,
											"end": 8115,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8156,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8149,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8185,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 818,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 961,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 3336,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3338,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 3539,
								"contract": "contracts/ERC20_flattened.sol:MyToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3539,
								"contract": "contracts/ERC20_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 961,
								"contract": "contracts/ERC20_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "contracts/ERC20_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":70280:73333  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":70280:73333  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b18a03d06eb6208b400df1db4e94d6bf4b735f1a9bbcb72b096bde9a4313d6f764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b18a03d06eb6208b400df1db4e94d6bf4b735f1a9bbcb72b096bde9a4313d6f764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP11 SUB 0xD0 PUSH15 0xB6208B400DF1DB4E94D6BF4B735F1A SWAP12 0xBC 0xB7 0x2B MULMOD PUSH12 0xDE9A4313D6F764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70280:3053:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70280:3053:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b18a03d06eb6208b400df1db4e94d6bf4b735f1a9bbcb72b096bde9a4313d6f764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP11 SUB 0xD0 PUSH15 0xB6208B400DF1DB4E94D6BF4B735F1A SWAP12 0xBC 0xB7 0x2B MULMOD PUSH12 0xDE9A4313D6F764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70280:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70280,
									"end": 73333,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b18a03d06eb6208b400df1db4e94d6bf4b735f1a9bbcb72b096bde9a4313d6f764736f6c634300081a0033",
									".code": [
										{
											"begin": 70280,
											"end": 73333,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70280,
											"end": 73333,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":57245:58292  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":57245:58292  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e19f02fb9530dbb3a9b963913e60ca73838359ca7ce2fa6988a0f72b602a48064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e19f02fb9530dbb3a9b963913e60ca73838359ca7ce2fa6988a0f72b602a48064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY NOT CREATE 0x2F 0xB9 MSTORE8 0xD 0xBB GASPRICE SWAP12 SWAP7 CODECOPY SGT 0xE6 0xC 0xA7 CODESIZE CODESIZE CALLDATALOAD SWAP13 0xA7 0xCE 0x2F 0xA6 SWAP9 DUP11 0xF PUSH19 0xB602A48064736F6C634300081A003300000000 ",
							"sourceMap": "57245:1047:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57245:1047:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e19f02fb9530dbb3a9b963913e60ca73838359ca7ce2fa6988a0f72b602a48064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY NOT CREATE 0x2F 0xB9 MSTORE8 0xD 0xBB GASPRICE SWAP12 SWAP7 CODECOPY SGT 0xE6 0xC 0xA7 CODESIZE CODESIZE CALLDATALOAD SWAP13 0xA7 0xCE 0x2F 0xA6 SWAP9 DUP11 0xF PUSH19 0xB602A48064736F6C634300081A003300000000 ",
							"sourceMap": "57245:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 57245,
									"end": 58292,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e19f02fb9530dbb3a9b963913e60ca73838359ca7ce2fa6988a0f72b602a48064736f6c634300081a0033",
									".code": [
										{
											"begin": 57245,
											"end": 58292,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57245,
											"end": 58292,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":66359:69044  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":66359:69044  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c2d39ad48dfd103646bafd461bc8f82d096fa1c6e307deabff9db2376efa646664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c2d39ad48dfd103646bafd461bc8f82d096fa1c6e307deabff9db2376efa646664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD3 SWAP11 0xD4 DUP14 REVERT LT CALLDATASIZE CHAINID 0xBA REVERT CHAINID SHL 0xC8 0xF8 0x2D MULMOD PUSH16 0xA1C6E307DEABFF9DB2376EFA64666473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "66359:2685:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;66359:2685:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c2d39ad48dfd103646bafd461bc8f82d096fa1c6e307deabff9db2376efa646664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD3 SWAP11 0xD4 DUP14 REVERT LT CALLDATASIZE CHAINID 0xBA REVERT CHAINID SHL 0xC8 0xF8 0x2D MULMOD PUSH16 0xA1C6E307DEABFF9DB2376EFA64666473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "66359:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 66359,
									"end": 69044,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2d39ad48dfd103646bafd461bc8f82d096fa1c6e307deabff9db2376efa646664736f6c634300081a0033",
									".code": [
										{
											"begin": 66359,
											"end": 69044,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 69044,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_flattened.sol\":58479:61326  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_flattened.sol\":58479:61326  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc45f6010cb943600c3149ecbd55dbef302c9a553a4dec659e9c0a443a93b86f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc45f6010cb943600c3149ecbd55dbef302c9a553a4dec659e9c0a443a93b86f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GASLIMIT 0xF6 ADD 0xC 0xB9 NUMBER PUSH1 0xC BALANCE BLOBHASH 0xEC 0xBD SSTORE 0xDB 0xEF ADDRESS 0x2C SWAP11 SSTORE GASPRICE 0x4D 0xEC PUSH6 0x9E9C0A443A93 0xB8 PUSH16 0x64736F6C634300081A00330000000000 ",
							"sourceMap": "58479:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58479:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc45f6010cb943600c3149ecbd55dbef302c9a553a4dec659e9c0a443a93b86f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GASLIMIT 0xF6 ADD 0xC 0xB9 NUMBER PUSH1 0xC BALANCE BLOBHASH 0xEC 0xBD SSTORE 0xDB 0xEF ADDRESS 0x2C SWAP11 SSTORE GASPRICE 0x4D 0xEC PUSH6 0x9E9C0A443A93 0xB8 PUSH16 0x64736F6C634300081A00330000000000 ",
							"sourceMap": "58479:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58479,
									"end": 61326,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc45f6010cb943600c3149ecbd55dbef302c9a553a4dec659e9c0a443a93b86f64736f6c634300081a0033",
									".code": [
										{
											"begin": 58479,
											"end": 61326,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58479,
											"end": 61326,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20_flattened.sol\":{\"keccak256\":\"0xa4a9cba4f3417b3bd53cef153d0d2bee8ef4663710a3a465f79c4cd19a2e049b\",\"urls\":[\"bzz-raw://562b5ed10bfc5c2bee8a560b350142291295fb8596a1a26a3e25ab91a5aea4d2\",\"dweb:/ipfs/QmZKK8DQFA9RSehzeCcSJhzqN1yrzP9FdYPTk7M96tttvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC20_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC20_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC20_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ECDSA": [
							1482
						],
						"EIP712": [
							3526
						],
						"ERC20": [
							771
						],
						"ERC20Burnable": [
							812
						],
						"ERC20Pausable": [
							955
						],
						"ERC20Permit": [
							3736
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC20Permit": [
							1135
						],
						"IERC5267": [
							3307
						],
						"IERC721Errors": [
							218
						],
						"Math": [
							2535
						],
						"MessageHashUtils": [
							2960
						],
						"MyToken": [
							3818
						],
						"Nonces": [
							3593
						],
						"Ownable": [
							1100
						],
						"Pausable": [
							926
						],
						"ShortString": [
							3072
						],
						"ShortStrings": [
							3283
						],
						"SignedMath": [
							2639
						],
						"StorageSlot": [
							3069
						],
						"Strings": [
							2889
						]
					},
					"id": 3819,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "159:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "240:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "253:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "422:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "431:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "469:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "453:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:57:0"
									},
									"src": "416:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "494:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "653:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "662:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "685:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "718:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:63:0"
									},
									"src": "647:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "731:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "810:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:0"
									},
									"scope": 77,
									"src": "801:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "862:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "947:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:9:0"
									},
									"scope": 77,
									"src": "938:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1012:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1239:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1260:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:6:0"
									},
									"scope": 77,
									"src": "1230:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1305:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1583:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1601:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:9:0"
									},
									"scope": 77,
									"src": "1574:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1663:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2344:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2377:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2369:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:6:0"
									},
									"scope": 77,
									"src": "2335:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2414:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2725:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2760:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2752:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:6:0"
									},
									"scope": 77,
									"src": "2716:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3819,
							"src": "230:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2977:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3119:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3119:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3119:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3004:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3101:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3132:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3200:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3230:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:15:0"
									},
									"scope": 100,
									"src": "3191:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3251:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3321:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3327:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3353:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:15:0"
									},
									"scope": 100,
									"src": "3312:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3374:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3453:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3487:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:7:0"
									},
									"scope": 100,
									"src": "3444:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3819,
							"src": "3091:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3620:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3646:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4161:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4237:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4258:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4254:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4247:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4194:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4228:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:0"
									},
									"scope": 129,
									"src": "4175:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4344:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4361:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4365:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4361:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4354:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4286:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4294:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4328:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:16:0"
									},
									"scope": 129,
									"src": "4277:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4454:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4471:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4464:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4391:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:9:0"
									},
									"scope": 129,
									"src": "4382:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "4143:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4628:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4654:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4804:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4823:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5143:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5176:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5168:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5209:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:49:0"
									},
									"src": "5137:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5223:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5386:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5405:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:16:0"
									},
									"src": "5380:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5427:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5597:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5626:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5618:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:0"
									},
									"src": "5591:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5642:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5998:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6050:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6042:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:52:0"
									},
									"src": "5992:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6083:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6268:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6297:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:18:0"
									},
									"src": "6262:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6313:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6519:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:17:0"
									},
									"src": "6513:43:0"
								}
							],
							"scope": 3819,
							"src": "4794:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6560:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6712:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6732:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6962:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6989:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6981:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:15:0"
									},
									"src": "6956:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7002:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7145:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7176:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7167:17:0"
									},
									"src": "7139:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7191:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7491:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7520:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7512:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7553:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7545:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7511:48:0"
									},
									"src": "7485:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7566:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7729:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:16:0"
									},
									"src": "7723:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7771:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7941:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7971:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7963:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7962:18:0"
									},
									"src": "7935:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7987:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8245:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8280:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8272:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8290:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:35:0"
									},
									"src": "8239:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8313:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8498:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8528:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8520:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8519:18:0"
									},
									"src": "8492:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8544:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8752:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8782:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8774:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:18:0"
									},
									"src": "8746:46:0"
								}
							],
							"scope": 3819,
							"src": "6702:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8796:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8950:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8971:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9343:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9378:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9370:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9411:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9403:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:66:0"
									},
									"src": "9337:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9442:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9605:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9634:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9625:16:0"
									},
									"src": "9599:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9648:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9818:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9849:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9841:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9840:18:0"
									},
									"src": "9812:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9865:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10132:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10169:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10160:33:0"
									},
									"src": "10126:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10200:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10385:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10407:18:0"
									},
									"src": "10379:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10432:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10640:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10662:18:0"
									},
									"src": "10634:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10687:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10978:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11012:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11004:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11031:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11023:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11003:41:0"
									},
									"src": "10972:73:0"
								}
							],
							"scope": 3819,
							"src": "8940:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11179:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12289:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12289:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12298:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12298:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12306:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12306:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12306:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12322:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12322:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12322:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11209:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12280:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12385:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12341:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12357:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12349:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12341:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12473:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12401:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12417:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12409:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12401:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12444:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12428:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12455:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12507:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12491:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12491:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12541:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12526:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12526:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12567:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12552:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12552:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12813:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12823:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12846:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12846:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12581:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12769:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12790:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12768:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12813:0:0"
									},
									"scope": 771,
									"src": "12757:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12995:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13005:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12876:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12944:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12948:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12980:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12979:15:0"
									},
									"scope": 771,
									"src": "12935:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13199:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13209:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13030:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13146:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13152:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13184:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13183:15:0"
									},
									"scope": 771,
									"src": "13137:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13919:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13936:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13929:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13236:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13872:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13880:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13912:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13911:7:0"
									},
									"scope": 771,
									"src": "13863:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14066:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14083:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14076:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13951:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14025:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14057:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14056:9:0"
									},
									"scope": 771,
									"src": "14005:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14234:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14251:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14244:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14108:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14169:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14224:9:0"
									},
									"scope": 771,
									"src": "14160:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14546:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14564:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14556:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14556:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14556:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14615:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14594:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14594:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14631:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14282:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14480:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14488:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14539:6:0"
									},
									"scope": 771,
									"src": "14471:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14796:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14813:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14813:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14806:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14655:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14716:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14725:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14786:9:0"
									},
									"scope": 771,
									"src": "14707:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15233:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15251:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15243:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15243:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15259:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15243:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15281:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15281:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15322:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14853:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15163:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15170:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:6:0"
									},
									"scope": 771,
									"src": "15154:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15993:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16011:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16003:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16090:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16126:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15346:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15921:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15986:6:0"
									},
									"scope": 771,
									"src": "15900:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16586:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16600:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16608:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16608:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16600:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16596:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16620:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16668:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16660:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16641:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16641:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16634:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16695:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16701:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16701:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16691:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16713:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16763:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16755:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16755:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16755:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16734:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16734:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16727:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16800:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16786:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16150:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16586:0:0"
									},
									"scope": 771,
									"src": "16517:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17207:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17221:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17395:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17417:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17409:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17431:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17431:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17409:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17464:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17464:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17460:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17485:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17535:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17541:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17510:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17510:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17503:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17588:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17695:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17705:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17695:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17713:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17727:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17713:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17695:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17695:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17217:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17241:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17357:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17357:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17771:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17777:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17777:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17771:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17986:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18000:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18145:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18155:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18145:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18145:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18145:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17767:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17789:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17803:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17934:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17950:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17934:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17934:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18207:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18207:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18202:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16823:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17141:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17148:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17207:0:0"
									},
									"scope": 771,
									"src": "17132:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18638:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18663:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18663:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18652:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18648:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18675:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18717:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18717:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18717:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18696:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18689:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18748:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18748:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18245:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18638:0:0"
									},
									"scope": 771,
									"src": "18582:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19164:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19189:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19189:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19178:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19174:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19201:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19249:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19241:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19241:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19241:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19222:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19222:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19215:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19272:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19272:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18796:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19117:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19148:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19140:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19122:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19164:0:0"
									},
									"scope": 771,
									"src": "19108:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19924:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19934:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19934:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19320:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19859:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19867:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19924:0:0"
									},
									"scope": 771,
									"src": "19850:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20908:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20922:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20931:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20931:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20922:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20918:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20943:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20964:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20964:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20957:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21031:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21020:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21016:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21043:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21092:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21084:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21084:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21084:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21064:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21064:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21057:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21115:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21115:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21115:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21115:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21115:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21160:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21175:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21203:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21210:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21219:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21194:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21194:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21189:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19984:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20819:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20908:0:0"
									},
									"scope": 771,
									"src": "20810:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21613:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21631:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21623:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21650:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21623:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21689:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21714:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21709:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21723:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21709:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21689:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21685:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21728:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21746:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21765:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21746:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21742:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21772:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21833:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21851:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21797:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21797:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21790:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21885:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21922:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21929:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21938:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21957:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21938:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21964:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21913:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21913:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21248:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21533:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21548:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21613:0:0"
									},
									"scope": 771,
									"src": "21524:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "12262:9741:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22173:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22445:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22445:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22445:7:0"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC20",
										"nameLocations": [
											"22454:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22454:5:0"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "22454:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "22201:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "22428:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22624:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 784,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22640:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22640:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "22654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22634:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22634:26:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22466:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22589:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22593:15:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22624:0:0"
									},
									"scope": 812,
									"src": "22580:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "23048:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "23074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 800,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "23083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23083:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "23097:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "23058:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23058:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "23058:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "23119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "23128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "23113:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23113:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "23113:21:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22673:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22992:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23009:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "23001:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23026:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "23018:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23000:32:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23048:0:0"
									},
									"scope": 812,
									"src": "22983:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3819,
							"src": "22410:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23269:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "Context",
										"nameLocations": [
											"23766:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23766:7:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "23766:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "23296:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								129
							],
							"name": "Pausable",
							"nameLocation": "23754:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "23793:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "23780:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 817,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "23780:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "23807:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 823,
									"name": "Paused",
									"nameLocation": "23891:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "23898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23897:17:0"
									},
									"src": "23885:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "23921:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 828,
									"name": "Unpaused",
									"nameLocation": "24002:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "24011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24010:17:0"
									},
									"src": "23996:32:0"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "24034:76:0",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 831,
									"name": "EnforcedPause",
									"nameLocation": "24121:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24134:2:0"
									},
									"src": "24115:22:0"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "24143:80:0",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 834,
									"name": "ExpectedPause",
									"nameLocation": "24234:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24247:2:0"
									},
									"src": "24228:22:0"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "24342:32:0",
										"statements": [
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "24352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24362:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "24352:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "24352:15:0"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "24256:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 843,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24339:2:0"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24342:0:0"
									},
									"scope": 926,
									"src": "24328:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "24585:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 846,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "24595:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24595:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "24595:19:0"
											},
											{
												"id": 849,
												"nodeType": "PlaceholderStatement",
												"src": "24624:1:0"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "24380:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 851,
									"name": "whenNotPaused",
									"nameLocation": "24569:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24582:2:0"
									},
									"src": "24560:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "24832:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 854,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "24842:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24842:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "24842:16:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "24868:1:0"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "24638:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 859,
									"name": "whenPaused",
									"nameLocation": "24819:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24829:2:0"
									},
									"src": "24810:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "25024:31:0",
										"statements": [
											{
												"expression": {
													"id": 865,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "25041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 864,
												"id": 866,
												"nodeType": "Return",
												"src": "25034:14:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "24882:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "24980:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24986:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "25018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25017:6:0"
									},
									"scope": 926,
									"src": "24971:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "25174:77:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 872,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "25188:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25188:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "25184:61:0",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "25198:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 874,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "25219:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25219:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 876,
															"nodeType": "RevertStatement",
															"src": "25212:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "25061:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "25132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25149:2:0"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25174:0:0"
									},
									"scope": 926,
									"src": "25123:128:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "25371:78:0",
										"statements": [
											{
												"condition": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "25385:9:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 884,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "25386:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25386:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 891,
												"nodeType": "IfStatement",
												"src": "25381:62:0",
												"trueBody": {
													"id": 890,
													"nodeType": "Block",
													"src": "25396:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 887,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "25417:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25417:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 889,
															"nodeType": "RevertStatement",
															"src": "25410:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "25257:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "25332:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25346:2:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25371:0:0"
									},
									"scope": 926,
									"src": "25323:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "25633:66:0",
										"statements": [
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25653:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25643:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "25643:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 904,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "25679:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25679:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 903,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "25672:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25672:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "EmitStatement",
												"src": "25667:25:0"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "25455:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 897,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 896,
												"name": "whenNotPaused",
												"nameLocations": [
													"25619:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 851,
												"src": "25619:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25619:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "25593:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25599:2:0"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25633:0:0"
									},
									"scope": 926,
									"src": "25584:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "25879:69:0",
										"statements": [
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25899:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25889:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "25889:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 920,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "25928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25928:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 919,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "25919:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25919:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "EmitStatement",
												"src": "25914:27:0"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "25705:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 913,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 912,
												"name": "whenPaused",
												"nameLocations": [
													"25868:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25868:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25868:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "25840:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25848:2:0"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25879:0:0"
									},
									"scope": 926,
									"src": "25831:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "23736:2214:0",
							"usedErrors": [
								831,
								834
							],
							"usedEvents": [
								823,
								828
							]
						},
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26120:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "ERC20",
										"nameLocations": [
											"26871:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "26871:5:0"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "26871:5:0"
								},
								{
									"baseName": {
										"id": 931,
										"name": "Pausable",
										"nameLocations": [
											"26878:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "26878:8:0"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "26878:8:0"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "26148:687:0",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 955,
							"linearizedBaseContracts": [
								955,
								926,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Pausable",
							"nameLocation": "26854:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										578
									],
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "27117:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "27141:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "27147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "27151:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 945,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "27127:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$955_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27133:7:0",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "27127:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27127:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "27127:30:0"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "26893:121:0",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 943,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 942,
												"name": "whenNotPaused",
												"nameLocations": [
													"27103:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 851,
												"src": "27103:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27103:13:0"
										}
									],
									"name": "_update",
									"nameLocation": "27028:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 941,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27094:8:0"
									},
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27044:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "27036:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27058:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "27050:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27070:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "27062:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27035:41:0"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27117:0:0"
									},
									"scope": 955,
									"src": "27019:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "26836:330:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								831,
								834
							],
							"usedEvents": [
								11,
								20,
								823,
								828
							]
						},
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27292:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 958,
										"name": "Context",
										"nameLocations": [
											"27836:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "27836:7:0"
									},
									"id": 959,
									"nodeType": "InheritanceSpecifier",
									"src": "27836:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "27319:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1100,
							"linearizedBaseContracts": [
								1100,
								129
							],
							"name": "Ownable",
							"nameLocation": "27825:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 961,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27866:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "27850:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 960,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27850:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "27879:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 966,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "27975:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28010:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "28002:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28001:17:0"
									},
									"src": "27969:50:0"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "28025:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 971,
									"name": "OwnableInvalidOwner",
									"nameLocation": "28118:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "28138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28137:15:0"
									},
									"src": "28112:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 977,
									"name": "OwnershipTransferred",
									"nameLocation": "28165:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "28202:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28186:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28217:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28185:57:0"
									},
									"src": "28159:84:0"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "28403:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 983,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "28417:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28441:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 984,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28433:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28433:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28417:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "28413:95:0",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "28445:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28494:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28486:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 990,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28486:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28486:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 989,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "28466:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28466:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 995,
															"nodeType": "RevertStatement",
															"src": "28459:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "28536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 998,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "28517:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28517:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "28517:32:0"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "28249:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1003,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "28389:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "28381:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28380:22:0"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28403:0:0"
									},
									"scope": 1100,
									"src": "28369:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "28665:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1006,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "28675:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28675:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "28675:13:0"
											},
											{
												"id": 1009,
												"nodeType": "PlaceholderStatement",
												"src": "28698:1:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "28562:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1011,
									"name": "onlyOwner",
									"nameLocation": "28653:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28662:2:0"
									},
									"src": "28644:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "28837:30:0",
										"statements": [
											{
												"expression": {
													"id": 1017,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "28854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1018,
												"nodeType": "Return",
												"src": "28847:13:0"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "28712:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "28791:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28796:2:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "28828:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28827:9:0"
									},
									"scope": 1100,
									"src": "28782:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "28985:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1024,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "28999:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28999:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1026,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "29010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29010:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28999:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "28995:101:0",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "29024:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1030,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "29072:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29072:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1029,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "29045:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29045:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "29038:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "28873:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28949:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28960:2:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28985:0:0"
									},
									"scope": 1100,
									"src": "28940:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "29491:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29528:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29520:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29520:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29520:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1043,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "29501:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29501:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "29501:30:0"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "29108:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "onlyOwner",
												"nameLocations": [
													"29481:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "29481:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29481:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "29446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29463:2:0"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29491:0:0"
									},
									"scope": 1100,
									"src": "29437:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "29757:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1059,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "29771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1060,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29783:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29783:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29771:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "29767:91:0",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "29795:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29844:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29836:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1066,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29836:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29836:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1065,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "29816:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29816:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1071,
															"nodeType": "RevertStatement",
															"src": "29809:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "29886:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "29867:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29867:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "29867:28:0"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "29544:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "onlyOwner",
												"nameLocations": [
													"29747:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "29747:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29747:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29696:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29722:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "29714:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29713:18:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29757:0:0"
									},
									"scope": 1100,
									"src": "29687:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "30119:124:0",
										"statements": [
											{
												"assignments": [
													1086
												],
												"declarations": [
													{
														"constant": false,
														"id": 1086,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "30137:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "30129:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1085,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30129:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"id": 1087,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "30148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30129:25:0"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "30164:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1090,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "30173:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30164:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "30164:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1094,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "30217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "30227:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1093,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "30196:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30196:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "EmitStatement",
												"src": "30191:45:0"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "29908:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "30065:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "30092:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "30084:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30083:18:0"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30119:0:0"
									},
									"scope": 1100,
									"src": "30056:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "27807:2438:0",
							"usedErrors": [
								966,
								971
							],
							"usedEvents": [
								977
							]
						},
						{
							"id": 1101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30413:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1102,
								"nodeType": "StructuredDocumentation",
								"src": "30439:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1135,
							"linearizedBaseContracts": [
								1135
							],
							"name": "IERC20Permit",
							"nameLocation": "32413:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "32432:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "33296:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33320:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33312:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "33343:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33368:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33360:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "33391:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33383:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "33415:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33409:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1112,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "33409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "33434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "33453:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "33445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33302:158:0"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33469:0:0"
									},
									"scope": 1135,
									"src": "33287:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "33476:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "33784:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "33791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33790:15:0"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "33829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33828:9:0"
									},
									"scope": 1135,
									"src": "33775:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "33844:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "34039:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34055:2:0"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "34081:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34080:9:0"
									},
									"scope": 1135,
									"src": "34030:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3819,
							"src": "32403:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34238:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "34264:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "ECDSA",
							"nameLocation": "34478:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1142,
									"members": [
										{
											"id": 1138,
											"name": "NoError",
											"nameLocation": "34518:7:0",
											"nodeType": "EnumValue",
											"src": "34518:7:0"
										},
										{
											"id": 1139,
											"name": "InvalidSignature",
											"nameLocation": "34535:16:0",
											"nodeType": "EnumValue",
											"src": "34535:16:0"
										},
										{
											"id": 1140,
											"name": "InvalidSignatureLength",
											"nameLocation": "34561:22:0",
											"nodeType": "EnumValue",
											"src": "34561:22:0"
										},
										{
											"id": 1141,
											"name": "InvalidSignatureS",
											"nameLocation": "34593:17:0",
											"nodeType": "EnumValue",
											"src": "34593:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "34495:12:0",
									"nodeType": "EnumDefinition",
									"src": "34490:126:0"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "34622:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1145,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "34696:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34717:2:0"
									},
									"src": "34690:30:0"
								},
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "34726:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1150,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "34797:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "34833:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "34825:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34824:16:0"
									},
									"src": "34791:50:0"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "34847:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1155,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "34943:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "34974:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "34966:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34965:11:0"
									},
									"src": "34937:40:0"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "36368:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1170,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "36382:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36392:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "36382:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36402:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "36382:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "36907:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36937:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36929:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1192,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36929:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36929:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1196,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "36941:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "36954:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1140,
																		"src": "36941:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1142",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1200,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "36986:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "36996:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "36986:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36978:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1198,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "36978:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36978:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1203,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36928:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1169,
															"id": 1204,
															"nodeType": "Return",
															"src": "36921:83:0"
														}
													]
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "36378:637:0",
												"trueBody": {
													"id": 1191,
													"nodeType": "Block",
													"src": "36406:495:0",
													"statements": [
														{
															"assignments": [
																1175
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1175,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "36428:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1191,
																	"src": "36420:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "36420:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1176,
															"nodeType": "VariableDeclarationStatement",
															"src": "36420:9:0"
														},
														{
															"assignments": [
																1178
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1178,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "36451:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1191,
																	"src": "36443:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1177,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "36443:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1179,
															"nodeType": "VariableDeclarationStatement",
															"src": "36443:9:0"
														},
														{
															"assignments": [
																1181
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1181,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "36472:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1191,
																	"src": "36466:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1180,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "36466:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1182,
															"nodeType": "VariableDeclarationStatement",
															"src": "36466:7:0"
														},
														{
															"AST": {
																"nativeSrc": "36674:171:0",
																"nodeType": "YulBlock",
																"src": "36674:171:0",
																"statements": [
																	{
																		"nativeSrc": "36692:32:0",
																		"nodeType": "YulAssignment",
																		"src": "36692:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "36707:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "36707:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "36718:4:0",
																							"nodeType": "YulLiteral",
																							"src": "36718:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "36703:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "36703:3:0"
																					},
																					"nativeSrc": "36703:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "36703:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "36697:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "36697:5:0"
																			},
																			"nativeSrc": "36697:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "36697:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "36692:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "36692:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "36741:32:0",
																		"nodeType": "YulAssignment",
																		"src": "36741:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "36756:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "36756:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "36767:4:0",
																							"nodeType": "YulLiteral",
																							"src": "36767:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "36752:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "36752:3:0"
																					},
																					"nativeSrc": "36752:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "36752:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "36746:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "36746:5:0"
																			},
																			"nativeSrc": "36746:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "36746:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "36741:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "36741:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "36790:41:0",
																		"nodeType": "YulAssignment",
																		"src": "36790:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "36800:1:0",
																					"nodeType": "YulLiteral",
																					"src": "36800:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "36813:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "36813:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "36824:4:0",
																									"nodeType": "YulLiteral",
																									"src": "36824:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "36809:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "36809:3:0"
																							},
																							"nativeSrc": "36809:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "36809:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "36803:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "36803:5:0"
																					},
																					"nativeSrc": "36803:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "36803:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "36795:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "36795:4:0"
																			},
																			"nativeSrc": "36795:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "36795:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "36790:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "36790:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1175,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36692:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1178,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36741:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1160,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36707:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1160,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36756:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1160,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36813:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1181,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "36790:1:0",
																	"valueSize": 1
																}
															],
															"id": 1183,
															"nodeType": "InlineAssembly",
															"src": "36665:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1185,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "36876:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1186,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "36882:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1187,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "36885:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1188,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "36888:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1184,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1208,
																		1288,
																		1396
																	],
																	"referencedDeclaration": 1396,
																	"src": "36865:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36865:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1169,
															"id": 1190,
															"nodeType": "Return",
															"src": "36858:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "34983:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "36264:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "36283:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "36275:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "36302:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "36289:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36289:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36274:38:0"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "36336:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "36345:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1142",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "RecoverError",
														"nameLocations": [
															"36345:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1142,
														"src": "36345:12:0"
													},
													"referencedDeclaration": 1142,
													"src": "36345:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1142",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "36359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36335:32:0"
									},
									"scope": 1482,
									"src": "36255:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "37915:168:0",
										"statements": [
											{
												"assignments": [
													1219,
													1222,
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "37934:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "37926:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1218,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37926:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "37958:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "37945:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1221,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1220,
																"name": "RecoverError",
																"nameLocations": [
																	"37945:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1142,
																"src": "37945:12:0"
															},
															"referencedDeclaration": 1142,
															"src": "37945:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "37973:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "37965:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1223,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "37965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"arguments": [
														{
															"id": 1226,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "37996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1227,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "38002:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1225,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1288,
															1396
														],
														"referencedDeclaration": 1208,
														"src": "37985:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37985:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37925:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "38034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1232,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "38041:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1230,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "38022:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1142_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38022:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "38022:28:0"
											},
											{
												"expression": {
													"id": 1235,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "38067:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1236,
												"nodeType": "Return",
												"src": "38060:16:0"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "37027:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "37837:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "37853:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "37845:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "37872:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "37859:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37844:38:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "37906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37905:9:0"
									},
									"scope": 1482,
									"src": "37828:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "38411:342:0",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "38421:326:0",
												"statements": [
													{
														"assignments": [
															1256
														],
														"declarations": [
															{
																"constant": false,
																"id": 1256,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "38453:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "38445:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1255,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "38445:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1263,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "38457:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38470:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1258,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "38462:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38462:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "38457:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38445:92:0"
													},
													{
														"assignments": [
															1265
														],
														"declarations": [
															{
																"constant": false,
																"id": 1265,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "38654:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "38648:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1264,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "38648:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1278,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1270,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1245,
																							"src": "38673:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38665:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1268,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "38665:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38665:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38680:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "38665:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1274,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "38664:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38687:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "38664:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38658:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1266,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "38658:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38658:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38648:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "38722:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1281,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "38728:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1282,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "38731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1283,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "38734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1279,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1208,
																	1288,
																	1396
																],
																"referencedDeclaration": 1396,
																"src": "38711:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38711:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1254,
														"id": 1285,
														"nodeType": "Return",
														"src": "38704:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "38089:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "38308:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "38327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38319:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "38341:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38333:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "38352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38318:37:0"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38388:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1142",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1249,
														"name": "RecoverError",
														"nameLocations": [
															"38388:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1142,
														"src": "38388:12:0"
													},
													"referencedDeclaration": 1142,
													"src": "38388:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1142",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "38402:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38378:32:0"
									},
									"scope": 1482,
									"src": "38299:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "38966:164:0",
										"statements": [
											{
												"assignments": [
													1301,
													1304,
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "38985:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "38977:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1300,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "38977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "39009:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "38996:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1303,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1302,
																"name": "RecoverError",
																"nameLocations": [
																	"38996:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1142,
																"src": "38996:12:0"
															},
															"referencedDeclaration": 1142,
															"src": "38996:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "39024:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "39016:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1305,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "39016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "39047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1309,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "39053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1310,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "39056:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1307,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1288,
															1396
														],
														"referencedDeclaration": 1288,
														"src": "39036:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39036:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38976:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "39081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1315,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "39088:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1313,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "39069:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1142_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39069:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "39069:28:0"
											},
											{
												"expression": {
													"id": 1318,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1301,
													"src": "39114:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1319,
												"nodeType": "Return",
												"src": "39107:16:0"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "38759:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "38889:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "38905:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38897:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "38919:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38911:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "38930:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38922:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38896:37:0"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38956:9:0"
									},
									"scope": 1482,
									"src": "38880:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "39424:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1342,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "40320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1340,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40312:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40312:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40325:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "40312:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "40308:164:0",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "40393:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40423:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40415:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1346,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40415:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40415:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1350,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "40427:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "40440:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1141,
																		"src": "40427:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1142",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1352,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "40459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40414:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1339,
															"id": 1354,
															"nodeType": "Return",
															"src": "40407:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "40574:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1395,
														"src": "40566:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1357,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40566:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "40593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1361,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "40599:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1362,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "40602:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1363,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "40605:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1359,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "40583:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40583:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40566:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1366,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "40621:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1367,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40631:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40631:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40621:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "40617:113:0",
												"trueBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "40643:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40673:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40665:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1372,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40665:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40665:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1376,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "40677:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "40690:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1139,
																		"src": "40677:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1142",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40716:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40708:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1378,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "40708:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40708:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40664:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1339,
															"id": 1383,
															"nodeType": "Return",
															"src": "40657:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1386,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "40748:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1387,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "40756:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "40769:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1138,
															"src": "40756:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40778:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1389,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "40778:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40778:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1393,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "40747:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1394,
												"nodeType": "Return",
												"src": "40740:49:0"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "39136:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "39275:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "39303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "39323:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1325,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "39317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "39342:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "39361:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39353:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39285:83:0"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1142",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1334,
														"name": "RecoverError",
														"nameLocations": [
															"39401:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1142,
														"src": "39401:12:0"
													},
													"referencedDeclaration": 1142,
													"src": "39401:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1142",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "39415:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39391:32:0"
									},
									"scope": 1482,
									"src": "39266:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "41023:166:0",
										"statements": [
											{
												"assignments": [
													1411,
													1414,
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "41042:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "41034:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1410,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "41034:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1414,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "41066:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "41053:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1413,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1412,
																"name": "RecoverError",
																"nameLocations": [
																	"41053:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1142,
																"src": "41053:12:0"
															},
															"referencedDeclaration": 1142,
															"src": "41053:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "41081:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "41073:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1415,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "41073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"arguments": [
														{
															"id": 1418,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "41104:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1419,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "41110:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1420,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "41113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1421,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "41116:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1417,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1288,
															1396
														],
														"referencedDeclaration": 1396,
														"src": "41093:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41093:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1142_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41033:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "41140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1426,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "41147:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1424,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "41128:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1142_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41128:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "41128:28:0"
											},
											{
												"expression": {
													"id": 1429,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1411,
													"src": "41173:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1430,
												"nodeType": "Return",
												"src": "41166:16:0"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "40802:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "40938:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "40954:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "40946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "40946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "40966:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "40960:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1400,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "40960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "40977:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "40969:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "40969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "40988:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "40980:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "40980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40945:45:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "41014:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41013:9:0"
									},
									"scope": 1482,
									"src": "40929:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "41394:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1142",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "41408:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1442,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "41417:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "41430:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "41417:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "41408:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1142",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1447,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "41504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1448,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "41513:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "41526:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1139,
															"src": "41513:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "41504:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1142",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "41609:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1142",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1456,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "41618:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41631:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1140,
																"src": "41618:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1142",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "41609:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1142",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1467,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "41743:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1142",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1468,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "41752:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1142_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "41765:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1141,
																	"src": "41752:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1142",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "41743:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1476,
															"nodeType": "IfStatement",
															"src": "41739:109:0",
															"trueBody": {
																"id": 1475,
																"nodeType": "Block",
																"src": "41784:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1472,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1438,
																					"src": "41828:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1471,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "41805:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "41805:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1474,
																		"nodeType": "RevertStatement",
																		"src": "41798:39:0"
																	}
																]
															}
														},
														"id": 1477,
														"nodeType": "IfStatement",
														"src": "41605:243:0",
														"trueBody": {
															"id": 1466,
															"nodeType": "Block",
															"src": "41655:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1462,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1438,
																						"src": "41712:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "41704:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1460,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "41704:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "41704:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1459,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "41676:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41676:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1465,
																	"nodeType": "RevertStatement",
																	"src": "41669:53:0"
																}
															]
														}
													},
													"id": 1478,
													"nodeType": "IfStatement",
													"src": "41500:348:0",
													"trueBody": {
														"id": 1454,
														"nodeType": "Block",
														"src": "41544:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1451,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "41565:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41565:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1453,
																"nodeType": "RevertStatement",
																"src": "41558:30:0"
															}
														]
													}
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "41404:444:0",
												"trueBody": {
													"id": 1446,
													"nodeType": "Block",
													"src": "41439:55:0",
													"statements": [
														{
															"functionReturnParameters": 1440,
															"id": 1445,
															"nodeType": "Return",
															"src": "41453:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "41195:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "41331:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "41356:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "41343:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1142",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1434,
														"name": "RecoverError",
														"nameLocations": [
															"41343:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1142,
														"src": "41343:12:0"
													},
													"referencedDeclaration": 1142,
													"src": "41343:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1142",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "41371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "41363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41342:38:0"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41394:0:0"
									},
									"scope": 1482,
									"src": "41322:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3819,
							"src": "34470:7386:0",
							"usedErrors": [
								1145,
								1150,
								1155
							],
							"usedEvents": []
						},
						{
							"id": 1483,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41984:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1484,
								"nodeType": "StructuredDocumentation",
								"src": "42010:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2535,
							"linearizedBaseContracts": [
								2535
							],
							"name": "Math",
							"nameLocation": "42092:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "42103:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1487,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "42164:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42184:2:0"
									},
									"src": "42158:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1492,
									"members": [
										{
											"id": 1488,
											"name": "Floor",
											"nameLocation": "42217:5:0",
											"nodeType": "EnumValue",
											"src": "42217:5:0"
										},
										{
											"id": 1489,
											"name": "Ceil",
											"nameLocation": "42260:4:0",
											"nodeType": "EnumValue",
											"src": "42260:4:0"
										},
										{
											"id": 1490,
											"name": "Trunc",
											"nameLocation": "42302:5:0",
											"nodeType": "EnumValue",
											"src": "42302:5:0"
										},
										{
											"id": 1491,
											"name": "Expand",
											"nameLocation": "42332:6:0",
											"nodeType": "EnumValue",
											"src": "42332:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "42198:8:0",
									"nodeType": "EnumDefinition",
									"src": "42193:169:0"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "42542:140:0",
										"statements": [
											{
												"id": 1522,
												"nodeType": "UncheckedBlock",
												"src": "42552:124:0",
												"statements": [
													{
														"assignments": [
															1505
														],
														"declarations": [
															{
																"constant": false,
																"id": 1505,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "42584:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1522,
																"src": "42576:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "42576:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1509,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "42588:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1507,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "42592:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42588:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42576:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "42611:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1511,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "42615:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1517,
														"nodeType": "IfStatement",
														"src": "42607:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42626:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42633:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42625:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1503,
															"id": 1516,
															"nodeType": "Return",
															"src": "42618:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42657:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1519,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "42663:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1520,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "42656:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1503,
														"id": 1521,
														"nodeType": "Return",
														"src": "42649:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "42368:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "42475:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "42490:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "42482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "42501:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "42493:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42481:22:0"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "42527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "42533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42526:15:0"
									},
									"scope": 2535,
									"src": "42466:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "42865:113:0",
										"statements": [
											{
												"id": 1550,
												"nodeType": "UncheckedBlock",
												"src": "42875:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1536,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "42903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1537,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "42907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "42899:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42918:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42925:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1535,
															"id": 1542,
															"nodeType": "Return",
															"src": "42910:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42949:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1545,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "42955:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1546,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "42959:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "42955:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1548,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "42948:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1535,
														"id": 1549,
														"nodeType": "Return",
														"src": "42941:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "42688:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "42798:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "42813:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "42805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "42824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "42816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42804:22:0"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "42850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "42856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42849:15:0"
									},
									"scope": 2535,
									"src": "42789:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "43164:417:0",
										"statements": [
											{
												"id": 1592,
												"nodeType": "UncheckedBlock",
												"src": "43174:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1564,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "43432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43437:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "43432:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1571,
														"nodeType": "IfStatement",
														"src": "43428:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43448:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43454:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1569,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43447:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1563,
															"id": 1570,
															"nodeType": "Return",
															"src": "43440:16:0"
														}
													},
													{
														"assignments": [
															1573
														],
														"declarations": [
															{
																"constant": false,
																"id": 1573,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "43478:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1592,
																"src": "43470:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43470:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1577,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "43482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1575,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "43486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43470:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1578,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "43505:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1579,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "43509:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43505:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1581,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "43514:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43505:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1587,
														"nodeType": "IfStatement",
														"src": "43501:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43525:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43532:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1585,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43524:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1563,
															"id": 1586,
															"nodeType": "Return",
															"src": "43517:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43556:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1589,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "43562:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1590,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "43555:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1563,
														"id": 1591,
														"nodeType": "Return",
														"src": "43548:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "42984:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "43097:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "43112:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "43104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "43123:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "43115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43103:22:0"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "43149:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43149:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "43155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43148:15:0"
									},
									"scope": 2535,
									"src": "43088:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "43768:114:0",
										"statements": [
											{
												"id": 1620,
												"nodeType": "UncheckedBlock",
												"src": "43778:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "43806:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43811:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "43806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1613,
														"nodeType": "IfStatement",
														"src": "43802:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43822:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43829:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1611,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43821:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1605,
															"id": 1612,
															"nodeType": "Return",
															"src": "43814:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43853:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1615,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "43859:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "43863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43859:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1618,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "43852:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1605,
														"id": 1619,
														"nodeType": "Return",
														"src": "43845:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "43587:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "43701:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "43716:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "43708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "43727:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "43719:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43707:22:0"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "43753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "43759:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43752:15:0"
									},
									"scope": 2535,
									"src": "43692:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "44079:114:0",
										"statements": [
											{
												"id": 1648,
												"nodeType": "UncheckedBlock",
												"src": "44089:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "44117:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "44117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1641,
														"nodeType": "IfStatement",
														"src": "44113:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44133:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1639,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "44132:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1633,
															"id": 1640,
															"nodeType": "Return",
															"src": "44125:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44164:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1643,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "44170:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1644,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "44174:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44170:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1646,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "44163:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1633,
														"id": 1647,
														"nodeType": "Return",
														"src": "44156:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "43888:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "44012:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "44027:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "44019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "44038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "44030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44018:22:0"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "44064:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44064:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "44070:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44063:15:0"
									},
									"scope": 2535,
									"src": "44003:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "44330:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1660,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "44347:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1661,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "44351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "44347:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1664,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "44359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "44347:13:0",
													"trueExpression": {
														"id": 1663,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "44355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1666,
												"nodeType": "Return",
												"src": "44340:20:0"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "44199:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "44272:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "44284:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "44276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "44295:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "44287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44275:22:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "44321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44320:9:0"
									},
									"scope": 2535,
									"src": "44263:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "44505:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1678,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "44522:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1679,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "44526:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "44522:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1682,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "44534:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "44522:13:0",
													"trueExpression": {
														"id": 1681,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "44530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1684,
												"nodeType": "Return",
												"src": "44515:20:0"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "44373:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "44447:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "44459:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "44451:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "44470:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "44462:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44450:22:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "44496:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44495:9:0"
									},
									"scope": 2535,
									"src": "44438:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "44726:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1696,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "44781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1697,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "44785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44781:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1699,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "44780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1700,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "44791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1701,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "44795:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44791:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1703,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "44790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44800:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "44790:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44780:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1707,
												"nodeType": "Return",
												"src": "44773:28:0"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "44548:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "44664:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "44680:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "44672:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "44691:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "44683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44671:22:0"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "44717:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44716:9:0"
									},
									"scope": 2535,
									"src": "44655:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "45100:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1719,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "45114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45119:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45114:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "45110:127:0",
												"trueBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "45122:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1722,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "45221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1723,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "45225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1718,
															"id": 1725,
															"nodeType": "Return",
															"src": "45214:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1728,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "45325:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45330:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "45325:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1732,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1712,
																			"src": "45339:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45343:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "45339:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "45338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1736,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "45348:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "45338:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45352:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "45338:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "45325:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45334:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1741,
												"nodeType": "Return",
												"src": "45318:35:0"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "44814:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "45038:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "45054:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "45046:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "45065:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "45057:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45045:22:0"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "45091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45090:9:0"
									},
									"scope": 2535,
									"src": "45029:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "45782:4018:0",
										"statements": [
											{
												"id": 1867,
												"nodeType": "UncheckedBlock",
												"src": "45792:4002:0",
												"statements": [
													{
														"assignments": [
															1756
														],
														"declarations": [
															{
																"constant": false,
																"id": 1756,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "46121:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1867,
																"src": "46113:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1755,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "46113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1760,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1757,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "46129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1758,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "46133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "46113:21:0"
													},
													{
														"assignments": [
															1762
														],
														"declarations": [
															{
																"constant": false,
																"id": 1762,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "46201:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1867,
																"src": "46193:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "46193:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1763,
														"nodeType": "VariableDeclarationStatement",
														"src": "46193:13:0"
													},
													{
														"AST": {
															"nativeSrc": "46273:122:0",
															"nodeType": "YulBlock",
															"src": "46273:122:0",
															"statements": [
																{
																	"nativeSrc": "46291:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "46291:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "46308:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "46308:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "46311:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "46311:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "46318:1:0",
																						"nodeType": "YulLiteral",
																						"src": "46318:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "46314:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "46314:3:0"
																				},
																				"nativeSrc": "46314:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "46314:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "46301:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "46301:6:0"
																		},
																		"nativeSrc": "46301:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "46301:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "46295:2:0",
																			"nodeType": "YulTypedName",
																			"src": "46295:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "46338:43:0",
																	"nodeType": "YulAssignment",
																	"src": "46338:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "46355:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "46355:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "46359:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "46359:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "46351:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "46351:3:0"
																				},
																				"nativeSrc": "46351:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "46351:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "46370:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "46370:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "46374:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "46374:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "46367:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "46367:2:0"
																				},
																				"nativeSrc": "46367:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "46367:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "46347:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "46347:3:0"
																		},
																		"nativeSrc": "46347:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "46347:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "46338:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "46338:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "46359:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "46374:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1762,
																"isOffset": false,
																"isSlot": false,
																"src": "46338:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1746,
																"isOffset": false,
																"isSlot": false,
																"src": "46308:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1748,
																"isOffset": false,
																"isSlot": false,
																"src": "46311:1:0",
																"valueSize": 1
															}
														],
														"id": 1764,
														"nodeType": "InlineAssembly",
														"src": "46264:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "46476:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "46476:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1773,
														"nodeType": "IfStatement",
														"src": "46472:368:0",
														"trueBody": {
															"id": 1772,
															"nodeType": "Block",
															"src": "46488:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1768,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "46806:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1769,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "46814:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "46806:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1754,
																	"id": 1771,
																	"nodeType": "Return",
																	"src": "46799:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1774,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "46946:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1775,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "46961:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46946:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1781,
														"nodeType": "IfStatement",
														"src": "46942:88:0",
														"trueBody": {
															"id": 1780,
															"nodeType": "Block",
															"src": "46968:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1777,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1487,
																			"src": "46993:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46993:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1779,
																	"nodeType": "RevertStatement",
																	"src": "46986:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															1783
														],
														"declarations": [
															{
																"constant": false,
																"id": 1783,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "47293:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1867,
																"src": "47285:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1782,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "47285:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1784,
														"nodeType": "VariableDeclarationStatement",
														"src": "47285:17:0"
													},
													{
														"AST": {
															"nativeSrc": "47325:291:0",
															"nodeType": "YulBlock",
															"src": "47325:291:0",
															"statements": [
																{
																	"nativeSrc": "47394:38:0",
																	"nodeType": "YulAssignment",
																	"src": "47394:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "47414:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "47414:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "47417:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "47417:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "47420:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "47420:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "47407:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "47407:6:0"
																		},
																		"nativeSrc": "47407:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "47407:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "47394:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "47394:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "47514:41:0",
																	"nodeType": "YulAssignment",
																	"src": "47514:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "47527:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "47527:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "47537:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "47537:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "47548:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "47548:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "47534:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "47534:2:0"
																				},
																				"nativeSrc": "47534:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "47534:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "47523:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "47523:3:0"
																		},
																		"nativeSrc": "47523:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "47523:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "47514:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "47514:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "47572:30:0",
																	"nodeType": "YulAssignment",
																	"src": "47572:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "47585:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "47585:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "47592:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "47592:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "47581:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "47581:3:0"
																		},
																		"nativeSrc": "47581:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "47581:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "47572:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "47572:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1750,
																"isOffset": false,
																"isSlot": false,
																"src": "47420:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "47548:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "47572:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "47585:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1762,
																"isOffset": false,
																"isSlot": false,
																"src": "47514:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1762,
																"isOffset": false,
																"isSlot": false,
																"src": "47527:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1783,
																"isOffset": false,
																"isSlot": false,
																"src": "47394:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1783,
																"isOffset": false,
																"isSlot": false,
																"src": "47537:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1783,
																"isOffset": false,
																"isSlot": false,
																"src": "47592:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1746,
																"isOffset": false,
																"isSlot": false,
																"src": "47414:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1748,
																"isOffset": false,
																"isSlot": false,
																"src": "47417:1:0",
																"valueSize": 1
															}
														],
														"id": 1785,
														"nodeType": "InlineAssembly",
														"src": "47316:300:0"
													},
													{
														"assignments": [
															1787
														],
														"declarations": [
															{
																"constant": false,
																"id": 1787,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "47828:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1867,
																"src": "47820:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1786,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "47820:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1794,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1788,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "47835:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47850:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1790,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "47854:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "47850:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1792,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "47849:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47835:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "47820:46:0"
													},
													{
														"AST": {
															"nativeSrc": "47889:362:0",
															"nodeType": "YulBlock",
															"src": "47889:362:0",
															"statements": [
																{
																	"nativeSrc": "47954:37:0",
																	"nodeType": "YulAssignment",
																	"src": "47954:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "47973:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "47973:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "47986:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "47986:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "47969:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "47969:3:0"
																		},
																		"nativeSrc": "47969:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "47969:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "47954:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "47954:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "48058:25:0",
																	"nodeType": "YulAssignment",
																	"src": "48058:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "48071:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "48071:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "48078:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "48078:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "48067:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "48067:3:0"
																		},
																		"nativeSrc": "48067:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "48067:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "48058:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "48058:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "48198:39:0",
																	"nodeType": "YulAssignment",
																	"src": "48198:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "48218:1:0",
																								"nodeType": "YulLiteral",
																								"src": "48218:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "48221:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "48221:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "48214:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "48214:3:0"
																						},
																						"nativeSrc": "48214:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "48214:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "48228:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "48228:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "48210:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "48210:3:0"
																				},
																				"nativeSrc": "48210:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "48210:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "48235:1:0",
																				"nodeType": "YulLiteral",
																				"src": "48235:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "48206:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "48206:3:0"
																		},
																		"nativeSrc": "48206:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "48206:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "48198:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "48198:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1750,
																"isOffset": false,
																"isSlot": false,
																"src": "47954:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1750,
																"isOffset": false,
																"isSlot": false,
																"src": "47973:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "48058:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "48071:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1787,
																"isOffset": false,
																"isSlot": false,
																"src": "47986:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1787,
																"isOffset": false,
																"isSlot": false,
																"src": "48078:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1787,
																"isOffset": false,
																"isSlot": false,
																"src": "48198:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1787,
																"isOffset": false,
																"isSlot": false,
																"src": "48221:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1787,
																"isOffset": false,
																"isSlot": false,
																"src": "48228:4:0",
																"valueSize": 1
															}
														],
														"id": 1795,
														"nodeType": "InlineAssembly",
														"src": "47880:371:0"
													},
													{
														"expression": {
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1796,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "48317:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1797,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "48326:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1798,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "48334:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48326:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "48317:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1801,
														"nodeType": "ExpressionStatement",
														"src": "48317:21:0"
													},
													{
														"assignments": [
															1803
														],
														"declarations": [
															{
																"constant": false,
																"id": 1803,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "48664:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1867,
																"src": "48656:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "48656:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1810,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48675:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1805,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "48679:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "48675:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "48674:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48694:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "48674:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "48656:39:0"
													},
													{
														"expression": {
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1811,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "48912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48923:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1813,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "48927:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1814,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "48941:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "48927:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48923:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "48912:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1818,
														"nodeType": "ExpressionStatement",
														"src": "48912:36:0"
													},
													{
														"expression": {
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1819,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "48981:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1821,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "48996:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1822,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "49010:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "48996:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48992:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "48981:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1826,
														"nodeType": "ExpressionStatement",
														"src": "48981:36:0"
													},
													{
														"expression": {
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1827,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "49051:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49062:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1829,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "49066:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1830,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "49080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "49066:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49062:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49051:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1834,
														"nodeType": "ExpressionStatement",
														"src": "49051:36:0"
													},
													{
														"expression": {
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1835,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "49121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49132:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1837,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "49136:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1838,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "49150:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "49136:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49132:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49121:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1842,
														"nodeType": "ExpressionStatement",
														"src": "49121:36:0"
													},
													{
														"expression": {
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1843,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "49191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1845,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "49206:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1846,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "49220:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "49206:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49202:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49191:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1850,
														"nodeType": "ExpressionStatement",
														"src": "49191:36:0"
													},
													{
														"expression": {
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1851,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "49262:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49273:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1853,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "49277:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1854,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "49291:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "49277:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49273:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49262:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1858,
														"nodeType": "ExpressionStatement",
														"src": "49262:36:0"
													},
													{
														"expression": {
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1859,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "49732:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "49741:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1861,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "49749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49741:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49732:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1864,
														"nodeType": "ExpressionStatement",
														"src": "49732:24:0"
													},
													{
														"expression": {
															"id": 1865,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "49777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1754,
														"id": 1866,
														"nodeType": "Return",
														"src": "49770:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "45366:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "45693:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "45708:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "45700:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "45719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "45711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "45730:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "45722:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45699:43:0"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "45774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "45766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45765:16:0"
									},
									"scope": 2535,
									"src": "45684:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "50042:192:0",
										"statements": [
											{
												"assignments": [
													1885
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "50060:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1911,
														"src": "50052:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1891,
												"initialValue": {
													"arguments": [
														{
															"id": 1887,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "50076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1888,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "50079:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1889,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "50082:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1886,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1869,
															1912
														],
														"referencedDeclaration": 1869,
														"src": "50069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50069:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50052:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1893,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "50125:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1492",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1492",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1892,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2534,
															"src": "50108:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1492_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50108:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1896,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "50145:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1897,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "50148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1898,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "50151:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1895,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "50138:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50138:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50166:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "50138:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50108:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1908,
												"nodeType": "IfStatement",
												"src": "50104:101:0",
												"trueBody": {
													"id": 1907,
													"nodeType": "Block",
													"src": "50169:36:0",
													"statements": [
														{
															"expression": {
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1903,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "50183:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "50183:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1906,
															"nodeType": "ExpressionStatement",
															"src": "50183:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1909,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1885,
													"src": "50221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1910,
												"nodeType": "Return",
												"src": "50214:13:0"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "49806:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "49941:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "49956:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "49948:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "49967:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "49959:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "49978:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "49970:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "50000:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "49991:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1877,
														"name": "Rounding",
														"nameLocations": [
															"49991:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "49991:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "49991:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49947:62:0"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "50033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50032:9:0"
									},
									"scope": 2535,
									"src": "49932:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "50525:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1920,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "50539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50544:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50539:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "IfStatement",
												"src": "50535:45:0",
												"trueBody": {
													"id": 1925,
													"nodeType": "Block",
													"src": "50547:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50568:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1919,
															"id": 1924,
															"nodeType": "Return",
															"src": "50561:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1928
												],
												"declarations": [
													{
														"constant": false,
														"id": 1928,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "51267:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2023,
														"src": "51259:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1937,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1931,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "51287:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1930,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2191,
																			2226
																		],
																		"referencedDeclaration": 2191,
																		"src": "51282:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51282:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51293:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51282:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1935,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "51281:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51276:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51259:36:0"
											},
											{
												"id": 2022,
												"nodeType": "UncheckedBlock",
												"src": "51696:408:0",
												"statements": [
													{
														"expression": {
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1938,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51720:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1939,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51730:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1940,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51739:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1941,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51743:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51739:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51730:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1944,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51729:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51754:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51729:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51720:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1948,
														"nodeType": "ExpressionStatement",
														"src": "51720:35:0"
													},
													{
														"expression": {
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1949,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51769:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1950,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51779:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1951,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51788:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1952,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51792:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51788:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51779:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1955,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51778:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51803:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51778:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51769:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1959,
														"nodeType": "ExpressionStatement",
														"src": "51769:35:0"
													},
													{
														"expression": {
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1960,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51818:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1961,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51828:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1962,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51837:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1963,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51841:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51837:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51828:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51827:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51827:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51818:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1970,
														"nodeType": "ExpressionStatement",
														"src": "51818:35:0"
													},
													{
														"expression": {
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1971,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51867:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1972,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51877:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1973,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51886:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1974,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51890:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51886:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51877:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1977,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51876:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51876:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51867:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"nodeType": "ExpressionStatement",
														"src": "51867:35:0"
													},
													{
														"expression": {
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1982,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51916:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1983,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51926:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1984,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51935:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1985,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51939:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51935:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51926:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1988,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51925:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51950:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51925:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51916:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1992,
														"nodeType": "ExpressionStatement",
														"src": "51916:35:0"
													},
													{
														"expression": {
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1993,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "51965:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1994,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "51975:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1995,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "51984:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1996,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "51988:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51984:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51975:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1999,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51974:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51974:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51965:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2003,
														"nodeType": "ExpressionStatement",
														"src": "51965:35:0"
													},
													{
														"expression": {
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2004,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "52014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2005,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "52024:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2006,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1915,
																					"src": "52033:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2007,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1928,
																					"src": "52037:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "52033:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52024:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2010,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52023:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52048:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "52023:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52014:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2014,
														"nodeType": "ExpressionStatement",
														"src": "52014:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2016,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "52074:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2017,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "52082:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2018,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "52086:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "52082:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2015,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "52070:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52070:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1919,
														"id": 2021,
														"nodeType": "Return",
														"src": "52063:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "50240:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "50477:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "50490:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "50482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50481:11:0"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "50516:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50515:9:0"
									},
									"scope": 2535,
									"src": "50468:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "52286:164:0",
										"statements": [
											{
												"id": 2057,
												"nodeType": "UncheckedBlock",
												"src": "52296:148:0",
												"statements": [
													{
														"assignments": [
															2036
														],
														"declarations": [
															{
																"constant": false,
																"id": 2036,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "52328:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2057,
																"src": "52320:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2035,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "52320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2040,
														"initialValue": {
															"arguments": [
																{
																	"id": 2038,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "52342:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2037,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2024,
																	2059
																],
																"referencedDeclaration": 2024,
																"src": "52337:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52337:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "52320:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2041,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "52365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2043,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2030,
																						"src": "52392:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2042,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "52375:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1492_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "52375:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2045,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2036,
																						"src": "52405:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2046,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2036,
																						"src": "52414:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "52405:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2048,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2027,
																					"src": "52423:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "52405:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "52375:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52431:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "52375:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52427:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "52374:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "52365:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2034,
														"id": 2056,
														"nodeType": "Return",
														"src": "52358:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "52116:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "52219:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52232:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "52224:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "52244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "52235:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2028,
														"name": "Rounding",
														"nameLocations": [
															"52235:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "52235:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "52235:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52223:30:0"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "52277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52276:9:0"
									},
									"scope": 2535,
									"src": "52210:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "52641:922:0",
										"statements": [
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "52659:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2190,
														"src": "52651:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"hexValue": "30",
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52668:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52651:18:0"
											},
											{
												"id": 2187,
												"nodeType": "UncheckedBlock",
												"src": "52679:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "52707:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52716:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "52707:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52707:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2085,
														"nodeType": "IfStatement",
														"src": "52703:99:0",
														"trueBody": {
															"id": 2084,
															"nodeType": "Block",
															"src": "52725:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2076,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "52743:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52753:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "52743:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ExpressionStatement",
																	"src": "52743:13:0"
																},
																{
																	"expression": {
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2080,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "52774:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52784:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "52774:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2083,
																	"nodeType": "ExpressionStatement",
																	"src": "52774:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2086,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "52819:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52828:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "52819:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52833:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52819:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2100,
														"nodeType": "IfStatement",
														"src": "52815:96:0",
														"trueBody": {
															"id": 2099,
															"nodeType": "Block",
															"src": "52836:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "52854:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52864:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "52854:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2094,
																	"nodeType": "ExpressionStatement",
																	"src": "52854:12:0"
																},
																{
																	"expression": {
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2095,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "52884:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52894:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "52884:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2098,
																	"nodeType": "ExpressionStatement",
																	"src": "52884:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2101,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "52928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "52928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "52924:96:0",
														"trueBody": {
															"id": 2114,
															"nodeType": "Block",
															"src": "52945:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2106,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "52963:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52973:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "52963:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "52963:12:0"
																},
																{
																	"expression": {
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2110,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "52993:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53003:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "52993:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2113,
																	"nodeType": "ExpressionStatement",
																	"src": "52993:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "53037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53046:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "53037:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53051:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53037:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2130,
														"nodeType": "IfStatement",
														"src": "53033:96:0",
														"trueBody": {
															"id": 2129,
															"nodeType": "Block",
															"src": "53054:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "53072:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53082:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "53072:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2124,
																	"nodeType": "ExpressionStatement",
																	"src": "53072:12:0"
																},
																{
																	"expression": {
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "53102:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53112:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "53102:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2128,
																	"nodeType": "ExpressionStatement",
																	"src": "53102:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "53146:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "53146:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53146:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2145,
														"nodeType": "IfStatement",
														"src": "53142:93:0",
														"trueBody": {
															"id": 2144,
															"nodeType": "Block",
															"src": "53162:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "53180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53190:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "53180:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2139,
																	"nodeType": "ExpressionStatement",
																	"src": "53180:11:0"
																},
																{
																	"expression": {
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "53209:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53219:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "53209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2143,
																	"nodeType": "ExpressionStatement",
																	"src": "53209:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "53252:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "53252:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53252:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2160,
														"nodeType": "IfStatement",
														"src": "53248:93:0",
														"trueBody": {
															"id": 2159,
															"nodeType": "Block",
															"src": "53268:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "53286:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53296:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "53286:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2154,
																	"nodeType": "ExpressionStatement",
																	"src": "53286:11:0"
																},
																{
																	"expression": {
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "53315:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53325:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "53315:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2158,
																	"nodeType": "ExpressionStatement",
																	"src": "53315:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "53358:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53367:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "53358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53358:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "53354:93:0",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "53374:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "53392:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53402:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "53392:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2169,
																	"nodeType": "ExpressionStatement",
																	"src": "53392:11:0"
																},
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "53421:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53431:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "53421:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "53421:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "53464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53473:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "53464:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53464:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2186,
														"nodeType": "IfStatement",
														"src": "53460:64:0",
														"trueBody": {
															"id": 2185,
															"nodeType": "Block",
															"src": "53480:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2068,
																			"src": "53498:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53508:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "53498:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2184,
																	"nodeType": "ExpressionStatement",
																	"src": "53498:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2188,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2068,
													"src": "53550:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2066,
												"id": 2189,
												"nodeType": "Return",
												"src": "53543:13:0"
											}
										]
									},
									"documentation": {
										"id": 2060,
										"nodeType": "StructuredDocumentation",
										"src": "52456:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "52589:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "52602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "52594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52593:15:0"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "52632:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52631:9:0"
									},
									"scope": 2535,
									"src": "52580:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "53796:168:0",
										"statements": [
											{
												"id": 2224,
												"nodeType": "UncheckedBlock",
												"src": "53806:152:0",
												"statements": [
													{
														"assignments": [
															2203
														],
														"declarations": [
															{
																"constant": false,
																"id": 2203,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "53838:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2224,
																"src": "53830:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2207,
														"initialValue": {
															"arguments": [
																{
																	"id": 2205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "53852:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2204,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2191,
																	2226
																],
																"referencedDeclaration": 2191,
																"src": "53847:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53847:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "53830:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "53879:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2210,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2197,
																						"src": "53906:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2209,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "53889:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1492_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "53889:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2212,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "53919:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2213,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2203,
																						"src": "53924:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "53919:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2215,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2194,
																					"src": "53933:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "53919:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "53889:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53945:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "53889:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53941:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "53888:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "53879:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2223,
														"nodeType": "Return",
														"src": "53872:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "53569:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "53725:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53738:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "53730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "53754:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "53745:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2195,
														"name": "Rounding",
														"nameLocations": [
															"53745:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "53745:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "53745:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53729:34:0"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "53787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53786:9:0"
									},
									"scope": 2535,
									"src": "53716:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "54157:854:0",
										"statements": [
											{
												"assignments": [
													2235
												],
												"declarations": [
													{
														"constant": false,
														"id": 2235,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "54175:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2354,
														"src": "54167:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "54167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"hexValue": "30",
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "54184:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54167:18:0"
											},
											{
												"id": 2351,
												"nodeType": "UncheckedBlock",
												"src": "54195:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2238,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54223:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54232:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54238:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "54232:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "54223:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2254,
														"nodeType": "IfStatement",
														"src": "54219:103:0",
														"trueBody": {
															"id": 2253,
															"nodeType": "Block",
															"src": "54242:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54269:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54275:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "54269:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "54260:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2248,
																	"nodeType": "ExpressionStatement",
																	"src": "54260:17:0"
																},
																{
																	"expression": {
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2249,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54295:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54305:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "54295:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2252,
																	"nodeType": "ExpressionStatement",
																	"src": "54295:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54348:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54354:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "54348:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "54339:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "54335:103:0",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "54358:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2260,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54376:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54385:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54391:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "54385:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "54376:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2265,
																	"nodeType": "ExpressionStatement",
																	"src": "54376:17:0"
																},
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54411:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54421:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "54411:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "54411:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54455:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54464:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54470:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "54464:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "54455:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2288,
														"nodeType": "IfStatement",
														"src": "54451:103:0",
														"trueBody": {
															"id": 2287,
															"nodeType": "Block",
															"src": "54474:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54492:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54501:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54507:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "54501:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "54492:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2282,
																	"nodeType": "ExpressionStatement",
																	"src": "54492:17:0"
																},
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54527:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54537:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "54527:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "54527:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54571:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54580:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "54580:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "54571:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2305,
														"nodeType": "IfStatement",
														"src": "54567:100:0",
														"trueBody": {
															"id": 2304,
															"nodeType": "Block",
															"src": "54589:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2294,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54607:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54616:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54622:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "54616:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "54607:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "54607:16:0"
																},
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2300,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54641:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54651:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "54641:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "54641:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2306,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54684:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "54693:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "54684:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2322,
														"nodeType": "IfStatement",
														"src": "54680:100:0",
														"trueBody": {
															"id": 2321,
															"nodeType": "Block",
															"src": "54702:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54720:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54729:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54735:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "54729:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "54720:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2316,
																	"nodeType": "ExpressionStatement",
																	"src": "54720:16:0"
																},
																{
																	"expression": {
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2317,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54754:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54764:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "54754:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2320,
																	"nodeType": "ExpressionStatement",
																	"src": "54754:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2323,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54797:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54806:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "54806:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "54797:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2339,
														"nodeType": "IfStatement",
														"src": "54793:100:0",
														"trueBody": {
															"id": 2338,
															"nodeType": "Block",
															"src": "54815:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2328,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "54833:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54842:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54848:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "54842:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "54833:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2333,
																	"nodeType": "ExpressionStatement",
																	"src": "54833:16:0"
																},
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54867:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54877:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "54867:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "54867:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2340,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "54910:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54919:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "54919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "54910:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2350,
														"nodeType": "IfStatement",
														"src": "54906:66:0",
														"trueBody": {
															"id": 2349,
															"nodeType": "Block",
															"src": "54928:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2345,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "54946:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54956:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "54946:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2348,
																	"nodeType": "ExpressionStatement",
																	"src": "54946:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2352,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2235,
													"src": "54998:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2233,
												"id": 2353,
												"nodeType": "Return",
												"src": "54991:13:0"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "53970:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "54104:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54118:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "54110:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54109:15:0"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "54148:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54147:9:0"
									},
									"scope": 2535,
									"src": "54095:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "55246:170:0",
										"statements": [
											{
												"id": 2388,
												"nodeType": "UncheckedBlock",
												"src": "55256:154:0",
												"statements": [
													{
														"assignments": [
															2367
														],
														"declarations": [
															{
																"constant": false,
																"id": 2367,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "55288:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2388,
																"src": "55280:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "55280:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2371,
														"initialValue": {
															"arguments": [
																{
																	"id": 2369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "55303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2368,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2355,
																	2390
																],
																"referencedDeclaration": 2355,
																"src": "55297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55297:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "55280:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2372,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "55330:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2374,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2361,
																						"src": "55357:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2373,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "55340:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1492_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "55340:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55370:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2377,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2367,
																						"src": "55376:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "55370:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2379,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2358,
																					"src": "55385:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "55370:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "55340:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55397:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "55340:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55393:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55339:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "55330:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2365,
														"id": 2387,
														"nodeType": "Return",
														"src": "55323:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "55017:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "55174:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "55188:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "55180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "55204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "55195:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2359,
														"name": "Rounding",
														"nameLocations": [
															"55195:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "55195:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "55195:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55179:34:0"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "55237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55236:9:0"
									},
									"scope": 2535,
									"src": "55165:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "55736:600:0",
										"statements": [
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "55754:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "55746:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2401,
												"initialValue": {
													"hexValue": "30",
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55763:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55746:18:0"
											},
											{
												"id": 2473,
												"nodeType": "UncheckedBlock",
												"src": "55774:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "55802:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55811:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "55802:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "55802:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2416,
														"nodeType": "IfStatement",
														"src": "55798:98:0",
														"trueBody": {
															"id": 2415,
															"nodeType": "Block",
															"src": "55820:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2393,
																			"src": "55838:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55848:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "55838:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2410,
																	"nodeType": "ExpressionStatement",
																	"src": "55838:13:0"
																},
																{
																	"expression": {
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "55869:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55879:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "55869:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2414,
																	"nodeType": "ExpressionStatement",
																	"src": "55869:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "55913:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55922:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "55913:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "55913:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2431,
														"nodeType": "IfStatement",
														"src": "55909:95:0",
														"trueBody": {
															"id": 2430,
															"nodeType": "Block",
															"src": "55930:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2422,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2393,
																			"src": "55948:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55958:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "55948:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2425,
																	"nodeType": "ExpressionStatement",
																	"src": "55948:12:0"
																},
																{
																	"expression": {
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "55978:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55988:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "55978:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2429,
																	"nodeType": "ExpressionStatement",
																	"src": "55978:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "56021:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56030:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "56021:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56035:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "56021:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2446,
														"nodeType": "IfStatement",
														"src": "56017:95:0",
														"trueBody": {
															"id": 2445,
															"nodeType": "Block",
															"src": "56038:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2393,
																			"src": "56056:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56066:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "56056:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2440,
																	"nodeType": "ExpressionStatement",
																	"src": "56056:12:0"
																},
																{
																	"expression": {
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "56086:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56096:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "56086:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2444,
																	"nodeType": "ExpressionStatement",
																	"src": "56086:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "56129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56138:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "56129:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "56129:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2461,
														"nodeType": "IfStatement",
														"src": "56125:95:0",
														"trueBody": {
															"id": 2460,
															"nodeType": "Block",
															"src": "56146:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2393,
																			"src": "56164:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56174:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "56164:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2455,
																	"nodeType": "ExpressionStatement",
																	"src": "56164:12:0"
																},
																{
																	"expression": {
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2456,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "56194:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56204:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "56194:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2459,
																	"nodeType": "ExpressionStatement",
																	"src": "56194:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2462,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "56237:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "56237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56250:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "56237:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2472,
														"nodeType": "IfStatement",
														"src": "56233:64:0",
														"trueBody": {
															"id": 2471,
															"nodeType": "Block",
															"src": "56253:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2467,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "56271:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56281:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "56271:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2470,
																	"nodeType": "ExpressionStatement",
																	"src": "56271:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2474,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2399,
													"src": "56323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2397,
												"id": 2475,
												"nodeType": "Return",
												"src": "56316:13:0"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "55422:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "55682:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "55697:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "55689:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55688:15:0"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "55727:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55726:9:0"
									},
									"scope": 2535,
									"src": "55673:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "56573:177:0",
										"statements": [
											{
												"id": 2513,
												"nodeType": "UncheckedBlock",
												"src": "56583:161:0",
												"statements": [
													{
														"assignments": [
															2489
														],
														"declarations": [
															{
																"constant": false,
																"id": 2489,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "56615:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2513,
																"src": "56607:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2488,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "56607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2493,
														"initialValue": {
															"arguments": [
																{
																	"id": 2491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "56631:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2477,
																	2515
																],
																"referencedDeclaration": 2477,
																"src": "56624:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56624:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "56607:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2494,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2489,
																"src": "56658:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2496,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2483,
																						"src": "56685:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1492",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2495,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "56668:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1492_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "56668:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2503,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2498,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "56698:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2501,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2499,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2489,
																									"src": "56704:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2500,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "56714:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "56704:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2502,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "56703:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "56698:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2504,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2480,
																					"src": "56719:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "56698:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "56668:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56731:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "56668:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56727:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56667:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "56658:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2487,
														"id": 2512,
														"nodeType": "Return",
														"src": "56651:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "56342:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "56500:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "56515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "56507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "56531:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "56522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2482,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2481,
														"name": "Rounding",
														"nameLocations": [
															"56522:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "56522:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "56522:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56506:34:0"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "56564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56563:9:0"
									},
									"scope": 2535,
									"src": "56491:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "56948:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2526,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "56971:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1492",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1492",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56965:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2524,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "56965:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56965:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "56965:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "56965:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2523,
												"id": 2532,
												"nodeType": "Return",
												"src": "56958:31:0"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "56756:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "56883:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "56909:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "56900:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1492",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2517,
														"name": "Rounding",
														"nameLocations": [
															"56900:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "56900:8:0"
													},
													"referencedDeclaration": 1492,
													"src": "56900:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1492",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56899:19:0"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "56942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56941:6:0"
									},
									"scope": 2535,
									"src": "56874:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "42084:14914:0",
							"usedErrors": [
								1487
							],
							"usedEvents": []
						},
						{
							"id": 2536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57138:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2537,
								"nodeType": "StructuredDocumentation",
								"src": "57164:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2639,
							"linearizedBaseContracts": [
								2639
							],
							"name": "SignedMath",
							"nameLocation": "57253:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2554,
										"nodeType": "Block",
										"src": "57405:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2547,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "57422:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2548,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2542,
															"src": "57426:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "57422:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2551,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "57434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "57422:13:0",
													"trueExpression": {
														"id": 2550,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "57430:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2546,
												"id": 2553,
												"nodeType": "Return",
												"src": "57415:20:0"
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "57270:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "57350:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "57361:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "57354:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2539,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "57371:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "57364:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57353:20:0"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "57397:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2544,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57396:8:0"
									},
									"scope": 2639,
									"src": "57341:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2572,
										"nodeType": "Block",
										"src": "57584:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2565,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "57601:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2566,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2560,
															"src": "57605:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "57601:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2569,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2560,
														"src": "57613:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "57601:13:0",
													"trueExpression": {
														"id": 2568,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "57609:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2564,
												"id": 2571,
												"nodeType": "Return",
												"src": "57594:20:0"
											}
										]
									},
									"documentation": {
										"id": 2556,
										"nodeType": "StructuredDocumentation",
										"src": "57448:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "57529:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "57540:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "57533:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2557,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57533:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "57550:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "57543:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2559,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57532:20:0"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "57576:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2562,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57576:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57575:8:0"
									},
									"scope": 2639,
									"src": "57520:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "57826:162:0",
										"statements": [
											{
												"assignments": [
													2584
												],
												"declarations": [
													{
														"constant": false,
														"id": 2584,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "57895:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "57888:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2583,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "57888:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2597,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2585,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "57900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2586,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "57904:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "57900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2588,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "57899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2589,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2576,
																				"src": "57911:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2590,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2578,
																				"src": "57915:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "57911:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2592,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57910:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "57910:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2595,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "57909:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "57899:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57888:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2598,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "57940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2603,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2584,
																						"src": "57960:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2602,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "57952:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2601,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "57952:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "57952:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "57966:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "57952:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "57945:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2599,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "57945:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57945:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2608,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2576,
																				"src": "57974:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2609,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2578,
																				"src": "57978:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "57974:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2611,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57973:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "57945:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2613,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "57944:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "57940:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2582,
												"id": 2615,
												"nodeType": "Return",
												"src": "57933:48:0"
											}
										]
									},
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "57627:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "57767:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "57782:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "57775:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57775:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "57792:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "57785:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2577,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57785:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57774:20:0"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "57818:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57818:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57817:8:0"
									},
									"scope": 2639,
									"src": "57758:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "58132:158:0",
										"statements": [
											{
												"id": 2636,
												"nodeType": "UncheckedBlock",
												"src": "58142:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2627,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "58257:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "58262:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "58257:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "58270:2:0",
																		"subExpression": {
																			"id": 2631,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "58271:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "58257:15:0",
																	"trueExpression": {
																		"id": 2630,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "58266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "58249:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58249:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2624,
														"id": 2635,
														"nodeType": "Return",
														"src": "58242:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "57994:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "58086:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "58097:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "58090:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2619,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "58090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58089:10:0"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "58123:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58122:9:0"
									},
									"scope": 2639,
									"src": "58077:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "57245:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58416:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2641,
								"nodeType": "StructuredDocumentation",
								"src": "58444:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2889,
							"linearizedBaseContracts": [
								2889
							],
							"name": "Strings",
							"nameLocation": "58487:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2644,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "58526:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "58501:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2642,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "58501:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2643,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "58539:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2647,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "58586:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "58563:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2645,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "58563:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2646,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "58603:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "58612:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2654,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "58704:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "58741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "58733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "58756:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "58748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58732:31:0"
									},
									"src": "58698:66:0"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "58936:627:0",
										"statements": [
											{
												"id": 2700,
												"nodeType": "UncheckedBlock",
												"src": "58946:611:0",
												"statements": [
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "58978:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2700,
																"src": "58970:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "58970:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2670,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2666,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "58998:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2664,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2535,
																		"src": "58987:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2535_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "58992:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2355,
																	"src": "58987:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58987:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "58987:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "58970:38:0"
													},
													{
														"assignments": [
															2672
														],
														"declarations": [
															{
																"constant": false,
																"id": 2672,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "59036:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2700,
																"src": "59022:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2671,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "59022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2677,
														"initialValue": {
															"arguments": [
																{
																	"id": 2675,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2663,
																	"src": "59056:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "59045:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2673,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "59049:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59045:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "59022:41:0"
													},
													{
														"assignments": [
															2679
														],
														"declarations": [
															{
																"constant": false,
																"id": 2679,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "59085:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 2700,
																"src": "59077:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2678,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "59077:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2680,
														"nodeType": "VariableDeclarationStatement",
														"src": "59077:11:0"
													},
													{
														"AST": {
															"nativeSrc": "59158:67:0",
															"nodeType": "YulBlock",
															"src": "59158:67:0",
															"statements": [
																{
																	"nativeSrc": "59176:35:0",
																	"nodeType": "YulAssignment",
																	"src": "59176:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "59187:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "59187:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "59199:2:0",
																						"nodeType": "YulLiteral",
																						"src": "59199:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "59203:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "59203:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "59195:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "59195:3:0"
																				},
																				"nativeSrc": "59195:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "59195:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "59183:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59183:3:0"
																		},
																		"nativeSrc": "59183:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "59183:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "59176:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59176:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2672,
																"isOffset": false,
																"isSlot": false,
																"src": "59187:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2663,
																"isOffset": false,
																"isSlot": false,
																"src": "59203:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2679,
																"isOffset": false,
																"isSlot": false,
																"src": "59176:3:0",
																"valueSize": 1
															}
														],
														"id": 2681,
														"nodeType": "InlineAssembly",
														"src": "59149:76:0"
													},
													{
														"body": {
															"id": 2696,
															"nodeType": "Block",
															"src": "59251:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "59269:5:0",
																		"subExpression": {
																			"id": 2683,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2679,
																			"src": "59269:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "59269:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "59352:86:0",
																		"nodeType": "YulBlock",
																		"src": "59352:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "59382:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "59382:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "59396:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "59396:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "59403:2:0",
																											"nodeType": "YulLiteral",
																											"src": "59403:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "59392:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "59392:3:0"
																									},
																									"nativeSrc": "59392:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "59392:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "59408:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "59408:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "59387:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "59387:4:0"
																							},
																							"nativeSrc": "59387:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "59387:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "59374:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "59374:7:0"
																					},
																					"nativeSrc": "59374:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "59374:46:0"
																				},
																				"nativeSrc": "59374:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "59374:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2644,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "59408:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2679,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "59382:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2657,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "59396:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 2686,
																	"nodeType": "InlineAssembly",
																	"src": "59343:95:0"
																},
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "59455:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "59464:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "59455:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "59455:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "59488:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "59497:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "59488:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2695,
																	"nodeType": "IfStatement",
																	"src": "59484:21:0",
																	"trueBody": {
																		"id": 2694,
																		"nodeType": "Break",
																		"src": "59500:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59245:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2697,
														"nodeType": "WhileStatement",
														"src": "59238:282:0"
													},
													{
														"expression": {
															"id": 2698,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2672,
															"src": "59540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2661,
														"id": 2699,
														"nodeType": "Return",
														"src": "59533:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "58770:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "58874:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "58891:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "58883:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58882:15:0"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "58921:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58921:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58920:15:0"
									},
									"scope": 2889,
									"src": "58865:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "59739:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "59770:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "59770:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59788:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "59770:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59782:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2722,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "59816:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2720,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "59801:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2639_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "59812:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2638,
																		"src": "59801:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59801:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2719,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2702,
																"src": "59792:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59792:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "59756:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2710,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "59756:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59763:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "59756:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59756:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2726,
												"nodeType": "Return",
												"src": "59749:75:0"
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "59569:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "59672:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "59694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "59687:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2704,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "59687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59686:14:0"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "59724:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59723:15:0"
									},
									"scope": 2889,
									"src": "59663:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "60010:100:0",
										"statements": [
											{
												"id": 2746,
												"nodeType": "UncheckedBlock",
												"src": "60020:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "60063:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2740,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2731,
																				"src": "60082:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2738,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2535,
																				"src": "60070:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2535_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "60075:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2477,
																			"src": "60070:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60070:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "60091:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "60070:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2736,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2748,
																	2831,
																	2851
																],
																"referencedDeclaration": 2831,
																"src": "60051:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60051:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2735,
														"id": 2745,
														"nodeType": "Return",
														"src": "60044:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "59837:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "59945:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "59965:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "59957:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59956:15:0"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "59995:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2733,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59994:15:0"
									},
									"scope": 2889,
									"src": "59936:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2830,
										"nodeType": "Block",
										"src": "60323:435:0",
										"statements": [
											{
												"assignments": [
													2759
												],
												"declarations": [
													{
														"constant": false,
														"id": 2759,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "60341:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2830,
														"src": "60333:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2761,
												"initialValue": {
													"id": 2760,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2751,
													"src": "60354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60333:26:0"
											},
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "60382:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2830,
														"src": "60369:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2762,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "60369:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2772,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60401:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2767,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2753,
																	"src": "60405:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60401:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60414:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "60401:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "60391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "60395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60391:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60369:47:0"
											},
											{
												"expression": {
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2773,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "60426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2775,
														"indexExpression": {
															"hexValue": "30",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60433:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60426:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60438:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "60426:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "60426:15:0"
											},
											{
												"expression": {
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2779,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "60451:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2781,
														"indexExpression": {
															"hexValue": "31",
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60451:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60463:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "60451:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2784,
												"nodeType": "ExpressionStatement",
												"src": "60451:15:0"
											},
											{
												"body": {
													"id": 2813,
													"nodeType": "Block",
													"src": "60521:95:0",
													"statements": [
														{
															"expression": {
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2799,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2763,
																		"src": "60535:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2801,
																	"indexExpression": {
																		"id": 2800,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2786,
																		"src": "60542:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "60535:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2802,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "60547:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2806,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2803,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "60558:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "60571:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "60558:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "60547:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "60535:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2808,
															"nodeType": "ExpressionStatement",
															"src": "60535:40:0"
														},
														{
															"expression": {
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2809,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "60589:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60604:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "60589:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2812,
															"nodeType": "ExpressionStatement",
															"src": "60589:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2793,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2786,
														"src": "60509:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60513:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "60509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2814,
												"initializationExpression": {
													"assignments": [
														2786
													],
													"declarations": [
														{
															"constant": false,
															"id": 2786,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "60489:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2814,
															"src": "60481:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2785,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "60481:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2792,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60493:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2788,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2753,
																"src": "60497:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60493:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60506:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "60493:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "60481:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "60516:3:0",
														"subExpression": {
															"id": 2796,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "60518:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2798,
													"nodeType": "ExpressionStatement",
													"src": "60516:3:0"
												},
												"nodeType": "ForStatement",
												"src": "60476:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2815,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "60629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "60629:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2824,
												"nodeType": "IfStatement",
												"src": "60625:96:0",
												"trueBody": {
													"id": 2823,
													"nodeType": "Block",
													"src": "60646:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2819,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2751,
																		"src": "60696:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2820,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2753,
																		"src": "60703:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2818,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "60667:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60667:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2822,
															"nodeType": "RevertStatement",
															"src": "60660:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2827,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "60744:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "60737:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2825,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "60737:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60737:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2757,
												"id": 2829,
												"nodeType": "Return",
												"src": "60730:21:0"
											}
										]
									},
									"documentation": {
										"id": 2749,
										"nodeType": "StructuredDocumentation",
										"src": "60116:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "60242:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "60262:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "60254:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "60277:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "60269:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60253:31:0"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "60308:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2755,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "60308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60307:15:0"
									},
									"scope": 2889,
									"src": "60233:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "60990:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2844,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "61035:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2842,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "61027:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61027:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "61019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "61019:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61019:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2847,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "61043:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2839,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2748,
															2831,
															2851
														],
														"referencedDeclaration": 2831,
														"src": "61007:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61007:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2838,
												"id": 2849,
												"nodeType": "Return",
												"src": "61000:58:0"
											}
										]
									},
									"documentation": {
										"id": 2832,
										"nodeType": "StructuredDocumentation",
										"src": "60764:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "60926:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "60946:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "60938:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60937:14:0"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "60975:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "60975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60974:15:0"
									},
									"scope": 2889,
									"src": "60917:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2887,
										"nodeType": "Block",
										"src": "61220:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2863,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2854,
																		"src": "61243:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "61237:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2861,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "61237:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61237:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61246:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "61237:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2868,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2856,
																		"src": "61262:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "61256:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2866,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "61256:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61256:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61265:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "61256:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "61237:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2875,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "61291:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61285:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2873,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "61285:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61285:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2872,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "61275:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61275:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2881,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "61314:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61308:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2879,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "61308:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61308:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2878,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "61298:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61298:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "61275:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "61237:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2860,
												"id": 2886,
												"nodeType": "Return",
												"src": "61230:87:0"
											}
										]
									},
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "61071:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "61151:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "61171:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "61157:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "61188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "61174:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61156:34:0"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "61214:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "61214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61213:6:0"
									},
									"scope": 2889,
									"src": "61142:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "58479:2847:0",
							"usedErrors": [
								2654
							],
							"usedEvents": []
						},
						{
							"id": 2890,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "61494:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2891,
								"nodeType": "StructuredDocumentation",
								"src": "61521:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2960,
							"linearizedBaseContracts": [
								2960
							],
							"name": "MessageHashUtils",
							"nameLocation": "61860:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "62645:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62707:300:0",
													"nodeType": "YulBlock",
													"src": "62707:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "62728:4:0",
																		"nodeType": "YulLiteral",
																		"src": "62728:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "62734:34:0",
																		"nodeType": "YulLiteral",
																		"src": "62734:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "62721:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62721:6:0"
																},
																"nativeSrc": "62721:48:0",
																"nodeType": "YulFunctionCall",
																"src": "62721:48:0"
															},
															"nativeSrc": "62721:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "62721:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "62830:4:0",
																		"nodeType": "YulLiteral",
																		"src": "62830:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "62836:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "62836:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "62823:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62823:6:0"
																},
																"nativeSrc": "62823:25:0",
																"nodeType": "YulFunctionCall",
																"src": "62823:25:0"
															},
															"nativeSrc": "62823:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "62823:25:0"
														},
														{
															"nativeSrc": "62902:31:0",
															"nodeType": "YulAssignment",
															"src": "62902:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "62922:4:0",
																		"nodeType": "YulLiteral",
																		"src": "62922:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "62928:4:0",
																		"nodeType": "YulLiteral",
																		"src": "62928:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "62912:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "62912:9:0"
																},
																"nativeSrc": "62912:21:0",
																"nodeType": "YulFunctionCall",
																"src": "62912:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "62902:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62902:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2897,
														"isOffset": false,
														"isSlot": false,
														"src": "62902:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2894,
														"isOffset": false,
														"isSlot": false,
														"src": "62836:11:0",
														"valueSize": 1
													}
												],
												"id": 2899,
												"nodeType": "InlineAssembly",
												"src": "62698:309:0"
											}
										]
									},
									"documentation": {
										"id": 2892,
										"nodeType": "StructuredDocumentation",
										"src": "61883:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "62562:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "62593:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "62585:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2893,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62584:21:0"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "62637:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "62629:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62628:16:0"
									},
									"scope": 2960,
									"src": "62553:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "63565:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "63617:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2918,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2904,
																						"src": "63674:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "63682:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "63674:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2916,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2889,
																					"src": "63657:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$2889_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "63665:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2702,
																				"src": "63657:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63657:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "63651:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2914,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "63651:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "63651:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2922,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "63692:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "63604:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2910,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "63604:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "63610:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "63604:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "63604:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2909,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "63594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63594:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2908,
												"id": 2925,
												"nodeType": "Return",
												"src": "63575:126:0"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "63019:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "63488:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "63524:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "63511:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "63511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63510:22:0"
									},
									"returnParameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "63556:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "63556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63555:9:0"
									},
									"scope": 2960,
									"src": "63479:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "64162:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "64206:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2941,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2930,
																	"src": "64218:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2942,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "64229:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2938,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "64189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "64193:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "64189:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "64189:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2937,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "64179:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64179:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2936,
												"id": 2945,
												"nodeType": "Return",
												"src": "64172:63:0"
											}
										]
									},
									"documentation": {
										"id": 2928,
										"nodeType": "StructuredDocumentation",
										"src": "63714:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "64060:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "64100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "64092:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "64124:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "64111:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "64111:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64091:38:0"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "64153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2934,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64152:9:0"
									},
									"scope": 2960,
									"src": "64051:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "64793:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "64855:224:0",
													"nodeType": "YulBlock",
													"src": "64855:224:0",
													"statements": [
														{
															"nativeSrc": "64869:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "64869:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "64886:4:0",
																		"nodeType": "YulLiteral",
																		"src": "64886:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "64880:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "64880:5:0"
																},
																"nativeSrc": "64880:11:0",
																"nodeType": "YulFunctionCall",
																"src": "64880:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "64873:3:0",
																	"nodeType": "YulTypedName",
																	"src": "64873:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "64911:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "64911:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "64916:10:0",
																		"nodeType": "YulLiteral",
																		"src": "64916:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "64904:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "64904:6:0"
																},
																"nativeSrc": "64904:23:0",
																"nodeType": "YulFunctionCall",
																"src": "64904:23:0"
															},
															"nativeSrc": "64904:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "64904:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "64951:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "64951:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "64956:4:0",
																				"nodeType": "YulLiteral",
																				"src": "64956:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "64947:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "64947:3:0"
																		},
																		"nativeSrc": "64947:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "64947:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "64963:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "64963:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "64940:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "64940:6:0"
																},
																"nativeSrc": "64940:39:0",
																"nodeType": "YulFunctionCall",
																"src": "64940:39:0"
															},
															"nativeSrc": "64940:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "64940:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "65003:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "65003:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "65008:4:0",
																				"nodeType": "YulLiteral",
																				"src": "65008:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "64999:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "64999:3:0"
																		},
																		"nativeSrc": "64999:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "64999:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "65015:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "65015:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "64992:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "64992:6:0"
																},
																"nativeSrc": "64992:34:0",
																"nodeType": "YulFunctionCall",
																"src": "64992:34:0"
															},
															"nativeSrc": "64992:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "64992:34:0"
														},
														{
															"nativeSrc": "65039:30:0",
															"nodeType": "YulAssignment",
															"src": "65039:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "65059:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "65059:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "65064:4:0",
																		"nodeType": "YulLiteral",
																		"src": "65064:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "65049:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "65049:9:0"
																},
																"nativeSrc": "65049:20:0",
																"nodeType": "YulFunctionCall",
																"src": "65049:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "65039:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "65039:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2955,
														"isOffset": false,
														"isSlot": false,
														"src": "65039:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2950,
														"isOffset": false,
														"isSlot": false,
														"src": "64963:15:0",
														"valueSize": 1
													},
													{
														"declaration": 2952,
														"isOffset": false,
														"isSlot": false,
														"src": "65015:10:0",
														"valueSize": 1
													}
												],
												"id": 2957,
												"nodeType": "InlineAssembly",
												"src": "64846:233:0"
											}
										]
									},
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "64248:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "64693:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "64717:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "64709:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "64742:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "64734:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64708:45:0"
									},
									"returnParameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "64785:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "64777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64776:16:0"
									},
									"scope": 2960,
									"src": "64684:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "61852:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2961,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "65307:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2962,
								"nodeType": "StructuredDocumentation",
								"src": "65333:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 3069,
							"linearizedBaseContracts": [
								3069
							],
							"name": "StorageSlot",
							"nameLocation": "66367:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2965,
									"members": [
										{
											"constant": false,
											"id": 2964,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66422:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2965,
											"src": "66414:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2963,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "66414:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "66392:11:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66385:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2968,
									"members": [
										{
											"constant": false,
											"id": 2967,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66474:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2968,
											"src": "66469:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2966,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "66469:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "66447:11:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66440:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2971,
									"members": [
										{
											"constant": false,
											"id": 2970,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66529:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2971,
											"src": "66521:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2969,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "66521:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "66499:11:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66492:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2974,
									"members": [
										{
											"constant": false,
											"id": 2973,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66584:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2974,
											"src": "66576:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2972,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66576:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "66554:11:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66547:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2977,
									"members": [
										{
											"constant": false,
											"id": 2976,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66637:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2977,
											"src": "66630:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2975,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "66630:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "66609:10:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66602:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2980,
									"members": [
										{
											"constant": false,
											"id": 2979,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "66688:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2980,
											"src": "66682:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2978,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "66682:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "66662:9:0",
									"nodeType": "StructDefinition",
									"scope": 3069,
									"src": "66655:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2990,
										"nodeType": "Block",
										"src": "66882:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "66944:38:0",
													"nodeType": "YulBlock",
													"src": "66944:38:0",
													"statements": [
														{
															"nativeSrc": "66958:14:0",
															"nodeType": "YulAssignment",
															"src": "66958:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "66968:4:0",
																"nodeType": "YulIdentifier",
																"src": "66968:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "66958:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "66958:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2987,
														"isOffset": false,
														"isSlot": true,
														"src": "66958:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2983,
														"isOffset": false,
														"isSlot": false,
														"src": "66968:4:0",
														"valueSize": 1
													}
												],
												"id": 2989,
												"nodeType": "InlineAssembly",
												"src": "66935:47:0"
											}
										]
									},
									"documentation": {
										"id": 2981,
										"nodeType": "StructuredDocumentation",
										"src": "66706:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "66807:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "66830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "66822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "66822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66821:14:0"
									},
									"returnParameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "66879:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "66859:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2965_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2985,
														"name": "AddressSlot",
														"nameLocations": [
															"66859:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2965,
														"src": "66859:11:0"
													},
													"referencedDeclaration": 2965,
													"src": "66859:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2965_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66858:23:0"
									},
									"scope": 3069,
									"src": "66798:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "67170:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "67232:38:0",
													"nodeType": "YulBlock",
													"src": "67232:38:0",
													"statements": [
														{
															"nativeSrc": "67246:14:0",
															"nodeType": "YulAssignment",
															"src": "67246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "67256:4:0",
																"nodeType": "YulIdentifier",
																"src": "67256:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "67246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "67246:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2998,
														"isOffset": false,
														"isSlot": true,
														"src": "67246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2994,
														"isOffset": false,
														"isSlot": false,
														"src": "67256:4:0",
														"valueSize": 1
													}
												],
												"id": 3000,
												"nodeType": "InlineAssembly",
												"src": "67223:47:0"
											}
										]
									},
									"documentation": {
										"id": 2992,
										"nodeType": "StructuredDocumentation",
										"src": "66994:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "67095:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "67118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "67110:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2993,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "67110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67109:14:0"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "67167:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "67147:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2968_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2997,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2996,
														"name": "BooleanSlot",
														"nameLocations": [
															"67147:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2968,
														"src": "67147:11:0"
													},
													"referencedDeclaration": 2968,
													"src": "67147:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2968_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67146:23:0"
									},
									"scope": 3069,
									"src": "67086:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3012,
										"nodeType": "Block",
										"src": "67458:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "67520:38:0",
													"nodeType": "YulBlock",
													"src": "67520:38:0",
													"statements": [
														{
															"nativeSrc": "67534:14:0",
															"nodeType": "YulAssignment",
															"src": "67534:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "67544:4:0",
																"nodeType": "YulIdentifier",
																"src": "67544:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "67534:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "67534:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3009,
														"isOffset": false,
														"isSlot": true,
														"src": "67534:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3005,
														"isOffset": false,
														"isSlot": false,
														"src": "67544:4:0",
														"valueSize": 1
													}
												],
												"id": 3011,
												"nodeType": "InlineAssembly",
												"src": "67511:47:0"
											}
										]
									},
									"documentation": {
										"id": 3003,
										"nodeType": "StructuredDocumentation",
										"src": "67282:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 3013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "67383:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "67406:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "67398:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "67398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67397:14:0"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "67455:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "67435:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2971_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 3008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3007,
														"name": "Bytes32Slot",
														"nameLocations": [
															"67435:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2971,
														"src": "67435:11:0"
													},
													"referencedDeclaration": 2971,
													"src": "67435:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2971_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67434:23:0"
									},
									"scope": 3069,
									"src": "67374:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "67746:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "67808:38:0",
													"nodeType": "YulBlock",
													"src": "67808:38:0",
													"statements": [
														{
															"nativeSrc": "67822:14:0",
															"nodeType": "YulAssignment",
															"src": "67822:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "67832:4:0",
																"nodeType": "YulIdentifier",
																"src": "67832:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "67822:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "67822:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3020,
														"isOffset": false,
														"isSlot": true,
														"src": "67822:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3016,
														"isOffset": false,
														"isSlot": false,
														"src": "67832:4:0",
														"valueSize": 1
													}
												],
												"id": 3022,
												"nodeType": "InlineAssembly",
												"src": "67799:47:0"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "67570:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 3024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "67671:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "67694:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "67686:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3015,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "67686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67685:14:0"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "67743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "67723:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2974_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 3019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3018,
														"name": "Uint256Slot",
														"nameLocations": [
															"67723:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2974,
														"src": "67723:11:0"
													},
													"referencedDeclaration": 2974,
													"src": "67723:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2974_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67722:23:0"
									},
									"scope": 3069,
									"src": "67662:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3034,
										"nodeType": "Block",
										"src": "68031:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "68093:38:0",
													"nodeType": "YulBlock",
													"src": "68093:38:0",
													"statements": [
														{
															"nativeSrc": "68107:14:0",
															"nodeType": "YulAssignment",
															"src": "68107:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "68117:4:0",
																"nodeType": "YulIdentifier",
																"src": "68117:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "68107:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "68107:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3031,
														"isOffset": false,
														"isSlot": true,
														"src": "68107:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3027,
														"isOffset": false,
														"isSlot": false,
														"src": "68117:4:0",
														"valueSize": 1
													}
												],
												"id": 3033,
												"nodeType": "InlineAssembly",
												"src": "68084:47:0"
											}
										]
									},
									"documentation": {
										"id": 3025,
										"nodeType": "StructuredDocumentation",
										"src": "67858:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 3035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "67958:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "67980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "67972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "67972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67971:14:0"
									},
									"returnParameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "68028:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "68009:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2977_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 3030,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3029,
														"name": "StringSlot",
														"nameLocations": [
															"68009:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "68009:10:0"
													},
													"referencedDeclaration": 2977,
													"src": "68009:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2977_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68008:22:0"
									},
									"scope": 3069,
									"src": "67949:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "68339:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "68401:44:0",
													"nodeType": "YulBlock",
													"src": "68401:44:0",
													"statements": [
														{
															"nativeSrc": "68415:20:0",
															"nodeType": "YulAssignment",
															"src": "68415:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "68425:10:0",
																"nodeType": "YulIdentifier",
																"src": "68425:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "68415:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "68415:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3042,
														"isOffset": false,
														"isSlot": true,
														"src": "68415:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3038,
														"isOffset": false,
														"isSlot": true,
														"src": "68425:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 3044,
												"nodeType": "InlineAssembly",
												"src": "68392:53:0"
											}
										]
									},
									"documentation": {
										"id": 3036,
										"nodeType": "StructuredDocumentation",
										"src": "68143:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "68258:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "68287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "68272:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3037,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68271:22:0"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "68336:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "68317:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2977_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 3041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3040,
														"name": "StringSlot",
														"nameLocations": [
															"68317:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "68317:10:0"
													},
													"referencedDeclaration": 2977,
													"src": "68317:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2977_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68316:22:0"
									},
									"scope": 3069,
									"src": "68249:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3056,
										"nodeType": "Block",
										"src": "68627:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "68689:38:0",
													"nodeType": "YulBlock",
													"src": "68689:38:0",
													"statements": [
														{
															"nativeSrc": "68703:14:0",
															"nodeType": "YulAssignment",
															"src": "68703:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "68713:4:0",
																"nodeType": "YulIdentifier",
																"src": "68713:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "68703:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "68703:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3053,
														"isOffset": false,
														"isSlot": true,
														"src": "68703:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3049,
														"isOffset": false,
														"isSlot": false,
														"src": "68713:4:0",
														"valueSize": 1
													}
												],
												"id": 3055,
												"nodeType": "InlineAssembly",
												"src": "68680:47:0"
											}
										]
									},
									"documentation": {
										"id": 3047,
										"nodeType": "StructuredDocumentation",
										"src": "68457:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 3057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "68556:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "68577:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "68569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3048,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "68569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68568:14:0"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "68624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "68606:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2980_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 3052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3051,
														"name": "BytesSlot",
														"nameLocations": [
															"68606:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "68606:9:0"
													},
													"referencedDeclaration": 2980,
													"src": "68606:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2980_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68605:21:0"
									},
									"scope": 3069,
									"src": "68547:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "68930:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "68992:44:0",
													"nodeType": "YulBlock",
													"src": "68992:44:0",
													"statements": [
														{
															"nativeSrc": "69006:20:0",
															"nodeType": "YulAssignment",
															"src": "69006:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "69016:10:0",
																"nodeType": "YulIdentifier",
																"src": "69016:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "69006:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "69006:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3064,
														"isOffset": false,
														"isSlot": true,
														"src": "69006:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3060,
														"isOffset": false,
														"isSlot": true,
														"src": "69016:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 3066,
												"nodeType": "InlineAssembly",
												"src": "68983:53:0"
											}
										]
									},
									"documentation": {
										"id": 3058,
										"nodeType": "StructuredDocumentation",
										"src": "68739:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "68852:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "68879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "68865:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "68865:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68864:21:0"
									},
									"returnParameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "68927:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "68909:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2980_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 3063,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3062,
														"name": "BytesSlot",
														"nameLocations": [
															"68909:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "68909:9:0"
													},
													"referencedDeclaration": 2980,
													"src": "68909:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2980_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68908:21:0"
									},
									"scope": 3069,
									"src": "68843:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "66359:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 3070,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "69178:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 3072,
							"name": "ShortString",
							"nameLocation": "69378:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "69373:28:0",
							"underlyingType": {
								"id": 3071,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "69393:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3073,
								"nodeType": "StructuredDocumentation",
								"src": "69403:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 3283,
							"linearizedBaseContracts": [
								3283
							],
							"name": "ShortStrings",
							"nameLocation": "70288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3076,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "70395:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3283,
									"src": "70370:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3074,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "70370:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 3075,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "70415:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 3080,
									"name": "StringTooLong",
									"nameLocation": "70494:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "70515:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "70508:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70507:12:0"
									},
									"src": "70488:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 3082,
									"name": "InvalidShortString",
									"nameLocation": "70531:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70549:2:0"
									},
									"src": "70525:27:0"
								},
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "70811:208:0",
										"statements": [
											{
												"assignments": [
													3092
												],
												"declarations": [
													{
														"constant": false,
														"id": 3092,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "70834:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3125,
														"src": "70821:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3091,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "70821:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3097,
												"initialValue": {
													"arguments": [
														{
															"id": 3095,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "70847:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "70841:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 3093,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "70841:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70841:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70821:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3098,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "70865:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "70870:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "70865:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 3100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70879:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "70865:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3107,
												"nodeType": "IfStatement",
												"src": "70861:72:0",
												"trueBody": {
													"id": 3106,
													"nodeType": "Block",
													"src": "70883:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3103,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3085,
																		"src": "70918:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3102,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3080,
																	"src": "70904:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70904:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3105,
															"nodeType": "RevertStatement",
															"src": "70897:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 3116,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3092,
																						"src": "70990:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 3115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "70982:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 3114,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "70982:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "70982:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "70974:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 3112,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "70974:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70974:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 3119,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3092,
																			"src": "70999:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "71004:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "70999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "70974:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "70966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3110,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "70966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "70966:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3108,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3072,
															"src": "70949:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$3072_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 3109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "70961:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "70949:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3072_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70949:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 3090,
												"id": 3124,
												"nodeType": "Return",
												"src": "70942:70:0"
											}
										]
									},
									"documentation": {
										"id": 3083,
										"nodeType": "StructuredDocumentation",
										"src": "70558:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "70742:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "70770:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "70756:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70756:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70755:19:0"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "70798:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "ShortString",
														"nameLocations": [
															"70798:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "70798:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "70798:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70797:13:0"
									},
									"scope": 3283,
									"src": "70733:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "71177:331:0",
										"statements": [
											{
												"assignments": [
													3136
												],
												"declarations": [
													{
														"constant": false,
														"id": 3136,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "71195:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3151,
														"src": "71187:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "71187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3140,
												"initialValue": {
													"arguments": [
														{
															"id": 3138,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "71212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																"typeString": "ShortString"
															}
														],
														"id": 3137,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3184,
														"src": "71201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71201:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "71187:30:0"
											},
											{
												"assignments": [
													3142
												],
												"declarations": [
													{
														"constant": false,
														"id": 3142,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "71319:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3151,
														"src": "71305:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3141,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "71305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3147,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 3144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "71325:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 3143,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "71329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71325:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "71305:34:0"
											},
											{
												"AST": {
													"nativeSrc": "71401:81:0",
													"nodeType": "YulBlock",
													"src": "71401:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "71422:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "71422:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "71427:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "71427:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "71415:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "71415:6:0"
																},
																"nativeSrc": "71415:16:0",
																"nodeType": "YulFunctionCall",
																"src": "71415:16:0"
															},
															"nativeSrc": "71415:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "71415:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "71455:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "71455:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "71460:4:0",
																				"nodeType": "YulLiteral",
																				"src": "71460:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "71451:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "71451:3:0"
																		},
																		"nativeSrc": "71451:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "71451:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "71467:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "71467:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "71444:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "71444:6:0"
																},
																"nativeSrc": "71444:28:0",
																"nodeType": "YulFunctionCall",
																"src": "71444:28:0"
															},
															"nativeSrc": "71444:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "71444:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3136,
														"isOffset": false,
														"isSlot": false,
														"src": "71427:3:0",
														"valueSize": 1
													},
													{
														"declaration": 3130,
														"isOffset": false,
														"isSlot": false,
														"src": "71467:4:0",
														"valueSize": 1
													},
													{
														"declaration": 3142,
														"isOffset": false,
														"isSlot": false,
														"src": "71422:3:0",
														"valueSize": 1
													},
													{
														"declaration": 3142,
														"isOffset": false,
														"isSlot": false,
														"src": "71455:3:0",
														"valueSize": 1
													}
												],
												"id": 3148,
												"nodeType": "InlineAssembly",
												"src": "71392:90:0"
											},
											{
												"expression": {
													"id": 3149,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3142,
													"src": "71498:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3134,
												"id": 3150,
												"nodeType": "Return",
												"src": "71491:10:0"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "71025:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "71112:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "71133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "71121:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3128,
														"name": "ShortString",
														"nameLocations": [
															"71121:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "71121:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "71121:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71120:18:0"
									},
									"returnParameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "71162:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "71162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71161:15:0"
									},
									"scope": 3283,
									"src": "71103:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3183,
										"nodeType": "Block",
										"src": "71650:175:0",
										"statements": [
											{
												"assignments": [
													3162
												],
												"declarations": [
													{
														"constant": false,
														"id": 3162,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "71668:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3183,
														"src": "71660:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "71660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3172,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3167,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3156,
																		"src": "71704:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 3165,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3072,
																		"src": "71685:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$3072_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "71697:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "71685:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71685:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3163,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "71677:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71677:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 3170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "71713:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "71677:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "71660:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3173,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3162,
														"src": "71731:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "71740:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "71731:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3180,
												"nodeType": "IfStatement",
												"src": "71727:69:0",
												"trueBody": {
													"id": 3179,
													"nodeType": "Block",
													"src": "71744:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3176,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3082,
																	"src": "71765:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71765:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3178,
															"nodeType": "RevertStatement",
															"src": "71758:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3181,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3162,
													"src": "71812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3160,
												"id": 3182,
												"nodeType": "Return",
												"src": "71805:13:0"
											}
										]
									},
									"documentation": {
										"id": 3153,
										"nodeType": "StructuredDocumentation",
										"src": "71514:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 3184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "71589:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "71612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "71600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3154,
														"name": "ShortString",
														"nameLocations": [
															"71600:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "71600:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "71600:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71599:18:0"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "71641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71640:9:0"
									},
									"scope": 3283,
									"src": "71580:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "72048:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3187,
																	"src": "72068:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72062:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3195,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "72062:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72062:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72075:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "72062:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "72084:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "72062:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3221,
													"nodeType": "Block",
													"src": "72146:127:0",
													"statements": [
														{
															"expression": {
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3210,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3189,
																				"src": "72186:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 3207,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3069,
																				"src": "72160:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$3069_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "72172:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3046,
																			"src": "72160:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2977_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "72160:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$2977_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 3212,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "72193:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2976,
																	"src": "72160:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3187,
																	"src": "72201:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "72160:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 3215,
															"nodeType": "ExpressionStatement",
															"src": "72160:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3218,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3076,
																		"src": "72244:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 3216,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3072,
																		"src": "72227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$3072_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "72239:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "72227:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3072_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72227:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3194,
															"id": 3220,
															"nodeType": "Return",
															"src": "72220:42:0"
														}
													]
												},
												"id": 3222,
												"nodeType": "IfStatement",
												"src": "72058:215:0",
												"trueBody": {
													"id": 3206,
													"nodeType": "Block",
													"src": "72088:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3203,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3187,
																		"src": "72123:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3202,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3126,
																	"src": "72109:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$3072_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72109:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3194,
															"id": 3205,
															"nodeType": "Return",
															"src": "72102:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3185,
										"nodeType": "StructuredDocumentation",
										"src": "71831:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "71948:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71988:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "71974:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "71974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "72010:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "71995:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "71995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71973:43:0"
									},
									"returnParameters": {
										"id": 3194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "72035:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3191,
														"name": "ShortString",
														"nameLocations": [
															"72035:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "72035:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "72035:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72034:13:0"
									},
									"scope": 3283,
									"src": "71939:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "72519:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3237,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "72552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3235,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "72533:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$3072_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "72545:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "72533:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72533:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3239,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3076,
														"src": "72562:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72533:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3248,
													"nodeType": "Block",
													"src": "72634:37:0",
													"statements": [
														{
															"expression": {
																"id": 3246,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3230,
																"src": "72655:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 3234,
															"id": 3247,
															"nodeType": "Return",
															"src": "72648:12:0"
														}
													]
												},
												"id": 3249,
												"nodeType": "IfStatement",
												"src": "72529:142:0",
												"trueBody": {
													"id": 3245,
													"nodeType": "Block",
													"src": "72581:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3242,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "72611:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3241,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "72602:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 3243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72602:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 3234,
															"id": 3244,
															"nodeType": "Return",
															"src": "72595:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "72285:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "72419:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72452:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "72440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3226,
														"name": "ShortString",
														"nameLocations": [
															"72440:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "72440:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "72440:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "72474:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "72459:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72439:41:0"
									},
									"returnParameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "72504:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72503:15:0"
									},
									"scope": 3283,
									"src": "72410:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "73157:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3264,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3255,
																"src": "73190:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3262,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "73171:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$3072_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "73183:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "73171:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "73171:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3266,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3076,
														"src": "73200:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "73171:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3279,
													"nodeType": "Block",
													"src": "73274:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3275,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3257,
																			"src": "73301:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "73295:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3273,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "73295:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "73295:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "73308:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "73295:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3261,
															"id": 3278,
															"nodeType": "Return",
															"src": "73288:26:0"
														}
													]
												},
												"id": 3280,
												"nodeType": "IfStatement",
												"src": "73167:158:0",
												"trueBody": {
													"id": 3272,
													"nodeType": "Block",
													"src": "73219:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3269,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3255,
																		"src": "73251:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3268,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "73240:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3072_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73240:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3261,
															"id": 3271,
															"nodeType": "Return",
															"src": "73233:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "72683:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "73061:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "73096:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "73084:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3253,
														"name": "ShortString",
														"nameLocations": [
															"73084:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3072,
														"src": "73084:11:0"
													},
													"referencedDeclaration": 3072,
													"src": "73084:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "73118:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "73103:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "73103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73083:41:0"
									},
									"returnParameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "73148:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73147:9:0"
									},
									"scope": 3283,
									"src": "73052:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "70280:3053:0",
							"usedErrors": [
								3080,
								3082
							],
							"usedEvents": []
						},
						{
							"id": 3284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "73469:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3307,
							"linearizedBaseContracts": [
								3307
							],
							"name": "IERC5267",
							"nameLocation": "73505:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3285,
										"nodeType": "StructuredDocumentation",
										"src": "73520:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 3287,
									"name": "EIP712DomainChanged",
									"nameLocation": "73615:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73634:2:0"
									},
									"src": "73609:28:0"
								},
								{
									"documentation": {
										"id": 3288,
										"nodeType": "StructuredDocumentation",
										"src": "73643:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 3306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "73797:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73809:2:0"
									},
									"returnParameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "73879:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "73872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3290,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "73872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "73913:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "73899:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "73899:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "73945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "73931:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "73931:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "73974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "73966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "74003:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "73995:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "74042:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "74034:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "74034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "74077:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "74060:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "74060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3303,
													"nodeType": "ArrayTypeName",
													"src": "74060:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73858:239:0"
									},
									"scope": 3307,
									"src": "73788:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3819,
							"src": "73495:605:0",
							"usedErrors": [],
							"usedEvents": [
								3287
							]
						},
						{
							"id": 3308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "74248:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3310,
										"name": "IERC5267",
										"nameLocations": [
											"75949:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3307,
										"src": "75949:8:0"
									},
									"id": 3311,
									"nodeType": "InheritanceSpecifier",
									"src": "75949:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3309,
								"nodeType": "StructuredDocumentation",
								"src": "74277:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 3526,
							"linearizedBaseContracts": [
								3526,
								3307
							],
							"name": "EIP712",
							"nameLocation": "75939:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3313,
									"libraryName": {
										"id": 3312,
										"name": "ShortStrings",
										"nameLocations": [
											"75970:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3283,
										"src": "75970:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "75964:25:0"
								},
								{
									"constant": true,
									"id": 3318,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "76020:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "75995:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3314,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "75995:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 3316,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "76050:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 3315,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "76040:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "76040:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3320,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "76360:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76334:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3319,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "76334:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3322,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "76414:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76388:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "76388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3324,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "76460:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76434:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3323,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "76434:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3326,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "76504:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76478:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3325,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "76478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3328,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "76547:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76521:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3327,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "76521:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3331,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "76598:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76568:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3330,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3329,
											"name": "ShortString",
											"nameLocations": [
												"76568:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3072,
											"src": "76568:11:0"
										},
										"referencedDeclaration": 3072,
										"src": "76568:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3334,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "76639:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76609:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3333,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3332,
											"name": "ShortString",
											"nameLocations": [
												"76609:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3072,
											"src": "76609:11:0"
										},
										"referencedDeclaration": 3072,
										"src": "76609:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3336,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "76668:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76653:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3335,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "76653:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3338,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "76702:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3526,
									"src": "76687:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3337,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "76687:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3395,
										"nodeType": "Block",
										"src": "77344:376:0",
										"statements": [
											{
												"expression": {
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3346,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "77354:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3349,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3336,
																"src": "77393:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3347,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3341,
																"src": "77362:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "77367:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3224,
															"src": "77362:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3072_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77362:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
															"typeString": "ShortString"
														}
													},
													"src": "77354:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"id": 3352,
												"nodeType": "ExpressionStatement",
												"src": "77354:53:0"
											},
											{
												"expression": {
													"id": 3358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3353,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3334,
														"src": "77417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3356,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3338,
																"src": "77462:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3354,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3343,
																"src": "77428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "77436:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3224,
															"src": "77428:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3072_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77428:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
															"typeString": "ShortString"
														}
													},
													"src": "77417:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
														"typeString": "ShortString"
													}
												},
												"id": 3359,
												"nodeType": "ExpressionStatement",
												"src": "77417:62:0"
											},
											{
												"expression": {
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3360,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3326,
														"src": "77489:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3364,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3341,
																		"src": "77519:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "77513:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3362,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "77513:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "77513:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3361,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "77503:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77503:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "77489:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3368,
												"nodeType": "ExpressionStatement",
												"src": "77489:36:0"
											},
											{
												"expression": {
													"id": 3376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3369,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "77535:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3373,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3343,
																		"src": "77568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "77562:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3371,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "77562:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "77562:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3370,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "77552:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77552:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "77535:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3377,
												"nodeType": "ExpressionStatement",
												"src": "77535:42:0"
											},
											{
												"expression": {
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3378,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "77588:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3379,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "77605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "77611:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "77605:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "77588:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3382,
												"nodeType": "ExpressionStatement",
												"src": "77588:30:0"
											},
											{
												"expression": {
													"id": 3386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3383,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "77628:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3384,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3443,
															"src": "77653:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 3385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77653:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "77628:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3387,
												"nodeType": "ExpressionStatement",
												"src": "77628:48:0"
											},
											{
												"expression": {
													"id": 3393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3388,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "77686:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3391,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "77708:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$3526",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$3526",
																	"typeString": "contract EIP712"
																}
															],
															"id": 3390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "77700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "77700:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77700:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "77686:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3394,
												"nodeType": "ExpressionStatement",
												"src": "77686:27:0"
											}
										]
									},
									"documentation": {
										"id": 3339,
										"nodeType": "StructuredDocumentation",
										"src": "76725:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 3396,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "77315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3396,
												"src": "77301:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "77301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3343,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "77335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3396,
												"src": "77321:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "77321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77300:43:0"
									},
									"returnParameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77344:0:0"
									},
									"scope": 3526,
									"src": "77289:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3421,
										"nodeType": "Block",
										"src": "77868:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3404,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "77890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3526",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3526",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77882:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77882:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3406,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "77899:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "77882:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3408,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "77914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "77920:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "77914:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3410,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3322,
															"src": "77931:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "77914:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "77882:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3419,
													"nodeType": "Block",
													"src": "78007:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3416,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3443,
																	"src": "78028:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 3417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78028:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3401,
															"id": 3418,
															"nodeType": "Return",
															"src": "78021:30:0"
														}
													]
												},
												"id": 3420,
												"nodeType": "IfStatement",
												"src": "77878:184:0",
												"trueBody": {
													"id": 3415,
													"nodeType": "Block",
													"src": "77947:54:0",
													"statements": [
														{
															"expression": {
																"id": 3413,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3320,
																"src": "77968:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3401,
															"id": 3414,
															"nodeType": "Return",
															"src": "77961:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3397,
										"nodeType": "StructuredDocumentation",
										"src": "77726:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 3422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "77815:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77833:2:0"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3422,
												"src": "77859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3399,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "77859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77858:9:0"
									},
									"scope": 3526,
									"src": "77806:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3442,
										"nodeType": "Block",
										"src": "78138:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3430,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3318,
																	"src": "78176:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3431,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3326,
																	"src": "78187:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3432,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3328,
																	"src": "78200:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 3433,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "78216:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "78222:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "78216:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3437,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "78239:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$3526",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$3526",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 3436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "78231:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3435,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "78231:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78231:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3428,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78165:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78169:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78165:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78165:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3427,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78155:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3426,
												"id": 3441,
												"nodeType": "Return",
												"src": "78148:98:0"
											}
										]
									},
									"id": 3443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "78083:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78104:2:0"
									},
									"returnParameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "78129:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78128:9:0"
									},
									"scope": 3526,
									"src": "78074:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3458,
										"nodeType": "Block",
										"src": "78964:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3453,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3422,
																"src": "79014:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79014:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3455,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3446,
															"src": "79036:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3451,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2960,
															"src": "78981:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2960_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 3452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78998:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2959,
														"src": "78981:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78981:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3450,
												"id": 3457,
												"nodeType": "Return",
												"src": "78974:73:0"
											}
										]
									},
									"documentation": {
										"id": 3444,
										"nodeType": "StructuredDocumentation",
										"src": "78259:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 3459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "78887:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "78912:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "78904:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78903:20:0"
									},
									"returnParameters": {
										"id": 3450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "78955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78954:9:0"
									},
									"scope": 3526,
									"src": "78878:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3306
									],
									"body": {
										"id": 3500,
										"nodeType": "Block",
										"src": "79433:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "79464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3479,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3513,
																"src": "79494:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79494:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3481,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3525,
																"src": "79521:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79521:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 3483,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "79551:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "79557:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "79551:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "79586:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3526",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3526",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "79578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "79578:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79578:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "79613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "79605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3489,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "79605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79605:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "79643:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "79629:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 3493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "79633:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3494,
																	"nodeType": "ArrayTypeName",
																	"src": "79633:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 3497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "79629:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 3498,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "79450:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 3477,
												"id": 3499,
												"nodeType": "Return",
												"src": "79443:212:0"
											}
										]
									},
									"documentation": {
										"id": 3460,
										"nodeType": "StructuredDocumentation",
										"src": "79060:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 3501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "79114:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79126:2:0"
									},
									"returnParameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "79210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3462,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "79203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "79244:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79230:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "79230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "79276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79262:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "79262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3469,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "79305:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3471,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "79334:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79326:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3473,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "79373:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "79408:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "79391:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3474,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "79391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3475,
													"nodeType": "ArrayTypeName",
													"src": "79391:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79189:239:0"
									},
									"scope": 3526,
									"src": "79105:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3512,
										"nodeType": "Block",
										"src": "80043:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3509,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3336,
															"src": "80087:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3507,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "80060:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																"typeString": "ShortString"
															}
														},
														"id": 3508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "80066:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3251,
														"src": "80060:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3072_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3072_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80060:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3506,
												"id": 3511,
												"nodeType": "Return",
												"src": "80053:48:0"
											}
										]
									},
									"documentation": {
										"id": 3502,
										"nodeType": "StructuredDocumentation",
										"src": "79668:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "79991:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80002:2:0"
									},
									"returnParameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3513,
												"src": "80028:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "80028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80027:15:0"
									},
									"scope": 3526,
									"src": "79982:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3524,
										"nodeType": "Block",
										"src": "80498:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3521,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3338,
															"src": "80545:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3519,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "80515:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$3072",
																"typeString": "ShortString"
															}
														},
														"id": 3520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "80524:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3251,
														"src": "80515:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3072_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3072_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80515:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3518,
												"id": 3523,
												"nodeType": "Return",
												"src": "80508:54:0"
											}
										]
									},
									"documentation": {
										"id": 3514,
										"nodeType": "StructuredDocumentation",
										"src": "80114:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "80443:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80457:2:0"
									},
									"returnParameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3525,
												"src": "80483:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "80483:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80482:15:0"
									},
									"scope": 3526,
									"src": "80434:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "75921:4650:0",
							"usedErrors": [
								3080,
								3082
							],
							"usedEvents": [
								3287
							]
						},
						{
							"id": 3527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "80692:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3528,
								"nodeType": "StructuredDocumentation",
								"src": "80718:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 3593,
							"linearizedBaseContracts": [
								3593
							],
							"name": "Nonces",
							"nameLocation": "80820:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3529,
										"nodeType": "StructuredDocumentation",
										"src": "80833:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 3535,
									"name": "InvalidAccountNonce",
									"nameLocation": "80934:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3531,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "80962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "80954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "80979:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "80971:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "80971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80953:39:0"
									},
									"src": "80928:65:0"
								},
								{
									"constant": false,
									"id": 3539,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "81043:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3593,
									"src": "80999:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3538,
										"keyName": "account",
										"keyNameLocation": "81015:7:0",
										"keyType": {
											"id": 3536,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "81007:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "80999:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3537,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "81026:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3551,
										"nodeType": "Block",
										"src": "81200:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3547,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "81217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3549,
													"indexExpression": {
														"id": 3548,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3542,
														"src": "81225:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "81217:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3550,
												"nodeType": "Return",
												"src": "81210:21:0"
											}
										]
									},
									"documentation": {
										"id": 3540,
										"nodeType": "StructuredDocumentation",
										"src": "81057:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 3552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "81140:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "81155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3552,
												"src": "81147:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81146:15:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3552,
												"src": "81191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81190:9:0"
									},
									"scope": 3593,
									"src": "81131:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3566,
										"nodeType": "Block",
										"src": "81421:326:0",
										"statements": [
											{
												"id": 3565,
												"nodeType": "UncheckedBlock",
												"src": "81624:117:0",
												"statements": [
													{
														"expression": {
															"id": 3563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "81714:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 3560,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3539,
																	"src": "81714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3562,
																"indexExpression": {
																	"id": 3561,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3555,
																	"src": "81722:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "81714:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3559,
														"id": 3564,
														"nodeType": "Return",
														"src": "81707:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3553,
										"nodeType": "StructuredDocumentation",
										"src": "81244:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 3567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "81361:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3555,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "81379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "81371:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81370:15:0"
									},
									"returnParameters": {
										"id": 3559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "81412:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81411:9:0"
									},
									"scope": 3593,
									"src": "81352:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3591,
										"nodeType": "Block",
										"src": "81931:149:0",
										"statements": [
											{
												"assignments": [
													3576
												],
												"declarations": [
													{
														"constant": false,
														"id": 3576,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "81949:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3591,
														"src": "81941:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "81941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3580,
												"initialValue": {
													"arguments": [
														{
															"id": 3578,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "81969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3577,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3567,
														"src": "81959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 3579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81959:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "81941:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3581,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3572,
														"src": "81989:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3582,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3576,
														"src": "81998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "81989:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3590,
												"nodeType": "IfStatement",
												"src": "81985:89:0",
												"trueBody": {
													"id": 3589,
													"nodeType": "Block",
													"src": "82007:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3585,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3570,
																		"src": "82048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3586,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3576,
																		"src": "82055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3584,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3535,
																	"src": "82028:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 3587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "82028:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3588,
															"nodeType": "RevertStatement",
															"src": "82021:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3568,
										"nodeType": "StructuredDocumentation",
										"src": "81753:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 3592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "81867:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "81892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "81884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3572,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "81907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "81899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81883:30:0"
									},
									"returnParameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "81931:0:0"
									},
									"scope": 3593,
									"src": "81858:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "80802:1280:0",
							"usedErrors": [
								3535
							],
							"usedEvents": []
						},
						{
							"id": 3594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "82248:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3596,
										"name": "ERC20",
										"nameLocations": [
											"82800:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "82800:5:0"
									},
									"id": 3597,
									"nodeType": "InheritanceSpecifier",
									"src": "82800:5:0"
								},
								{
									"baseName": {
										"id": 3598,
										"name": "IERC20Permit",
										"nameLocations": [
											"82807:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1135,
										"src": "82807:12:0"
									},
									"id": 3599,
									"nodeType": "InheritanceSpecifier",
									"src": "82807:12:0"
								},
								{
									"baseName": {
										"id": 3600,
										"name": "EIP712",
										"nameLocations": [
											"82821:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3526,
										"src": "82821:6:0"
									},
									"id": 3601,
									"nodeType": "InheritanceSpecifier",
									"src": "82821:6:0"
								},
								{
									"baseName": {
										"id": 3602,
										"name": "Nonces",
										"nameLocations": [
											"82829:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3593,
										"src": "82829:6:0"
									},
									"id": 3603,
									"nodeType": "InheritanceSpecifier",
									"src": "82829:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3595,
								"nodeType": "StructuredDocumentation",
								"src": "82279:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3736,
							"linearizedBaseContracts": [
								3736,
								3593,
								3526,
								3307,
								1135,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Permit",
							"nameLocation": "82785:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3608,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "82867:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3736,
									"src": "82842:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3604,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "82842:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3606,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "82903:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3605,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "82893:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3607,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "82893:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3609,
										"nodeType": "StructuredDocumentation",
										"src": "82995:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3613,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "83058:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3611,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "83090:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "83082:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "83082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "83081:18:0"
									},
									"src": "83052:48:0"
								},
								{
									"documentation": {
										"id": 3614,
										"nodeType": "StructuredDocumentation",
										"src": "83106:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3620,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "83162:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "83191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3620,
												"src": "83183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "83183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "83207:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3620,
												"src": "83199:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "83199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "83182:31:0"
									},
									"src": "83156:58:0"
								},
								{
									"body": {
										"id": 3630,
										"nodeType": "Block",
										"src": "83495:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3621,
										"nodeType": "StructuredDocumentation",
										"src": "83220:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3631,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3626,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3623,
													"src": "83484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "83490:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3628,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3625,
												"name": "EIP712",
												"nameLocations": [
													"83477:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3526,
												"src": "83477:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "83477:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3623,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "83471:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3631,
												"src": "83457:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "83457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "83456:20:0"
									},
									"returnParameters": {
										"id": 3629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "83495:0:0"
									},
									"scope": 3736,
									"src": "83445:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1120
									],
									"body": {
										"id": 3707,
										"nodeType": "Block",
										"src": "83740:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3649,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "83754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "83760:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "83754:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3651,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3640,
														"src": "83772:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "83754:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3658,
												"nodeType": "IfStatement",
												"src": "83750:97:0",
												"trueBody": {
													"id": 3657,
													"nodeType": "Block",
													"src": "83782:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3654,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3640,
																		"src": "83827:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3653,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3613,
																	"src": "83803:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "83803:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3656,
															"nodeType": "RevertStatement",
															"src": "83796:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3660
												],
												"declarations": [
													{
														"constant": false,
														"id": 3660,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "83865:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "83857:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3659,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "83857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3674,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3664,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3608,
																	"src": "83899:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3665,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3634,
																	"src": "83916:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3666,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3636,
																	"src": "83923:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3638,
																	"src": "83932:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3669,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3634,
																			"src": "83949:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3668,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3567,
																		"src": "83939:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "83939:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3671,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3640,
																	"src": "83957:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3662,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "83888:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "83892:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "83888:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "83888:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3661,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "83878:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "83878:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "83857:110:0"
											},
											{
												"assignments": [
													3676
												],
												"declarations": [
													{
														"constant": false,
														"id": 3676,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "83986:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "83978:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3675,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "83978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3680,
												"initialValue": {
													"arguments": [
														{
															"id": 3678,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3660,
															"src": "84010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3677,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3459,
														"src": "83993:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "83993:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "83978:43:0"
											},
											{
												"assignments": [
													3682
												],
												"declarations": [
													{
														"constant": false,
														"id": 3682,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "84040:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "84032:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "84032:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3690,
												"initialValue": {
													"arguments": [
														{
															"id": 3685,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3676,
															"src": "84063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3686,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3642,
															"src": "84069:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3687,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "84072:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3688,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "84075:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3683,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "84049:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1482_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "84055:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "84049:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "84049:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "84032:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3691,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3682,
														"src": "84091:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3692,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3634,
														"src": "84101:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "84091:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3700,
												"nodeType": "IfStatement",
												"src": "84087:88:0",
												"trueBody": {
													"id": 3699,
													"nodeType": "Block",
													"src": "84108:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3695,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3682,
																		"src": "84150:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3696,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3634,
																		"src": "84158:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3694,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3620,
																	"src": "84129:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "84129:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3698,
															"nodeType": "RevertStatement",
															"src": "84122:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3702,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3634,
															"src": "84194:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "84201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3704,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3638,
															"src": "84210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3701,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "84185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "84185:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3706,
												"nodeType": "ExpressionStatement",
												"src": "84185:31:0"
											}
										]
									},
									"documentation": {
										"id": 3632,
										"nodeType": "StructuredDocumentation",
										"src": "83503:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "83560:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "83584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "83576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "83607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "83599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "83632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "83624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "83655:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83647:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "83647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3642,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "83679:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3641,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "83673:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3644,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "83698:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83690:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3643,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "83690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3646,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "83717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "83709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "83709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "83566:158:0"
									},
									"returnParameters": {
										"id": 3648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "83740:0:0"
									},
									"scope": 3736,
									"src": "83551:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1128,
										3552
									],
									"body": {
										"id": 3724,
										"nodeType": "Block",
										"src": "84377:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3721,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3711,
															"src": "84407:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3719,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "84394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3736_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "84400:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3552,
														"src": "84394:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "84394:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3718,
												"id": 3723,
												"nodeType": "Return",
												"src": "84387:26:0"
											}
										]
									},
									"documentation": {
										"id": 3709,
										"nodeType": "StructuredDocumentation",
										"src": "84229:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "84286:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3715,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3713,
												"name": "IERC20Permit",
												"nameLocations": [
													"84337:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1135,
												"src": "84337:12:0"
											},
											{
												"id": 3714,
												"name": "Nonces",
												"nameLocations": [
													"84351:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3593,
												"src": "84351:6:0"
											}
										],
										"src": "84328:30:0"
									},
									"parameters": {
										"id": 3712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "84301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "84293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "84293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "84292:15:0"
									},
									"returnParameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "84368:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "84368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "84367:9:0"
									},
									"scope": 3736,
									"src": "84277:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 3734,
										"nodeType": "Block",
										"src": "84595:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3731,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3422,
														"src": "84612:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "84612:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3730,
												"id": 3733,
												"nodeType": "Return",
												"src": "84605:27:0"
											}
										]
									},
									"documentation": {
										"id": 3726,
										"nodeType": "StructuredDocumentation",
										"src": "84426:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "84536:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "84552:2:0"
									},
									"returnParameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "84586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "84586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "84585:9:0"
									},
									"scope": 3736,
									"src": "84527:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3819,
							"src": "82767:1874:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								1145,
								1150,
								1155,
								3080,
								3082,
								3535,
								3613,
								3620
							],
							"usedEvents": [
								11,
								20,
								3287
							]
						},
						{
							"id": 3737,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "84723:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3738,
										"name": "ERC20",
										"nameLocations": [
											"84774:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "84774:5:0"
									},
									"id": 3739,
									"nodeType": "InheritanceSpecifier",
									"src": "84774:5:0"
								},
								{
									"baseName": {
										"id": 3740,
										"name": "ERC20Burnable",
										"nameLocations": [
											"84781:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "84781:13:0"
									},
									"id": 3741,
									"nodeType": "InheritanceSpecifier",
									"src": "84781:13:0"
								},
								{
									"baseName": {
										"id": 3742,
										"name": "ERC20Pausable",
										"nameLocations": [
											"84796:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 955,
										"src": "84796:13:0"
									},
									"id": 3743,
									"nodeType": "InheritanceSpecifier",
									"src": "84796:13:0"
								},
								{
									"baseName": {
										"id": 3744,
										"name": "Ownable",
										"nameLocations": [
											"84811:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "84811:7:0"
									},
									"id": 3745,
									"nodeType": "InheritanceSpecifier",
									"src": "84811:7:0"
								},
								{
									"baseName": {
										"id": 3746,
										"name": "ERC20Permit",
										"nameLocations": [
											"84820:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3736,
										"src": "84820:11:0"
									},
									"id": 3747,
									"nodeType": "InheritanceSpecifier",
									"src": "84820:11:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3818,
							"linearizedBaseContracts": [
								3818,
								3736,
								3593,
								3526,
								3307,
								1135,
								1100,
								955,
								926,
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "MyToken",
							"nameLocation": "84763:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3762,
										"nodeType": "Block",
										"src": "84969:2:0",
										"statements": []
									},
									"id": 3763,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 3752,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "84886:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 3753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "84897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 3754,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3751,
												"name": "ERC20",
												"nameLocations": [
													"84880:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "84880:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "84880:23:0"
										},
										{
											"arguments": [
												{
													"id": 3756,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3749,
													"src": "84920:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3757,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3755,
												"name": "Ownable",
												"nameLocations": [
													"84912:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1100,
												"src": "84912:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "84912:21:0"
										},
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 3759,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "84954:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												}
											],
											"id": 3760,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3758,
												"name": "ERC20Permit",
												"nameLocations": [
													"84942:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3736,
												"src": "84942:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "84942:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3749,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "84858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3763,
												"src": "84850:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "84850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "84849:22:0"
									},
									"returnParameters": {
										"id": 3761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "84969:0:0"
									},
									"scope": 3818,
									"src": "84838:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3771,
										"nodeType": "Block",
										"src": "85011:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3768,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "85021:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "85021:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3770,
												"nodeType": "ExpressionStatement",
												"src": "85021:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3765,
												"name": "onlyOwner",
												"nameLocations": [
													"85001:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "85001:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "85001:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "84986:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "84991:2:0"
									},
									"returnParameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "85011:0:0"
									},
									"scope": 3818,
									"src": "84977:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3780,
										"nodeType": "Block",
										"src": "85078:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3777,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "85088:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "85088:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3779,
												"nodeType": "ExpressionStatement",
												"src": "85088:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3774,
												"name": "onlyOwner",
												"nameLocations": [
													"85068:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "85068:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "85068:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "85051:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "85058:2:0"
									},
									"returnParameters": {
										"id": 3776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "85078:0:0"
									},
									"scope": 3818,
									"src": "85042:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3795,
										"nodeType": "Block",
										"src": "85170:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3791,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3783,
															"src": "85186:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3792,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3785,
															"src": "85190:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3790,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "85180:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "85180:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3794,
												"nodeType": "ExpressionStatement",
												"src": "85180:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3787,
												"name": "onlyOwner",
												"nameLocations": [
													"85160:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "85160:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "85160:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "85120:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "85133:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "85125:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3785,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "85145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "85137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "85137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "85124:28:0"
									},
									"returnParameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "85170:0:0"
									},
									"scope": 3818,
									"src": "85111:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										578,
										954
									],
									"body": {
										"id": 3816,
										"nodeType": "Block",
										"src": "85396:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3811,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "85420:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3812,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3800,
															"src": "85426:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3813,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3802,
															"src": "85430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3808,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "85406:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$3818_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 3810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "85412:7:0",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "85406:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "85406:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3815,
												"nodeType": "ExpressionStatement",
												"src": "85406:30:0"
											}
										]
									},
									"id": 3817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "85287:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3806,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3804,
												"name": "ERC20",
												"nameLocations": [
													"85370:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "85370:5:0"
											},
											{
												"id": 3805,
												"name": "ERC20Pausable",
												"nameLocations": [
													"85377:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 955,
												"src": "85377:13:0"
											}
										],
										"src": "85361:30:0"
									},
									"parameters": {
										"id": 3803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "85303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3817,
												"src": "85295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "85317:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3817,
												"src": "85309:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "85329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3817,
												"src": "85321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "85321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "85294:41:0"
									},
									"returnParameters": {
										"id": 3807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "85396:0:0"
									},
									"scope": 3818,
									"src": "85278:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3819,
							"src": "84754:691:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								831,
								834,
								966,
								971,
								1145,
								1150,
								1155,
								3080,
								3082,
								3535,
								3613,
								3620
							],
							"usedEvents": [
								11,
								20,
								823,
								828,
								977,
								3287
							]
						}
					],
					"src": "133:85313:0"
				},
				"id": 0
			}
		}
	}
}